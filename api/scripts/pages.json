[{"name":"abstract val alignment: Alignment","description":"coil.compose.SubcomposeAsyncImageScope.alignment","location":"coil-compose-base/coil.compose/-subcompose-async-image-scope/alignment.html","searchKeys":["alignment","abstract val alignment: Alignment","coil.compose.SubcomposeAsyncImageScope.alignment"]},{"name":"abstract val alpha: Float","description":"coil.compose.SubcomposeAsyncImageScope.alpha","location":"coil-compose-base/coil.compose/-subcompose-async-image-scope/alpha.html","searchKeys":["alpha","abstract val alpha: Float","coil.compose.SubcomposeAsyncImageScope.alpha"]},{"name":"abstract val colorFilter: ColorFilter?","description":"coil.compose.SubcomposeAsyncImageScope.colorFilter","location":"coil-compose-base/coil.compose/-subcompose-async-image-scope/color-filter.html","searchKeys":["colorFilter","abstract val colorFilter: ColorFilter?","coil.compose.SubcomposeAsyncImageScope.colorFilter"]},{"name":"abstract val contentDescription: String?","description":"coil.compose.SubcomposeAsyncImageScope.contentDescription","location":"coil-compose-base/coil.compose/-subcompose-async-image-scope/content-description.html","searchKeys":["contentDescription","abstract val contentDescription: String?","coil.compose.SubcomposeAsyncImageScope.contentDescription"]},{"name":"abstract val contentScale: ContentScale","description":"coil.compose.SubcomposeAsyncImageScope.contentScale","location":"coil-compose-base/coil.compose/-subcompose-async-image-scope/content-scale.html","searchKeys":["contentScale","abstract val contentScale: ContentScale","coil.compose.SubcomposeAsyncImageScope.contentScale"]},{"name":"abstract val painter: AsyncImagePainter","description":"coil.compose.SubcomposeAsyncImageScope.painter","location":"coil-compose-base/coil.compose/-subcompose-async-image-scope/painter.html","searchKeys":["painter","abstract val painter: AsyncImagePainter","coil.compose.SubcomposeAsyncImageScope.painter"]},{"name":"abstract val painter: Painter?","description":"coil.compose.AsyncImagePainter.State.painter","location":"coil-compose-base/coil.compose/-async-image-painter/-state/painter.html","searchKeys":["painter","abstract val painter: Painter?","coil.compose.AsyncImagePainter.State.painter"]},{"name":"class AsyncImagePainter : Painter, RememberObserver","description":"coil.compose.AsyncImagePainter","location":"coil-compose-base/coil.compose/-async-image-painter/index.html","searchKeys":["AsyncImagePainter","class AsyncImagePainter : Painter, RememberObserver","coil.compose.AsyncImagePainter"]},{"name":"constructor(painter: Painter, result: SuccessResult)","description":"coil.compose.AsyncImagePainter.State.Success.Success","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-success/-success.html","searchKeys":["Success","constructor(painter: Painter, result: SuccessResult)","coil.compose.AsyncImagePainter.State.Success.Success"]},{"name":"constructor(painter: Painter?)","description":"coil.compose.AsyncImagePainter.State.Loading.Loading","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-loading/-loading.html","searchKeys":["Loading","constructor(painter: Painter?)","coil.compose.AsyncImagePainter.State.Loading.Loading"]},{"name":"constructor(painter: Painter?, result: ErrorResult)","description":"coil.compose.AsyncImagePainter.State.Error.Error","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-error/-error.html","searchKeys":["Error","constructor(painter: Painter?, result: ErrorResult)","coil.compose.AsyncImagePainter.State.Error.Error"]},{"name":"data class Error(val painter: Painter?, val result: ErrorResult) : AsyncImagePainter.State","description":"coil.compose.AsyncImagePainter.State.Error","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-error/index.html","searchKeys":["Error","data class Error(val painter: Painter?, val result: ErrorResult) : AsyncImagePainter.State","coil.compose.AsyncImagePainter.State.Error"]},{"name":"data class Loading(val painter: Painter?) : AsyncImagePainter.State","description":"coil.compose.AsyncImagePainter.State.Loading","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-loading/index.html","searchKeys":["Loading","data class Loading(val painter: Painter?) : AsyncImagePainter.State","coil.compose.AsyncImagePainter.State.Loading"]},{"name":"data class Success(val painter: Painter, val result: SuccessResult) : AsyncImagePainter.State","description":"coil.compose.AsyncImagePainter.State.Success","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-success/index.html","searchKeys":["Success","data class Success(val painter: Painter, val result: SuccessResult) : AsyncImagePainter.State","coil.compose.AsyncImagePainter.State.Success"]},{"name":"data object Empty : AsyncImagePainter.State","description":"coil.compose.AsyncImagePainter.State.Empty","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-empty/index.html","searchKeys":["Empty","data object Empty : AsyncImagePainter.State","coil.compose.AsyncImagePainter.State.Empty"]},{"name":"fun AsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","description":"coil.compose.AsyncImage","location":"coil-compose-base/coil.compose/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","coil.compose.AsyncImage"]},{"name":"fun AsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","description":"coil.compose.AsyncImage","location":"coil-compose-base/coil.compose/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","coil.compose.AsyncImage"]},{"name":"fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, loading: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Error) -> Unit? = null, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","description":"coil.compose.SubcomposeAsyncImage","location":"coil-compose-base/coil.compose/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, loading: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Error) -> Unit? = null, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","coil.compose.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"coil.compose.SubcomposeAsyncImage","location":"coil-compose-base/coil.compose/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, imageLoader: ImageLoader, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","coil.compose.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImageScope.SubcomposeAsyncImageContent(modifier: Modifier = Modifier, painter: Painter = this.painter, contentDescription: String? = this.contentDescription, alignment: Alignment = this.alignment, contentScale: ContentScale = this.contentScale, alpha: Float = this.alpha, colorFilter: ColorFilter? = this.colorFilter)","description":"coil.compose.SubcomposeAsyncImageContent","location":"coil-compose-base/coil.compose/-subcompose-async-image-content.html","searchKeys":["SubcomposeAsyncImageContent","fun SubcomposeAsyncImageScope.SubcomposeAsyncImageContent(modifier: Modifier = Modifier, painter: Painter = this.painter, contentDescription: String? = this.contentDescription, alignment: Alignment = this.alignment, contentScale: ContentScale = this.contentScale, alpha: Float = this.alpha, colorFilter: ColorFilter? = this.colorFilter)","coil.compose.SubcomposeAsyncImageContent"]},{"name":"fun rememberAsyncImagePainter(model: Any?, imageLoader: ImageLoader, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"coil.compose.rememberAsyncImagePainter","location":"coil-compose-base/coil.compose/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(model: Any?, imageLoader: ImageLoader, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","coil.compose.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(model: Any?, imageLoader: ImageLoader, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"coil.compose.rememberAsyncImagePainter","location":"coil-compose-base/coil.compose/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(model: Any?, imageLoader: ImageLoader, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","coil.compose.rememberAsyncImagePainter"]},{"name":"interface SubcomposeAsyncImageScope : BoxScope","description":"coil.compose.SubcomposeAsyncImageScope","location":"coil-compose-base/coil.compose/-subcompose-async-image-scope/index.html","searchKeys":["SubcomposeAsyncImageScope","interface SubcomposeAsyncImageScope : BoxScope","coil.compose.SubcomposeAsyncImageScope"]},{"name":"object Companion","description":"coil.compose.AsyncImagePainter.Companion","location":"coil-compose-base/coil.compose/-async-image-painter/-companion/index.html","searchKeys":["Companion","object Companion","coil.compose.AsyncImagePainter.Companion"]},{"name":"open override fun onAbandoned()","description":"coil.compose.AsyncImagePainter.onAbandoned","location":"coil-compose-base/coil.compose/-async-image-painter/on-abandoned.html","searchKeys":["onAbandoned","open override fun onAbandoned()","coil.compose.AsyncImagePainter.onAbandoned"]},{"name":"open override fun onForgotten()","description":"coil.compose.AsyncImagePainter.onForgotten","location":"coil-compose-base/coil.compose/-async-image-painter/on-forgotten.html","searchKeys":["onForgotten","open override fun onForgotten()","coil.compose.AsyncImagePainter.onForgotten"]},{"name":"open override fun onRemembered()","description":"coil.compose.AsyncImagePainter.onRemembered","location":"coil-compose-base/coil.compose/-async-image-painter/on-remembered.html","searchKeys":["onRemembered","open override fun onRemembered()","coil.compose.AsyncImagePainter.onRemembered"]},{"name":"open override val intrinsicSize: Size","description":"coil.compose.AsyncImagePainter.intrinsicSize","location":"coil-compose-base/coil.compose/-async-image-painter/intrinsic-size.html","searchKeys":["intrinsicSize","open override val intrinsicSize: Size","coil.compose.AsyncImagePainter.intrinsicSize"]},{"name":"open override val painter: Painter","description":"coil.compose.AsyncImagePainter.State.Success.painter","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-success/painter.html","searchKeys":["painter","open override val painter: Painter","coil.compose.AsyncImagePainter.State.Success.painter"]},{"name":"open override val painter: Painter?","description":"coil.compose.AsyncImagePainter.State.Empty.painter","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-empty/painter.html","searchKeys":["painter","open override val painter: Painter?","coil.compose.AsyncImagePainter.State.Empty.painter"]},{"name":"open override val painter: Painter?","description":"coil.compose.AsyncImagePainter.State.Error.painter","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-error/painter.html","searchKeys":["painter","open override val painter: Painter?","coil.compose.AsyncImagePainter.State.Error.painter"]},{"name":"open override val painter: Painter?","description":"coil.compose.AsyncImagePainter.State.Loading.painter","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-loading/painter.html","searchKeys":["painter","open override val painter: Painter?","coil.compose.AsyncImagePainter.State.Loading.painter"]},{"name":"sealed class State","description":"coil.compose.AsyncImagePainter.State","location":"coil-compose-base/coil.compose/-async-image-painter/-state/index.html","searchKeys":["State","sealed class State","coil.compose.AsyncImagePainter.State"]},{"name":"val DefaultTransform: (AsyncImagePainter.State) -> AsyncImagePainter.State","description":"coil.compose.AsyncImagePainter.Companion.DefaultTransform","location":"coil-compose-base/coil.compose/-async-image-painter/-companion/-default-transform.html","searchKeys":["DefaultTransform","val DefaultTransform: (AsyncImagePainter.State) -> AsyncImagePainter.State","coil.compose.AsyncImagePainter.Companion.DefaultTransform"]},{"name":"val result: ErrorResult","description":"coil.compose.AsyncImagePainter.State.Error.result","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-error/result.html","searchKeys":["result","val result: ErrorResult","coil.compose.AsyncImagePainter.State.Error.result"]},{"name":"val result: SuccessResult","description":"coil.compose.AsyncImagePainter.State.Success.result","location":"coil-compose-base/coil.compose/-async-image-painter/-state/-success/result.html","searchKeys":["result","val result: SuccessResult","coil.compose.AsyncImagePainter.State.Success.result"]},{"name":"var imageLoader: ImageLoader","description":"coil.compose.AsyncImagePainter.imageLoader","location":"coil-compose-base/coil.compose/-async-image-painter/image-loader.html","searchKeys":["imageLoader","var imageLoader: ImageLoader","coil.compose.AsyncImagePainter.imageLoader"]},{"name":"var request: ImageRequest","description":"coil.compose.AsyncImagePainter.request","location":"coil-compose-base/coil.compose/-async-image-painter/request.html","searchKeys":["request","var request: ImageRequest","coil.compose.AsyncImagePainter.request"]},{"name":"var state: AsyncImagePainter.State","description":"coil.compose.AsyncImagePainter.state","location":"coil-compose-base/coil.compose/-async-image-painter/state.html","searchKeys":["state","var state: AsyncImagePainter.State","coil.compose.AsyncImagePainter.state"]},{"name":"fun AsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","description":"coil.compose.AsyncImage","location":"coil-compose-singleton/coil.compose/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","coil.compose.AsyncImage"]},{"name":"fun AsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","description":"coil.compose.AsyncImage","location":"coil-compose-singleton/coil.compose/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","coil.compose.AsyncImage"]},{"name":"fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, loading: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Error) -> Unit? = null, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","description":"coil.compose.SubcomposeAsyncImage","location":"coil-compose-singleton/coil.compose/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, loading: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Loading) -> Unit? = null, success: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Success) -> Unit? = null, error: SubcomposeAsyncImageScope.(AsyncImagePainter.State.Error) -> Unit? = null, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality)","coil.compose.SubcomposeAsyncImage"]},{"name":"fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","description":"coil.compose.SubcomposeAsyncImage","location":"coil-compose-singleton/coil.compose/-subcompose-async-image.html","searchKeys":["SubcomposeAsyncImage","fun SubcomposeAsyncImage(model: Any?, contentDescription: String?, modifier: Modifier = Modifier, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, alignment: Alignment = Alignment.Center, contentScale: ContentScale = ContentScale.Fit, alpha: Float = DefaultAlpha, colorFilter: ColorFilter? = null, filterQuality: FilterQuality = DefaultFilterQuality, content: SubcomposeAsyncImageScope.() -> Unit)","coil.compose.SubcomposeAsyncImage"]},{"name":"fun rememberAsyncImagePainter(model: Any?, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"coil.compose.rememberAsyncImagePainter","location":"coil-compose-singleton/coil.compose/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(model: Any?, placeholder: Painter? = null, error: Painter? = null, fallback: Painter? = error, onLoading: (AsyncImagePainter.State.Loading) -> Unit? = null, onSuccess: (AsyncImagePainter.State.Success) -> Unit? = null, onError: (AsyncImagePainter.State.Error) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","coil.compose.rememberAsyncImagePainter"]},{"name":"fun rememberAsyncImagePainter(model: Any?, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","description":"coil.compose.rememberAsyncImagePainter","location":"coil-compose-singleton/coil.compose/remember-async-image-painter.html","searchKeys":["rememberAsyncImagePainter","fun rememberAsyncImagePainter(model: Any?, transform: (AsyncImagePainter.State) -> AsyncImagePainter.State = DefaultTransform, onState: (AsyncImagePainter.State) -> Unit? = null, contentScale: ContentScale = ContentScale.Fit, filterQuality: FilterQuality = DefaultFilterQuality): AsyncImagePainter","coil.compose.rememberAsyncImagePainter"]},{"name":"abstract suspend fun intercept(chain: Interceptor.Chain): ImageResult?","description":"coil.test.FakeImageLoaderEngine.OptionalInterceptor.intercept","location":"coil-test/coil.test/-fake-image-loader-engine/-optional-interceptor/intercept.html","searchKeys":["intercept","abstract suspend fun intercept(chain: Interceptor.Chain): ImageResult?","coil.test.FakeImageLoaderEngine.OptionalInterceptor.intercept"]},{"name":"abstract suspend fun transform(request: ImageRequest): ImageRequest","description":"coil.test.FakeImageLoaderEngine.RequestTransformer.transform","location":"coil-test/coil.test/-fake-image-loader-engine/-request-transformer/transform.html","searchKeys":["transform","abstract suspend fun transform(request: ImageRequest): ImageRequest","coil.test.FakeImageLoaderEngine.RequestTransformer.transform"]},{"name":"class Builder","description":"coil.test.FakeImageLoaderEngine.Builder","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/index.html","searchKeys":["Builder","class Builder","coil.test.FakeImageLoaderEngine.Builder"]},{"name":"class FakeImageLoaderEngine : Interceptor","description":"coil.test.FakeImageLoaderEngine","location":"coil-test/coil.test/-fake-image-loader-engine/index.html","searchKeys":["FakeImageLoaderEngine","class FakeImageLoaderEngine : Interceptor","coil.test.FakeImageLoaderEngine"]},{"name":"constructor()","description":"coil.test.FakeImageLoaderEngine.Builder.Builder","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/-builder.html","searchKeys":["Builder","constructor()","coil.test.FakeImageLoaderEngine.Builder.Builder"]},{"name":"constructor(engine: FakeImageLoaderEngine)","description":"coil.test.FakeImageLoaderEngine.Builder.Builder","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/-builder.html","searchKeys":["Builder","constructor(engine: FakeImageLoaderEngine)","coil.test.FakeImageLoaderEngine.Builder.Builder"]},{"name":"constructor(request: FakeImageLoaderEngine.RequestValue, result: ImageResult)","description":"coil.test.FakeImageLoaderEngine.ResultValue.ResultValue","location":"coil-test/coil.test/-fake-image-loader-engine/-result-value/-result-value.html","searchKeys":["ResultValue","constructor(request: FakeImageLoaderEngine.RequestValue, result: ImageResult)","coil.test.FakeImageLoaderEngine.ResultValue.ResultValue"]},{"name":"constructor(request: ImageRequest, size: Size)","description":"coil.test.FakeImageLoaderEngine.RequestValue.RequestValue","location":"coil-test/coil.test/-fake-image-loader-engine/-request-value/-request-value.html","searchKeys":["RequestValue","constructor(request: ImageRequest, size: Size)","coil.test.FakeImageLoaderEngine.RequestValue.RequestValue"]},{"name":"data class RequestValue(val request: ImageRequest, val size: Size)","description":"coil.test.FakeImageLoaderEngine.RequestValue","location":"coil-test/coil.test/-fake-image-loader-engine/-request-value/index.html","searchKeys":["RequestValue","data class RequestValue(val request: ImageRequest, val size: Size)","coil.test.FakeImageLoaderEngine.RequestValue"]},{"name":"data class ResultValue(val request: FakeImageLoaderEngine.RequestValue, val result: ImageResult)","description":"coil.test.FakeImageLoaderEngine.ResultValue","location":"coil-test/coil.test/-fake-image-loader-engine/-result-value/index.html","searchKeys":["ResultValue","data class ResultValue(val request: FakeImageLoaderEngine.RequestValue, val result: ImageResult)","coil.test.FakeImageLoaderEngine.ResultValue"]},{"name":"fun FakeImageLoaderEngine(drawable: Drawable): FakeImageLoaderEngine","description":"coil.test.FakeImageLoaderEngine","location":"coil-test/coil.test/-fake-image-loader-engine.html","searchKeys":["FakeImageLoaderEngine","fun FakeImageLoaderEngine(drawable: Drawable): FakeImageLoaderEngine","coil.test.FakeImageLoaderEngine"]},{"name":"fun addInterceptor(interceptor: FakeImageLoaderEngine.OptionalInterceptor): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.addInterceptor","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/add-interceptor.html","searchKeys":["addInterceptor","fun addInterceptor(interceptor: FakeImageLoaderEngine.OptionalInterceptor): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.addInterceptor"]},{"name":"fun build(): FakeImageLoaderEngine","description":"coil.test.FakeImageLoaderEngine.Builder.build","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/build.html","searchKeys":["build","fun build(): FakeImageLoaderEngine","coil.test.FakeImageLoaderEngine.Builder.build"]},{"name":"fun clearInterceptors(): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.clearInterceptors","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/clear-interceptors.html","searchKeys":["clearInterceptors","fun clearInterceptors(): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.clearInterceptors"]},{"name":"fun default(drawable: Drawable): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.default","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/default.html","searchKeys":["default","fun default(drawable: Drawable): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.default"]},{"name":"fun default(interceptor: Interceptor): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.default","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/default.html","searchKeys":["default","fun default(interceptor: Interceptor): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.default"]},{"name":"fun intercept(data: Any, drawable: Drawable): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.intercept","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/intercept.html","searchKeys":["intercept","fun intercept(data: Any, drawable: Drawable): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.intercept"]},{"name":"fun intercept(predicate: (data: Any) -> Boolean, drawable: Drawable): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.intercept","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/intercept.html","searchKeys":["intercept","fun intercept(predicate: (data: Any) -> Boolean, drawable: Drawable): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.intercept"]},{"name":"fun intercept(predicate: (data: Any) -> Boolean, interceptor: FakeImageLoaderEngine.OptionalInterceptor): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.intercept","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/intercept.html","searchKeys":["intercept","fun intercept(predicate: (data: Any) -> Boolean, interceptor: FakeImageLoaderEngine.OptionalInterceptor): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.intercept"]},{"name":"fun interface OptionalInterceptor","description":"coil.test.FakeImageLoaderEngine.OptionalInterceptor","location":"coil-test/coil.test/-fake-image-loader-engine/-optional-interceptor/index.html","searchKeys":["OptionalInterceptor","fun interface OptionalInterceptor","coil.test.FakeImageLoaderEngine.OptionalInterceptor"]},{"name":"fun interface RequestTransformer","description":"coil.test.FakeImageLoaderEngine.RequestTransformer","location":"coil-test/coil.test/-fake-image-loader-engine/-request-transformer/index.html","searchKeys":["RequestTransformer","fun interface RequestTransformer","coil.test.FakeImageLoaderEngine.RequestTransformer"]},{"name":"fun newBuilder(): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.newBuilder","location":"coil-test/coil.test/-fake-image-loader-engine/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.newBuilder"]},{"name":"fun removeInterceptor(interceptor: FakeImageLoaderEngine.OptionalInterceptor): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.removeInterceptor","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/remove-interceptor.html","searchKeys":["removeInterceptor","fun removeInterceptor(interceptor: FakeImageLoaderEngine.OptionalInterceptor): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.removeInterceptor"]},{"name":"fun requestTransformer(transformer: FakeImageLoaderEngine.RequestTransformer): FakeImageLoaderEngine.Builder","description":"coil.test.FakeImageLoaderEngine.Builder.requestTransformer","location":"coil-test/coil.test/-fake-image-loader-engine/-builder/request-transformer.html","searchKeys":["requestTransformer","fun requestTransformer(transformer: FakeImageLoaderEngine.RequestTransformer): FakeImageLoaderEngine.Builder","coil.test.FakeImageLoaderEngine.Builder.requestTransformer"]},{"name":"open suspend override fun intercept(chain: Interceptor.Chain): ImageResult","description":"coil.test.FakeImageLoaderEngine.intercept","location":"coil-test/coil.test/-fake-image-loader-engine/intercept.html","searchKeys":["intercept","open suspend override fun intercept(chain: Interceptor.Chain): ImageResult","coil.test.FakeImageLoaderEngine.intercept"]},{"name":"val defaultInterceptor: Interceptor","description":"coil.test.FakeImageLoaderEngine.defaultInterceptor","location":"coil-test/coil.test/-fake-image-loader-engine/default-interceptor.html","searchKeys":["defaultInterceptor","val defaultInterceptor: Interceptor","coil.test.FakeImageLoaderEngine.defaultInterceptor"]},{"name":"val interceptors: List<FakeImageLoaderEngine.OptionalInterceptor>","description":"coil.test.FakeImageLoaderEngine.interceptors","location":"coil-test/coil.test/-fake-image-loader-engine/interceptors.html","searchKeys":["interceptors","val interceptors: List<FakeImageLoaderEngine.OptionalInterceptor>","coil.test.FakeImageLoaderEngine.interceptors"]},{"name":"val request: FakeImageLoaderEngine.RequestValue","description":"coil.test.FakeImageLoaderEngine.ResultValue.request","location":"coil-test/coil.test/-fake-image-loader-engine/-result-value/request.html","searchKeys":["request","val request: FakeImageLoaderEngine.RequestValue","coil.test.FakeImageLoaderEngine.ResultValue.request"]},{"name":"val request: ImageRequest","description":"coil.test.FakeImageLoaderEngine.RequestValue.request","location":"coil-test/coil.test/-fake-image-loader-engine/-request-value/request.html","searchKeys":["request","val request: ImageRequest","coil.test.FakeImageLoaderEngine.RequestValue.request"]},{"name":"val requestTransformer: FakeImageLoaderEngine.RequestTransformer","description":"coil.test.FakeImageLoaderEngine.requestTransformer","location":"coil-test/coil.test/-fake-image-loader-engine/request-transformer.html","searchKeys":["requestTransformer","val requestTransformer: FakeImageLoaderEngine.RequestTransformer","coil.test.FakeImageLoaderEngine.requestTransformer"]},{"name":"val requests: Flow<FakeImageLoaderEngine.RequestValue>","description":"coil.test.FakeImageLoaderEngine.requests","location":"coil-test/coil.test/-fake-image-loader-engine/requests.html","searchKeys":["requests","val requests: Flow<FakeImageLoaderEngine.RequestValue>","coil.test.FakeImageLoaderEngine.requests"]},{"name":"val result: ImageResult","description":"coil.test.FakeImageLoaderEngine.ResultValue.result","location":"coil-test/coil.test/-fake-image-loader-engine/-result-value/result.html","searchKeys":["result","val result: ImageResult","coil.test.FakeImageLoaderEngine.ResultValue.result"]},{"name":"val results: Flow<FakeImageLoaderEngine.ResultValue>","description":"coil.test.FakeImageLoaderEngine.results","location":"coil-test/coil.test/-fake-image-loader-engine/results.html","searchKeys":["results","val results: Flow<FakeImageLoaderEngine.ResultValue>","coil.test.FakeImageLoaderEngine.results"]},{"name":"val size: Size","description":"coil.test.FakeImageLoaderEngine.RequestValue.size","location":"coil-test/coil.test/-fake-image-loader-engine/-request-value/size.html","searchKeys":["size","val size: Size","coil.test.FakeImageLoaderEngine.RequestValue.size"]},{"name":"AUTOMATIC","description":"coil.size.Precision.AUTOMATIC","location":"coil-base/coil.size/-precision/-a-u-t-o-m-a-t-i-c/index.html","searchKeys":["AUTOMATIC","AUTOMATIC","coil.size.Precision.AUTOMATIC"]},{"name":"DISABLED","description":"coil.request.CachePolicy.DISABLED","location":"coil-base/coil.request/-cache-policy/-d-i-s-a-b-l-e-d/index.html","searchKeys":["DISABLED","DISABLED","coil.request.CachePolicy.DISABLED"]},{"name":"DISK","description":"coil.decode.DataSource.DISK","location":"coil-base/coil.decode/-data-source/-d-i-s-k/index.html","searchKeys":["DISK","DISK","coil.decode.DataSource.DISK"]},{"name":"ENABLED","description":"coil.request.CachePolicy.ENABLED","location":"coil-base/coil.request/-cache-policy/-e-n-a-b-l-e-d/index.html","searchKeys":["ENABLED","ENABLED","coil.request.CachePolicy.ENABLED"]},{"name":"EXACT","description":"coil.size.Precision.EXACT","location":"coil-base/coil.size/-precision/-e-x-a-c-t/index.html","searchKeys":["EXACT","EXACT","coil.size.Precision.EXACT"]},{"name":"FILL","description":"coil.size.Scale.FILL","location":"coil-base/coil.size/-scale/-f-i-l-l/index.html","searchKeys":["FILL","FILL","coil.size.Scale.FILL"]},{"name":"FIT","description":"coil.size.Scale.FIT","location":"coil-base/coil.size/-scale/-f-i-t/index.html","searchKeys":["FIT","FIT","coil.size.Scale.FIT"]},{"name":"IGNORE","description":"coil.decode.ExifOrientationPolicy.IGNORE","location":"coil-base/coil.decode/-exif-orientation-policy/-i-g-n-o-r-e/index.html","searchKeys":["IGNORE","IGNORE","coil.decode.ExifOrientationPolicy.IGNORE"]},{"name":"INEXACT","description":"coil.size.Precision.INEXACT","location":"coil-base/coil.size/-precision/-i-n-e-x-a-c-t/index.html","searchKeys":["INEXACT","INEXACT","coil.size.Precision.INEXACT"]},{"name":"MEMORY","description":"coil.decode.DataSource.MEMORY","location":"coil-base/coil.decode/-data-source/-m-e-m-o-r-y/index.html","searchKeys":["MEMORY","MEMORY","coil.decode.DataSource.MEMORY"]},{"name":"MEMORY_CACHE","description":"coil.decode.DataSource.MEMORY_CACHE","location":"coil-base/coil.decode/-data-source/-m-e-m-o-r-y_-c-a-c-h-e/index.html","searchKeys":["MEMORY_CACHE","MEMORY_CACHE","coil.decode.DataSource.MEMORY_CACHE"]},{"name":"NETWORK","description":"coil.decode.DataSource.NETWORK","location":"coil-base/coil.decode/-data-source/-n-e-t-w-o-r-k/index.html","searchKeys":["NETWORK","NETWORK","coil.decode.DataSource.NETWORK"]},{"name":"READ_ONLY","description":"coil.request.CachePolicy.READ_ONLY","location":"coil-base/coil.request/-cache-policy/-r-e-a-d_-o-n-l-y/index.html","searchKeys":["READ_ONLY","READ_ONLY","coil.request.CachePolicy.READ_ONLY"]},{"name":"RESPECT_ALL","description":"coil.decode.ExifOrientationPolicy.RESPECT_ALL","location":"coil-base/coil.decode/-exif-orientation-policy/-r-e-s-p-e-c-t_-a-l-l/index.html","searchKeys":["RESPECT_ALL","RESPECT_ALL","coil.decode.ExifOrientationPolicy.RESPECT_ALL"]},{"name":"RESPECT_PERFORMANCE","description":"coil.decode.ExifOrientationPolicy.RESPECT_PERFORMANCE","location":"coil-base/coil.decode/-exif-orientation-policy/-r-e-s-p-e-c-t_-p-e-r-f-o-r-m-a-n-c-e/index.html","searchKeys":["RESPECT_PERFORMANCE","RESPECT_PERFORMANCE","coil.decode.ExifOrientationPolicy.RESPECT_PERFORMANCE"]},{"name":"WRITE_ONLY","description":"coil.request.CachePolicy.WRITE_ONLY","location":"coil-base/coil.request/-cache-policy/-w-r-i-t-e_-o-n-l-y/index.html","searchKeys":["WRITE_ONLY","WRITE_ONLY","coil.request.CachePolicy.WRITE_ONLY"]},{"name":"abstract class GenericViewTarget<T : View> : ViewTarget<T> , TransitionTarget, DefaultLifecycleObserver","description":"coil.target.GenericViewTarget","location":"coil-base/coil.target/-generic-view-target/index.html","searchKeys":["GenericViewTarget","abstract class GenericViewTarget<T : View> : ViewTarget<T> , TransitionTarget, DefaultLifecycleObserver","coil.target.GenericViewTarget"]},{"name":"abstract class Metadata","description":"coil.decode.ImageSource.Metadata","location":"coil-base/coil.decode/-image-source/-metadata/index.html","searchKeys":["Metadata","abstract class Metadata","coil.decode.ImageSource.Metadata"]},{"name":"abstract fun abort()","description":"coil.disk.DiskCache.Editor.abort","location":"coil-base/coil.disk/-disk-cache/-editor/abort.html","searchKeys":["abort","abstract fun abort()","coil.disk.DiskCache.Editor.abort"]},{"name":"abstract fun clear()","description":"coil.disk.DiskCache.clear","location":"coil-base/coil.disk/-disk-cache/clear.html","searchKeys":["clear","abstract fun clear()","coil.disk.DiskCache.clear"]},{"name":"abstract fun clear()","description":"coil.memory.MemoryCache.clear","location":"coil-base/coil.memory/-memory-cache/clear.html","searchKeys":["clear","abstract fun clear()","coil.memory.MemoryCache.clear"]},{"name":"abstract fun closeAndOpenEditor(): DiskCache.Editor?","description":"coil.disk.DiskCache.Snapshot.closeAndOpenEditor","location":"coil-base/coil.disk/-disk-cache/-snapshot/close-and-open-editor.html","searchKeys":["closeAndOpenEditor","abstract fun closeAndOpenEditor(): DiskCache.Editor?","coil.disk.DiskCache.Snapshot.closeAndOpenEditor"]},{"name":"abstract fun commit()","description":"coil.disk.DiskCache.Editor.commit","location":"coil-base/coil.disk/-disk-cache/-editor/commit.html","searchKeys":["commit","abstract fun commit()","coil.disk.DiskCache.Editor.commit"]},{"name":"abstract fun commitAndOpenSnapshot(): DiskCache.Snapshot?","description":"coil.disk.DiskCache.Editor.commitAndOpenSnapshot","location":"coil-base/coil.disk/-disk-cache/-editor/commit-and-open-snapshot.html","searchKeys":["commitAndOpenSnapshot","abstract fun commitAndOpenSnapshot(): DiskCache.Snapshot?","coil.disk.DiskCache.Editor.commitAndOpenSnapshot"]},{"name":"abstract fun create(data: T, options: Options, imageLoader: ImageLoader): Fetcher?","description":"coil.fetch.Fetcher.Factory.create","location":"coil-base/coil.fetch/-fetcher/-factory/create.html","searchKeys":["create","abstract fun create(data: T, options: Options, imageLoader: ImageLoader): Fetcher?","coil.fetch.Fetcher.Factory.create"]},{"name":"abstract fun create(request: ImageRequest): EventListener","description":"coil.EventListener.Factory.create","location":"coil-base/coil/-event-listener/-factory/create.html","searchKeys":["create","abstract fun create(request: ImageRequest): EventListener","coil.EventListener.Factory.create"]},{"name":"abstract fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","description":"coil.decode.Decoder.Factory.create","location":"coil-base/coil.decode/-decoder/-factory/create.html","searchKeys":["create","abstract fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","coil.decode.Decoder.Factory.create"]},{"name":"abstract fun create(target: TransitionTarget, result: ImageResult): Transition","description":"coil.transition.Transition.Factory.create","location":"coil-base/coil.transition/-transition/-factory/create.html","searchKeys":["create","abstract fun create(target: TransitionTarget, result: ImageResult): Transition","coil.transition.Transition.Factory.create"]},{"name":"abstract fun dispose()","description":"coil.request.Disposable.dispose","location":"coil-base/coil.request/-disposable/dispose.html","searchKeys":["dispose","abstract fun dispose()","coil.request.Disposable.dispose"]},{"name":"abstract fun enqueue(request: ImageRequest): Disposable","description":"coil.ImageLoader.enqueue","location":"coil-base/coil/-image-loader/enqueue.html","searchKeys":["enqueue","abstract fun enqueue(request: ImageRequest): Disposable","coil.ImageLoader.enqueue"]},{"name":"abstract fun file(): Path","description":"coil.decode.ImageSource.file","location":"coil-base/coil.decode/-image-source/file.html","searchKeys":["file","abstract fun file(): Path","coil.decode.ImageSource.file"]},{"name":"abstract fun fileOrNull(): Path?","description":"coil.decode.ImageSource.fileOrNull","location":"coil-base/coil.decode/-image-source/file-or-null.html","searchKeys":["fileOrNull","abstract fun fileOrNull(): Path?","coil.decode.ImageSource.fileOrNull"]},{"name":"abstract fun key(data: T, options: Options): String?","description":"coil.key.Keyer.key","location":"coil-base/coil.key/-keyer/key.html","searchKeys":["key","abstract fun key(data: T, options: Options): String?","coil.key.Keyer.key"]},{"name":"abstract fun log(tag: String, priority: Int, message: String?, throwable: Throwable?)","description":"coil.util.Logger.log","location":"coil-base/coil.util/-logger/log.html","searchKeys":["log","abstract fun log(tag: String, priority: Int, message: String?, throwable: Throwable?)","coil.util.Logger.log"]},{"name":"abstract fun map(data: T, options: Options): V?","description":"coil.map.Mapper.map","location":"coil-base/coil.map/-mapper/map.html","searchKeys":["map","abstract fun map(data: T, options: Options): V?","coil.map.Mapper.map"]},{"name":"abstract fun newBuilder(): ImageLoader.Builder","description":"coil.ImageLoader.newBuilder","location":"coil-base/coil/-image-loader/new-builder.html","searchKeys":["newBuilder","abstract fun newBuilder(): ImageLoader.Builder","coil.ImageLoader.newBuilder"]},{"name":"abstract fun openEditor(key: String): DiskCache.Editor?","description":"coil.disk.DiskCache.openEditor","location":"coil-base/coil.disk/-disk-cache/open-editor.html","searchKeys":["openEditor","abstract fun openEditor(key: String): DiskCache.Editor?","coil.disk.DiskCache.openEditor"]},{"name":"abstract fun openSnapshot(key: String): DiskCache.Snapshot?","description":"coil.disk.DiskCache.openSnapshot","location":"coil-base/coil.disk/-disk-cache/open-snapshot.html","searchKeys":["openSnapshot","abstract fun openSnapshot(key: String): DiskCache.Snapshot?","coil.disk.DiskCache.openSnapshot"]},{"name":"abstract fun remove(key: MemoryCache.Key): Boolean","description":"coil.memory.MemoryCache.remove","location":"coil-base/coil.memory/-memory-cache/remove.html","searchKeys":["remove","abstract fun remove(key: MemoryCache.Key): Boolean","coil.memory.MemoryCache.remove"]},{"name":"abstract fun remove(key: String): Boolean","description":"coil.disk.DiskCache.remove","location":"coil-base/coil.disk/-disk-cache/remove.html","searchKeys":["remove","abstract fun remove(key: String): Boolean","coil.disk.DiskCache.remove"]},{"name":"abstract fun shutdown()","description":"coil.ImageLoader.shutdown","location":"coil-base/coil/-image-loader/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","coil.ImageLoader.shutdown"]},{"name":"abstract fun source(): BufferedSource","description":"coil.decode.ImageSource.source","location":"coil-base/coil.decode/-image-source/source.html","searchKeys":["source","abstract fun source(): BufferedSource","coil.decode.ImageSource.source"]},{"name":"abstract fun sourceOrNull(): BufferedSource?","description":"coil.decode.ImageSource.sourceOrNull","location":"coil-base/coil.decode/-image-source/source-or-null.html","searchKeys":["sourceOrNull","abstract fun sourceOrNull(): BufferedSource?","coil.decode.ImageSource.sourceOrNull"]},{"name":"abstract fun transition()","description":"coil.transition.Transition.transition","location":"coil-base/coil.transition/-transition/transition.html","searchKeys":["transition","abstract fun transition()","coil.transition.Transition.transition"]},{"name":"abstract fun trimMemory(level: Int)","description":"coil.memory.MemoryCache.trimMemory","location":"coil-base/coil.memory/-memory-cache/trim-memory.html","searchKeys":["trimMemory","abstract fun trimMemory(level: Int)","coil.memory.MemoryCache.trimMemory"]},{"name":"abstract fun withRequest(request: ImageRequest): Interceptor.Chain","description":"coil.intercept.Interceptor.Chain.withRequest","location":"coil-base/coil.intercept/-interceptor/-chain/with-request.html","searchKeys":["withRequest","abstract fun withRequest(request: ImageRequest): Interceptor.Chain","coil.intercept.Interceptor.Chain.withRequest"]},{"name":"abstract fun withSize(size: Size): Interceptor.Chain","description":"coil.intercept.Interceptor.Chain.withSize","location":"coil-base/coil.intercept/-interceptor/-chain/with-size.html","searchKeys":["withSize","abstract fun withSize(size: Size): Interceptor.Chain","coil.intercept.Interceptor.Chain.withSize"]},{"name":"abstract operator fun get(key: MemoryCache.Key): MemoryCache.Value?","description":"coil.memory.MemoryCache.get","location":"coil-base/coil.memory/-memory-cache/get.html","searchKeys":["get","abstract operator fun get(key: MemoryCache.Key): MemoryCache.Value?","coil.memory.MemoryCache.get"]},{"name":"abstract operator fun set(key: MemoryCache.Key, value: MemoryCache.Value)","description":"coil.memory.MemoryCache.set","location":"coil-base/coil.memory/-memory-cache/set.html","searchKeys":["set","abstract operator fun set(key: MemoryCache.Key, value: MemoryCache.Value)","coil.memory.MemoryCache.set"]},{"name":"abstract override fun close()","description":"coil.disk.DiskCache.Snapshot.close","location":"coil-base/coil.disk/-disk-cache/-snapshot/close.html","searchKeys":["close","abstract override fun close()","coil.disk.DiskCache.Snapshot.close"]},{"name":"abstract override var drawable: Drawable?","description":"coil.target.GenericViewTarget.drawable","location":"coil-base/coil.target/-generic-view-target/drawable.html","searchKeys":["drawable","abstract override var drawable: Drawable?","coil.target.GenericViewTarget.drawable"]},{"name":"abstract suspend fun decode(): DecodeResult?","description":"coil.decode.Decoder.decode","location":"coil-base/coil.decode/-decoder/decode.html","searchKeys":["decode","abstract suspend fun decode(): DecodeResult?","coil.decode.Decoder.decode"]},{"name":"abstract suspend fun execute(request: ImageRequest): ImageResult","description":"coil.ImageLoader.execute","location":"coil-base/coil/-image-loader/execute.html","searchKeys":["execute","abstract suspend fun execute(request: ImageRequest): ImageResult","coil.ImageLoader.execute"]},{"name":"abstract suspend fun fetch(): FetchResult?","description":"coil.fetch.Fetcher.fetch","location":"coil-base/coil.fetch/-fetcher/fetch.html","searchKeys":["fetch","abstract suspend fun fetch(): FetchResult?","coil.fetch.Fetcher.fetch"]},{"name":"abstract suspend fun intercept(chain: Interceptor.Chain): ImageResult","description":"coil.intercept.Interceptor.intercept","location":"coil-base/coil.intercept/-interceptor/intercept.html","searchKeys":["intercept","abstract suspend fun intercept(chain: Interceptor.Chain): ImageResult","coil.intercept.Interceptor.intercept"]},{"name":"abstract suspend fun proceed(request: ImageRequest): ImageResult","description":"coil.intercept.Interceptor.Chain.proceed","location":"coil-base/coil.intercept/-interceptor/-chain/proceed.html","searchKeys":["proceed","abstract suspend fun proceed(request: ImageRequest): ImageResult","coil.intercept.Interceptor.Chain.proceed"]},{"name":"abstract suspend fun size(): Size","description":"coil.size.SizeResolver.size","location":"coil-base/coil.size/-size-resolver/size.html","searchKeys":["size","abstract suspend fun size(): Size","coil.size.SizeResolver.size"]},{"name":"abstract suspend fun transform(input: Bitmap, size: Size): Bitmap","description":"coil.transform.Transformation.transform","location":"coil-base/coil.transform/-transformation/transform.html","searchKeys":["transform","abstract suspend fun transform(input: Bitmap, size: Size): Bitmap","coil.transform.Transformation.transform"]},{"name":"abstract val cacheKey: String","description":"coil.transform.Transformation.cacheKey","location":"coil-base/coil.transform/-transformation/cache-key.html","searchKeys":["cacheKey","abstract val cacheKey: String","coil.transform.Transformation.cacheKey"]},{"name":"abstract val components: ComponentRegistry","description":"coil.ImageLoader.components","location":"coil-base/coil/-image-loader/components.html","searchKeys":["components","abstract val components: ComponentRegistry","coil.ImageLoader.components"]},{"name":"abstract val data: Path","description":"coil.disk.DiskCache.Editor.data","location":"coil-base/coil.disk/-disk-cache/-editor/data.html","searchKeys":["data","abstract val data: Path","coil.disk.DiskCache.Editor.data"]},{"name":"abstract val data: Path","description":"coil.disk.DiskCache.Snapshot.data","location":"coil-base/coil.disk/-disk-cache/-snapshot/data.html","searchKeys":["data","abstract val data: Path","coil.disk.DiskCache.Snapshot.data"]},{"name":"abstract val defaults: DefaultRequestOptions","description":"coil.ImageLoader.defaults","location":"coil-base/coil/-image-loader/defaults.html","searchKeys":["defaults","abstract val defaults: DefaultRequestOptions","coil.ImageLoader.defaults"]},{"name":"abstract val directory: Path","description":"coil.disk.DiskCache.directory","location":"coil-base/coil.disk/-disk-cache/directory.html","searchKeys":["directory","abstract val directory: Path","coil.disk.DiskCache.directory"]},{"name":"abstract val diskCache: DiskCache?","description":"coil.ImageLoader.diskCache","location":"coil-base/coil/-image-loader/disk-cache.html","searchKeys":["diskCache","abstract val diskCache: DiskCache?","coil.ImageLoader.diskCache"]},{"name":"abstract val drawable: Drawable?","description":"coil.request.ImageResult.drawable","location":"coil-base/coil.request/-image-result/drawable.html","searchKeys":["drawable","abstract val drawable: Drawable?","coil.request.ImageResult.drawable"]},{"name":"abstract val drawable: Drawable?","description":"coil.transition.TransitionTarget.drawable","location":"coil-base/coil.transition/-transition-target/drawable.html","searchKeys":["drawable","abstract val drawable: Drawable?","coil.transition.TransitionTarget.drawable"]},{"name":"abstract val fileSystem: FileSystem","description":"coil.decode.ImageSource.fileSystem","location":"coil-base/coil.decode/-image-source/file-system.html","searchKeys":["fileSystem","abstract val fileSystem: FileSystem","coil.decode.ImageSource.fileSystem"]},{"name":"abstract val fileSystem: FileSystem","description":"coil.disk.DiskCache.fileSystem","location":"coil-base/coil.disk/-disk-cache/file-system.html","searchKeys":["fileSystem","abstract val fileSystem: FileSystem","coil.disk.DiskCache.fileSystem"]},{"name":"abstract val isDisposed: Boolean","description":"coil.request.Disposable.isDisposed","location":"coil-base/coil.request/-disposable/is-disposed.html","searchKeys":["isDisposed","abstract val isDisposed: Boolean","coil.request.Disposable.isDisposed"]},{"name":"abstract val job: Deferred<ImageResult>","description":"coil.request.Disposable.job","location":"coil-base/coil.request/-disposable/job.html","searchKeys":["job","abstract val job: Deferred<ImageResult>","coil.request.Disposable.job"]},{"name":"abstract val keys: Set<MemoryCache.Key>","description":"coil.memory.MemoryCache.keys","location":"coil-base/coil.memory/-memory-cache/keys.html","searchKeys":["keys","abstract val keys: Set<MemoryCache.Key>","coil.memory.MemoryCache.keys"]},{"name":"abstract val maxSize: Int","description":"coil.memory.MemoryCache.maxSize","location":"coil-base/coil.memory/-memory-cache/max-size.html","searchKeys":["maxSize","abstract val maxSize: Int","coil.memory.MemoryCache.maxSize"]},{"name":"abstract val maxSize: Long","description":"coil.disk.DiskCache.maxSize","location":"coil-base/coil.disk/-disk-cache/max-size.html","searchKeys":["maxSize","abstract val maxSize: Long","coil.disk.DiskCache.maxSize"]},{"name":"abstract val memoryCache: MemoryCache?","description":"coil.ImageLoader.memoryCache","location":"coil-base/coil/-image-loader/memory-cache.html","searchKeys":["memoryCache","abstract val memoryCache: MemoryCache?","coil.ImageLoader.memoryCache"]},{"name":"abstract val metadata: ImageSource.Metadata?","description":"coil.decode.ImageSource.metadata","location":"coil-base/coil.decode/-image-source/metadata.html","searchKeys":["metadata","abstract val metadata: ImageSource.Metadata?","coil.decode.ImageSource.metadata"]},{"name":"abstract val metadata: Path","description":"coil.disk.DiskCache.Editor.metadata","location":"coil-base/coil.disk/-disk-cache/-editor/metadata.html","searchKeys":["metadata","abstract val metadata: Path","coil.disk.DiskCache.Editor.metadata"]},{"name":"abstract val metadata: Path","description":"coil.disk.DiskCache.Snapshot.metadata","location":"coil-base/coil.disk/-disk-cache/-snapshot/metadata.html","searchKeys":["metadata","abstract val metadata: Path","coil.disk.DiskCache.Snapshot.metadata"]},{"name":"abstract val request: ImageRequest","description":"coil.intercept.Interceptor.Chain.request","location":"coil-base/coil.intercept/-interceptor/-chain/request.html","searchKeys":["request","abstract val request: ImageRequest","coil.intercept.Interceptor.Chain.request"]},{"name":"abstract val request: ImageRequest","description":"coil.request.ImageResult.request","location":"coil-base/coil.request/-image-result/request.html","searchKeys":["request","abstract val request: ImageRequest","coil.request.ImageResult.request"]},{"name":"abstract val size: Int","description":"coil.memory.MemoryCache.size","location":"coil-base/coil.memory/-memory-cache/size.html","searchKeys":["size","abstract val size: Int","coil.memory.MemoryCache.size"]},{"name":"abstract val size: Long","description":"coil.disk.DiskCache.size","location":"coil-base/coil.disk/-disk-cache/size.html","searchKeys":["size","abstract val size: Long","coil.disk.DiskCache.size"]},{"name":"abstract val size: Size","description":"coil.intercept.Interceptor.Chain.size","location":"coil-base/coil.intercept/-interceptor/-chain/size.html","searchKeys":["size","abstract val size: Size","coil.intercept.Interceptor.Chain.size"]},{"name":"abstract val view: T","description":"coil.size.ViewSizeResolver.view","location":"coil-base/coil.size/-view-size-resolver/view.html","searchKeys":["view","abstract val view: T","coil.size.ViewSizeResolver.view"]},{"name":"abstract val view: T","description":"coil.target.ViewTarget.view","location":"coil-base/coil.target/-view-target/view.html","searchKeys":["view","abstract val view: T","coil.target.ViewTarget.view"]},{"name":"abstract val view: View","description":"coil.transition.TransitionTarget.view","location":"coil-base/coil.transition/-transition-target/view.html","searchKeys":["view","abstract val view: View","coil.transition.TransitionTarget.view"]},{"name":"abstract var level: Int","description":"coil.util.Logger.level","location":"coil-base/coil.util/-logger/level.html","searchKeys":["level","abstract var level: Int","coil.util.Logger.level"]},{"name":"annotation class ExperimentalCoilApi","description":"coil.annotation.ExperimentalCoilApi","location":"coil-base/coil.annotation/-experimental-coil-api/index.html","searchKeys":["ExperimentalCoilApi","annotation class ExperimentalCoilApi","coil.annotation.ExperimentalCoilApi"]},{"name":"class AssetMetadata(val filePath: String) : ImageSource.Metadata","description":"coil.decode.AssetMetadata","location":"coil-base/coil.decode/-asset-metadata/index.html","searchKeys":["AssetMetadata","class AssetMetadata(val filePath: String) : ImageSource.Metadata","coil.decode.AssetMetadata"]},{"name":"class BitmapFactoryDecoder(source: ImageSource, options: Options, parallelismLock: Semaphore = Semaphore(Int.MAX_VALUE), exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE) : Decoder","description":"coil.decode.BitmapFactoryDecoder","location":"coil-base/coil.decode/-bitmap-factory-decoder/index.html","searchKeys":["BitmapFactoryDecoder","class BitmapFactoryDecoder(source: ImageSource, options: Options, parallelismLock: Semaphore = Semaphore(Int.MAX_VALUE), exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE) : Decoder","coil.decode.BitmapFactoryDecoder"]},{"name":"class Builder","description":"coil.ComponentRegistry.Builder","location":"coil-base/coil/-component-registry/-builder/index.html","searchKeys":["Builder","class Builder","coil.ComponentRegistry.Builder"]},{"name":"class Builder","description":"coil.ImageLoader.Builder","location":"coil-base/coil/-image-loader/-builder/index.html","searchKeys":["Builder","class Builder","coil.ImageLoader.Builder"]},{"name":"class Builder","description":"coil.disk.DiskCache.Builder","location":"coil-base/coil.disk/-disk-cache/-builder/index.html","searchKeys":["Builder","class Builder","coil.disk.DiskCache.Builder"]},{"name":"class Builder","description":"coil.request.ImageRequest.Builder","location":"coil-base/coil.request/-image-request/-builder/index.html","searchKeys":["Builder","class Builder","coil.request.ImageRequest.Builder"]},{"name":"class Builder","description":"coil.request.Parameters.Builder","location":"coil-base/coil.request/-parameters/-builder/index.html","searchKeys":["Builder","class Builder","coil.request.Parameters.Builder"]},{"name":"class Builder(context: Context)","description":"coil.memory.MemoryCache.Builder","location":"coil-base/coil.memory/-memory-cache/-builder/index.html","searchKeys":["Builder","class Builder(context: Context)","coil.memory.MemoryCache.Builder"]},{"name":"class CircleCropTransformation : Transformation","description":"coil.transform.CircleCropTransformation","location":"coil-base/coil.transform/-circle-crop-transformation/index.html","searchKeys":["CircleCropTransformation","class CircleCropTransformation : Transformation","coil.transform.CircleCropTransformation"]},{"name":"class ComponentRegistry","description":"coil.ComponentRegistry","location":"coil-base/coil/-component-registry/index.html","searchKeys":["ComponentRegistry","class ComponentRegistry","coil.ComponentRegistry"]},{"name":"class ContentMetadata(val uri: Uri) : ImageSource.Metadata","description":"coil.decode.ContentMetadata","location":"coil-base/coil.decode/-content-metadata/index.html","searchKeys":["ContentMetadata","class ContentMetadata(val uri: Uri) : ImageSource.Metadata","coil.decode.ContentMetadata"]},{"name":"class CrossfadeDrawable constructor(start: Drawable?, end: Drawable?, val scale: Scale = Scale.FIT, val durationMillis: Int = DEFAULT_DURATION, val fadeStart: Boolean = true, val preferExactIntrinsicSize: Boolean = false) : Drawable, Drawable.Callback, Animatable2Compat","description":"coil.drawable.CrossfadeDrawable","location":"coil-base/coil.drawable/-crossfade-drawable/index.html","searchKeys":["CrossfadeDrawable","class CrossfadeDrawable constructor(start: Drawable?, end: Drawable?, val scale: Scale = Scale.FIT, val durationMillis: Int = DEFAULT_DURATION, val fadeStart: Boolean = true, val preferExactIntrinsicSize: Boolean = false) : Drawable, Drawable.Callback, Animatable2Compat","coil.drawable.CrossfadeDrawable"]},{"name":"class CrossfadeTransition constructor(target: TransitionTarget, result: ImageResult, val durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, val preferExactIntrinsicSize: Boolean = false) : Transition","description":"coil.transition.CrossfadeTransition","location":"coil-base/coil.transition/-crossfade-transition/index.html","searchKeys":["CrossfadeTransition","class CrossfadeTransition constructor(target: TransitionTarget, result: ImageResult, val durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, val preferExactIntrinsicSize: Boolean = false) : Transition","coil.transition.CrossfadeTransition"]},{"name":"class DebugLogger constructor(level: Int = Log.DEBUG) : Logger","description":"coil.util.DebugLogger","location":"coil-base/coil.util/-debug-logger/index.html","searchKeys":["DebugLogger","class DebugLogger constructor(level: Int = Log.DEBUG) : Logger","coil.util.DebugLogger"]},{"name":"class DecodeResult(val drawable: Drawable, val isSampled: Boolean)","description":"coil.decode.DecodeResult","location":"coil-base/coil.decode/-decode-result/index.html","searchKeys":["DecodeResult","class DecodeResult(val drawable: Drawable, val isSampled: Boolean)","coil.decode.DecodeResult"]},{"name":"class DefaultRequestOptions(val interceptorDispatcher: CoroutineDispatcher = Dispatchers.Main.immediate, val fetcherDispatcher: CoroutineDispatcher = Dispatchers.IO, val decoderDispatcher: CoroutineDispatcher = Dispatchers.IO, val transformationDispatcher: CoroutineDispatcher = Dispatchers.IO, val transitionFactory: Transition.Factory = Transition.Factory.NONE, val precision: Precision = Precision.AUTOMATIC, val bitmapConfig: Bitmap.Config = DEFAULT_BITMAP_CONFIG, val allowHardware: Boolean = true, val allowRgb565: Boolean = false, val placeholder: Drawable? = null, val error: Drawable? = null, val fallback: Drawable? = null, val memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, val diskCachePolicy: CachePolicy = CachePolicy.ENABLED, val networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","description":"coil.request.DefaultRequestOptions","location":"coil-base/coil.request/-default-request-options/index.html","searchKeys":["DefaultRequestOptions","class DefaultRequestOptions(val interceptorDispatcher: CoroutineDispatcher = Dispatchers.Main.immediate, val fetcherDispatcher: CoroutineDispatcher = Dispatchers.IO, val decoderDispatcher: CoroutineDispatcher = Dispatchers.IO, val transformationDispatcher: CoroutineDispatcher = Dispatchers.IO, val transitionFactory: Transition.Factory = Transition.Factory.NONE, val precision: Precision = Precision.AUTOMATIC, val bitmapConfig: Bitmap.Config = DEFAULT_BITMAP_CONFIG, val allowHardware: Boolean = true, val allowRgb565: Boolean = false, val placeholder: Drawable? = null, val error: Drawable? = null, val fallback: Drawable? = null, val memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, val diskCachePolicy: CachePolicy = CachePolicy.ENABLED, val networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","coil.request.DefaultRequestOptions"]},{"name":"class DefinedRequestOptions(val lifecycle: Lifecycle?, val sizeResolver: SizeResolver?, val scale: Scale?, val interceptorDispatcher: CoroutineDispatcher?, val fetcherDispatcher: CoroutineDispatcher?, val decoderDispatcher: CoroutineDispatcher?, val transformationDispatcher: CoroutineDispatcher?, val transitionFactory: Transition.Factory?, val precision: Precision?, val bitmapConfig: Bitmap.Config?, val allowHardware: Boolean?, val allowRgb565: Boolean?, val memoryCachePolicy: CachePolicy?, val diskCachePolicy: CachePolicy?, val networkCachePolicy: CachePolicy?)","description":"coil.request.DefinedRequestOptions","location":"coil-base/coil.request/-defined-request-options/index.html","searchKeys":["DefinedRequestOptions","class DefinedRequestOptions(val lifecycle: Lifecycle?, val sizeResolver: SizeResolver?, val scale: Scale?, val interceptorDispatcher: CoroutineDispatcher?, val fetcherDispatcher: CoroutineDispatcher?, val decoderDispatcher: CoroutineDispatcher?, val transformationDispatcher: CoroutineDispatcher?, val transitionFactory: Transition.Factory?, val precision: Precision?, val bitmapConfig: Bitmap.Config?, val allowHardware: Boolean?, val allowRgb565: Boolean?, val memoryCachePolicy: CachePolicy?, val diskCachePolicy: CachePolicy?, val networkCachePolicy: CachePolicy?)","coil.request.DefinedRequestOptions"]},{"name":"class DrawableResult(val drawable: Drawable, val isSampled: Boolean, val dataSource: DataSource) : FetchResult","description":"coil.fetch.DrawableResult","location":"coil-base/coil.fetch/-drawable-result/index.html","searchKeys":["DrawableResult","class DrawableResult(val drawable: Drawable, val isSampled: Boolean, val dataSource: DataSource) : FetchResult","coil.fetch.DrawableResult"]},{"name":"class Entry(val value: Any?, val memoryCacheKey: String?)","description":"coil.request.Parameters.Entry","location":"coil-base/coil.request/-parameters/-entry/index.html","searchKeys":["Entry","class Entry(val value: Any?, val memoryCacheKey: String?)","coil.request.Parameters.Entry"]},{"name":"class ErrorResult(val drawable: Drawable?, val request: ImageRequest, val throwable: Throwable) : ImageResult","description":"coil.request.ErrorResult","location":"coil-base/coil.request/-error-result/index.html","searchKeys":["ErrorResult","class ErrorResult(val drawable: Drawable?, val request: ImageRequest, val throwable: Throwable) : ImageResult","coil.request.ErrorResult"]},{"name":"class Factory(maxParallelism: Int = DEFAULT_MAX_PARALLELISM, exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE) : Decoder.Factory","description":"coil.decode.BitmapFactoryDecoder.Factory","location":"coil-base/coil.decode/-bitmap-factory-decoder/-factory/index.html","searchKeys":["Factory","class Factory(maxParallelism: Int = DEFAULT_MAX_PARALLELISM, exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE) : Decoder.Factory","coil.decode.BitmapFactoryDecoder.Factory"]},{"name":"class Factory constructor(val durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, val preferExactIntrinsicSize: Boolean = false) : Transition.Factory","description":"coil.transition.CrossfadeTransition.Factory","location":"coil-base/coil.transition/-crossfade-transition/-factory/index.html","searchKeys":["Factory","class Factory constructor(val durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, val preferExactIntrinsicSize: Boolean = false) : Transition.Factory","coil.transition.CrossfadeTransition.Factory"]},{"name":"class HttpException(val response: Response) : RuntimeException","description":"coil.network.HttpException","location":"coil-base/coil.network/-http-exception/index.html","searchKeys":["HttpException","class HttpException(val response: Response) : RuntimeException","coil.network.HttpException"]},{"name":"class ImageRequest","description":"coil.request.ImageRequest","location":"coil-base/coil.request/-image-request/index.html","searchKeys":["ImageRequest","class ImageRequest","coil.request.ImageRequest"]},{"name":"class Key(val key: String, val extras: Map<String, String> = emptyMap()) : Parcelable","description":"coil.memory.MemoryCache.Key","location":"coil-base/coil.memory/-memory-cache/-key/index.html","searchKeys":["Key","class Key(val key: String, val extras: Map<String, String> = emptyMap()) : Parcelable","coil.memory.MemoryCache.Key"]},{"name":"class NullRequestDataException : RuntimeException","description":"coil.request.NullRequestDataException","location":"coil-base/coil.request/-null-request-data-exception/index.html","searchKeys":["NullRequestDataException","class NullRequestDataException : RuntimeException","coil.request.NullRequestDataException"]},{"name":"class Options(val context: Context, val config: Bitmap.Config = Bitmap.Config.ARGB_8888, val colorSpace: ColorSpace? = NULL_COLOR_SPACE, val size: Size = Size.ORIGINAL, val scale: Scale = Scale.FIT, val allowInexactSize: Boolean = false, val allowRgb565: Boolean = false, val premultipliedAlpha: Boolean = true, val diskCacheKey: String? = null, val headers: Headers = EMPTY_HEADERS, val tags: Tags = Tags.EMPTY, val parameters: Parameters = Parameters.EMPTY, val memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, val diskCachePolicy: CachePolicy = CachePolicy.ENABLED, val networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","description":"coil.request.Options","location":"coil-base/coil.request/-options/index.html","searchKeys":["Options","class Options(val context: Context, val config: Bitmap.Config = Bitmap.Config.ARGB_8888, val colorSpace: ColorSpace? = NULL_COLOR_SPACE, val size: Size = Size.ORIGINAL, val scale: Scale = Scale.FIT, val allowInexactSize: Boolean = false, val allowRgb565: Boolean = false, val premultipliedAlpha: Boolean = true, val diskCacheKey: String? = null, val headers: Headers = EMPTY_HEADERS, val tags: Tags = Tags.EMPTY, val parameters: Parameters = Parameters.EMPTY, val memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, val diskCachePolicy: CachePolicy = CachePolicy.ENABLED, val networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","coil.request.Options"]},{"name":"class Parameters : Iterable<Pair<String, Parameters.Entry>> ","description":"coil.request.Parameters","location":"coil-base/coil.request/-parameters/index.html","searchKeys":["Parameters","class Parameters : Iterable<Pair<String, Parameters.Entry>> ","coil.request.Parameters"]},{"name":"class Pixels(val px: Int) : Dimension","description":"coil.size.Dimension.Pixels","location":"coil-base/coil.size/-dimension/-pixels/index.html","searchKeys":["Pixels","class Pixels(val px: Int) : Dimension","coil.size.Dimension.Pixels"]},{"name":"class ResourceMetadata(val packageName: String, val resId: Int, val density: Int) : ImageSource.Metadata","description":"coil.decode.ResourceMetadata","location":"coil-base/coil.decode/-resource-metadata/index.html","searchKeys":["ResourceMetadata","class ResourceMetadata(val packageName: String, val resId: Int, val density: Int) : ImageSource.Metadata","coil.decode.ResourceMetadata"]},{"name":"class RoundedCornersTransformation(topLeft: Float = 0.0f, topRight: Float = 0.0f, bottomLeft: Float = 0.0f, bottomRight: Float = 0.0f) : Transformation","description":"coil.transform.RoundedCornersTransformation","location":"coil-base/coil.transform/-rounded-corners-transformation/index.html","searchKeys":["RoundedCornersTransformation","class RoundedCornersTransformation(topLeft: Float = 0.0f, topRight: Float = 0.0f, bottomLeft: Float = 0.0f, bottomRight: Float = 0.0f) : Transformation","coil.transform.RoundedCornersTransformation"]},{"name":"class SourceResult(val source: ImageSource, val mimeType: String?, val dataSource: DataSource) : FetchResult","description":"coil.fetch.SourceResult","location":"coil-base/coil.fetch/-source-result/index.html","searchKeys":["SourceResult","class SourceResult(val source: ImageSource, val mimeType: String?, val dataSource: DataSource) : FetchResult","coil.fetch.SourceResult"]},{"name":"class SuccessResult(val drawable: Drawable, val request: ImageRequest, val dataSource: DataSource, val memoryCacheKey: MemoryCache.Key? = null, val diskCacheKey: String? = null, val isSampled: Boolean = false, val isPlaceholderCached: Boolean = false) : ImageResult","description":"coil.request.SuccessResult","location":"coil-base/coil.request/-success-result/index.html","searchKeys":["SuccessResult","class SuccessResult(val drawable: Drawable, val request: ImageRequest, val dataSource: DataSource, val memoryCacheKey: MemoryCache.Key? = null, val diskCacheKey: String? = null, val isSampled: Boolean = false, val isPlaceholderCached: Boolean = false) : ImageResult","coil.request.SuccessResult"]},{"name":"class Tags","description":"coil.request.Tags","location":"coil-base/coil.request/-tags/index.html","searchKeys":["Tags","class Tags","coil.request.Tags"]},{"name":"class Value(val bitmap: Bitmap, val extras: Map<String, Any> = emptyMap())","description":"coil.memory.MemoryCache.Value","location":"coil-base/coil.memory/-memory-cache/-value/index.html","searchKeys":["Value","class Value(val bitmap: Bitmap, val extras: Map<String, Any> = emptyMap())","coil.memory.MemoryCache.Value"]},{"name":"const val DEFAULT_DURATION: Int = 100","description":"coil.drawable.CrossfadeDrawable.Companion.DEFAULT_DURATION","location":"coil-base/coil.drawable/-crossfade-drawable/-companion/-d-e-f-a-u-l-t_-d-u-r-a-t-i-o-n.html","searchKeys":["DEFAULT_DURATION","const val DEFAULT_DURATION: Int = 100","coil.drawable.CrossfadeDrawable.Companion.DEFAULT_DURATION"]},{"name":"constructor()","description":"coil.ComponentRegistry.Builder.Builder","location":"coil-base/coil/-component-registry/-builder/-builder.html","searchKeys":["Builder","constructor()","coil.ComponentRegistry.Builder.Builder"]},{"name":"constructor()","description":"coil.ComponentRegistry.ComponentRegistry","location":"coil-base/coil/-component-registry/-component-registry.html","searchKeys":["ComponentRegistry","constructor()","coil.ComponentRegistry.ComponentRegistry"]},{"name":"constructor()","description":"coil.decode.BitmapFactoryDecoder.Factory.Factory","location":"coil-base/coil.decode/-bitmap-factory-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","coil.decode.BitmapFactoryDecoder.Factory.Factory"]},{"name":"constructor()","description":"coil.decode.ImageSource.Metadata.Metadata","location":"coil-base/coil.decode/-image-source/-metadata/-metadata.html","searchKeys":["Metadata","constructor()","coil.decode.ImageSource.Metadata.Metadata"]},{"name":"constructor()","description":"coil.disk.DiskCache.Builder.Builder","location":"coil-base/coil.disk/-disk-cache/-builder/-builder.html","searchKeys":["Builder","constructor()","coil.disk.DiskCache.Builder.Builder"]},{"name":"constructor()","description":"coil.request.NullRequestDataException.NullRequestDataException","location":"coil-base/coil.request/-null-request-data-exception/-null-request-data-exception.html","searchKeys":["NullRequestDataException","constructor()","coil.request.NullRequestDataException.NullRequestDataException"]},{"name":"constructor()","description":"coil.request.Parameters.Builder.Builder","location":"coil-base/coil.request/-parameters/-builder/-builder.html","searchKeys":["Builder","constructor()","coil.request.Parameters.Builder.Builder"]},{"name":"constructor()","description":"coil.request.Parameters.Parameters","location":"coil-base/coil.request/-parameters/-parameters.html","searchKeys":["Parameters","constructor()","coil.request.Parameters.Parameters"]},{"name":"constructor()","description":"coil.target.GenericViewTarget.GenericViewTarget","location":"coil-base/coil.target/-generic-view-target/-generic-view-target.html","searchKeys":["GenericViewTarget","constructor()","coil.target.GenericViewTarget.GenericViewTarget"]},{"name":"constructor()","description":"coil.transform.CircleCropTransformation.CircleCropTransformation","location":"coil-base/coil.transform/-circle-crop-transformation/-circle-crop-transformation.html","searchKeys":["CircleCropTransformation","constructor()","coil.transform.CircleCropTransformation.CircleCropTransformation"]},{"name":"constructor(bitmap: Bitmap, extras: Map<String, Any> = emptyMap())","description":"coil.memory.MemoryCache.Value.Value","location":"coil-base/coil.memory/-memory-cache/-value/-value.html","searchKeys":["Value","constructor(bitmap: Bitmap, extras: Map<String, Any> = emptyMap())","coil.memory.MemoryCache.Value.Value"]},{"name":"constructor(context: Context)","description":"coil.ImageLoader.Builder.Builder","location":"coil-base/coil/-image-loader/-builder/-builder.html","searchKeys":["Builder","constructor(context: Context)","coil.ImageLoader.Builder.Builder"]},{"name":"constructor(context: Context)","description":"coil.memory.MemoryCache.Builder.Builder","location":"coil-base/coil.memory/-memory-cache/-builder/-builder.html","searchKeys":["Builder","constructor(context: Context)","coil.memory.MemoryCache.Builder.Builder"]},{"name":"constructor(context: Context)","description":"coil.request.ImageRequest.Builder.Builder","location":"coil-base/coil.request/-image-request/-builder/-builder.html","searchKeys":["Builder","constructor(context: Context)","coil.request.ImageRequest.Builder.Builder"]},{"name":"constructor(context: Context, config: Bitmap.Config = Bitmap.Config.ARGB_8888, colorSpace: ColorSpace? = NULL_COLOR_SPACE, size: Size = Size.ORIGINAL, scale: Scale = Scale.FIT, allowInexactSize: Boolean = false, allowRgb565: Boolean = false, premultipliedAlpha: Boolean = true, diskCacheKey: String? = null, headers: Headers = EMPTY_HEADERS, tags: Tags = Tags.EMPTY, parameters: Parameters = Parameters.EMPTY, memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, diskCachePolicy: CachePolicy = CachePolicy.ENABLED, networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","description":"coil.request.Options.Options","location":"coil-base/coil.request/-options/-options.html","searchKeys":["Options","constructor(context: Context, config: Bitmap.Config = Bitmap.Config.ARGB_8888, colorSpace: ColorSpace? = NULL_COLOR_SPACE, size: Size = Size.ORIGINAL, scale: Scale = Scale.FIT, allowInexactSize: Boolean = false, allowRgb565: Boolean = false, premultipliedAlpha: Boolean = true, diskCacheKey: String? = null, headers: Headers = EMPTY_HEADERS, tags: Tags = Tags.EMPTY, parameters: Parameters = Parameters.EMPTY, memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, diskCachePolicy: CachePolicy = CachePolicy.ENABLED, networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","coil.request.Options.Options"]},{"name":"constructor(drawable: Drawable, isSampled: Boolean)","description":"coil.decode.DecodeResult.DecodeResult","location":"coil-base/coil.decode/-decode-result/-decode-result.html","searchKeys":["DecodeResult","constructor(drawable: Drawable, isSampled: Boolean)","coil.decode.DecodeResult.DecodeResult"]},{"name":"constructor(drawable: Drawable, isSampled: Boolean, dataSource: DataSource)","description":"coil.fetch.DrawableResult.DrawableResult","location":"coil-base/coil.fetch/-drawable-result/-drawable-result.html","searchKeys":["DrawableResult","constructor(drawable: Drawable, isSampled: Boolean, dataSource: DataSource)","coil.fetch.DrawableResult.DrawableResult"]},{"name":"constructor(drawable: Drawable, request: ImageRequest, dataSource: DataSource, memoryCacheKey: MemoryCache.Key? = null, diskCacheKey: String? = null, isSampled: Boolean = false, isPlaceholderCached: Boolean = false)","description":"coil.request.SuccessResult.SuccessResult","location":"coil-base/coil.request/-success-result/-success-result.html","searchKeys":["SuccessResult","constructor(drawable: Drawable, request: ImageRequest, dataSource: DataSource, memoryCacheKey: MemoryCache.Key? = null, diskCacheKey: String? = null, isSampled: Boolean = false, isPlaceholderCached: Boolean = false)","coil.request.SuccessResult.SuccessResult"]},{"name":"constructor(drawable: Drawable?, request: ImageRequest, throwable: Throwable)","description":"coil.request.ErrorResult.ErrorResult","location":"coil-base/coil.request/-error-result/-error-result.html","searchKeys":["ErrorResult","constructor(drawable: Drawable?, request: ImageRequest, throwable: Throwable)","coil.request.ErrorResult.ErrorResult"]},{"name":"constructor(durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, preferExactIntrinsicSize: Boolean = false)","description":"coil.transition.CrossfadeTransition.Factory.Factory","location":"coil-base/coil.transition/-crossfade-transition/-factory/-factory.html","searchKeys":["Factory","constructor(durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, preferExactIntrinsicSize: Boolean = false)","coil.transition.CrossfadeTransition.Factory.Factory"]},{"name":"constructor(filePath: String)","description":"coil.decode.AssetMetadata.AssetMetadata","location":"coil-base/coil.decode/-asset-metadata/-asset-metadata.html","searchKeys":["AssetMetadata","constructor(filePath: String)","coil.decode.AssetMetadata.AssetMetadata"]},{"name":"constructor(interceptorDispatcher: CoroutineDispatcher = Dispatchers.Main.immediate, fetcherDispatcher: CoroutineDispatcher = Dispatchers.IO, decoderDispatcher: CoroutineDispatcher = Dispatchers.IO, transformationDispatcher: CoroutineDispatcher = Dispatchers.IO, transitionFactory: Transition.Factory = Transition.Factory.NONE, precision: Precision = Precision.AUTOMATIC, bitmapConfig: Bitmap.Config = DEFAULT_BITMAP_CONFIG, allowHardware: Boolean = true, allowRgb565: Boolean = false, placeholder: Drawable? = null, error: Drawable? = null, fallback: Drawable? = null, memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, diskCachePolicy: CachePolicy = CachePolicy.ENABLED, networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","description":"coil.request.DefaultRequestOptions.DefaultRequestOptions","location":"coil-base/coil.request/-default-request-options/-default-request-options.html","searchKeys":["DefaultRequestOptions","constructor(interceptorDispatcher: CoroutineDispatcher = Dispatchers.Main.immediate, fetcherDispatcher: CoroutineDispatcher = Dispatchers.IO, decoderDispatcher: CoroutineDispatcher = Dispatchers.IO, transformationDispatcher: CoroutineDispatcher = Dispatchers.IO, transitionFactory: Transition.Factory = Transition.Factory.NONE, precision: Precision = Precision.AUTOMATIC, bitmapConfig: Bitmap.Config = DEFAULT_BITMAP_CONFIG, allowHardware: Boolean = true, allowRgb565: Boolean = false, placeholder: Drawable? = null, error: Drawable? = null, fallback: Drawable? = null, memoryCachePolicy: CachePolicy = CachePolicy.ENABLED, diskCachePolicy: CachePolicy = CachePolicy.ENABLED, networkCachePolicy: CachePolicy = CachePolicy.ENABLED)","coil.request.DefaultRequestOptions.DefaultRequestOptions"]},{"name":"constructor(key: String, extras: Map<String, String> = emptyMap())","description":"coil.memory.MemoryCache.Key.Key","location":"coil-base/coil.memory/-memory-cache/-key/-key.html","searchKeys":["Key","constructor(key: String, extras: Map<String, String> = emptyMap())","coil.memory.MemoryCache.Key.Key"]},{"name":"constructor(level: Int = Log.DEBUG)","description":"coil.util.DebugLogger.DebugLogger","location":"coil-base/coil.util/-debug-logger/-debug-logger.html","searchKeys":["DebugLogger","constructor(level: Int = Log.DEBUG)","coil.util.DebugLogger.DebugLogger"]},{"name":"constructor(lifecycle: Lifecycle?, sizeResolver: SizeResolver?, scale: Scale?, interceptorDispatcher: CoroutineDispatcher?, fetcherDispatcher: CoroutineDispatcher?, decoderDispatcher: CoroutineDispatcher?, transformationDispatcher: CoroutineDispatcher?, transitionFactory: Transition.Factory?, precision: Precision?, bitmapConfig: Bitmap.Config?, allowHardware: Boolean?, allowRgb565: Boolean?, memoryCachePolicy: CachePolicy?, diskCachePolicy: CachePolicy?, networkCachePolicy: CachePolicy?)","description":"coil.request.DefinedRequestOptions.DefinedRequestOptions","location":"coil-base/coil.request/-defined-request-options/-defined-request-options.html","searchKeys":["DefinedRequestOptions","constructor(lifecycle: Lifecycle?, sizeResolver: SizeResolver?, scale: Scale?, interceptorDispatcher: CoroutineDispatcher?, fetcherDispatcher: CoroutineDispatcher?, decoderDispatcher: CoroutineDispatcher?, transformationDispatcher: CoroutineDispatcher?, transitionFactory: Transition.Factory?, precision: Precision?, bitmapConfig: Bitmap.Config?, allowHardware: Boolean?, allowRgb565: Boolean?, memoryCachePolicy: CachePolicy?, diskCachePolicy: CachePolicy?, networkCachePolicy: CachePolicy?)","coil.request.DefinedRequestOptions.DefinedRequestOptions"]},{"name":"constructor(maxParallelism: Int = DEFAULT_MAX_PARALLELISM, exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE)","description":"coil.decode.BitmapFactoryDecoder.Factory.Factory","location":"coil-base/coil.decode/-bitmap-factory-decoder/-factory/-factory.html","searchKeys":["Factory","constructor(maxParallelism: Int = DEFAULT_MAX_PARALLELISM, exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE)","coil.decode.BitmapFactoryDecoder.Factory.Factory"]},{"name":"constructor(packageName: String, resId: Int, density: Int)","description":"coil.decode.ResourceMetadata.ResourceMetadata","location":"coil-base/coil.decode/-resource-metadata/-resource-metadata.html","searchKeys":["ResourceMetadata","constructor(packageName: String, resId: Int, density: Int)","coil.decode.ResourceMetadata.ResourceMetadata"]},{"name":"constructor(parameters: Parameters)","description":"coil.request.Parameters.Builder.Builder","location":"coil-base/coil.request/-parameters/-builder/-builder.html","searchKeys":["Builder","constructor(parameters: Parameters)","coil.request.Parameters.Builder.Builder"]},{"name":"constructor(px: Int)","description":"coil.size.Dimension.Pixels.Pixels","location":"coil-base/coil.size/-dimension/-pixels/-pixels.html","searchKeys":["Pixels","constructor(px: Int)","coil.size.Dimension.Pixels.Pixels"]},{"name":"constructor(radius: Float)","description":"coil.transform.RoundedCornersTransformation.RoundedCornersTransformation","location":"coil-base/coil.transform/-rounded-corners-transformation/-rounded-corners-transformation.html","searchKeys":["RoundedCornersTransformation","constructor(radius: Float)","coil.transform.RoundedCornersTransformation.RoundedCornersTransformation"]},{"name":"constructor(registry: ComponentRegistry)","description":"coil.ComponentRegistry.Builder.Builder","location":"coil-base/coil/-component-registry/-builder/-builder.html","searchKeys":["Builder","constructor(registry: ComponentRegistry)","coil.ComponentRegistry.Builder.Builder"]},{"name":"constructor(request: ImageRequest, context: Context = request.context)","description":"coil.request.ImageRequest.Builder.Builder","location":"coil-base/coil.request/-image-request/-builder/-builder.html","searchKeys":["Builder","constructor(request: ImageRequest, context: Context = request.context)","coil.request.ImageRequest.Builder.Builder"]},{"name":"constructor(response: Response)","description":"coil.network.HttpException.HttpException","location":"coil-base/coil.network/-http-exception/-http-exception.html","searchKeys":["HttpException","constructor(response: Response)","coil.network.HttpException.HttpException"]},{"name":"constructor(source: ImageSource, mimeType: String?, dataSource: DataSource)","description":"coil.fetch.SourceResult.SourceResult","location":"coil-base/coil.fetch/-source-result/-source-result.html","searchKeys":["SourceResult","constructor(source: ImageSource, mimeType: String?, dataSource: DataSource)","coil.fetch.SourceResult.SourceResult"]},{"name":"constructor(source: ImageSource, options: Options, parallelismLock: Semaphore = Semaphore(Int.MAX_VALUE), exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE)","description":"coil.decode.BitmapFactoryDecoder.BitmapFactoryDecoder","location":"coil-base/coil.decode/-bitmap-factory-decoder/-bitmap-factory-decoder.html","searchKeys":["BitmapFactoryDecoder","constructor(source: ImageSource, options: Options, parallelismLock: Semaphore = Semaphore(Int.MAX_VALUE), exifOrientationPolicy: ExifOrientationPolicy = ExifOrientationPolicy.RESPECT_PERFORMANCE)","coil.decode.BitmapFactoryDecoder.BitmapFactoryDecoder"]},{"name":"constructor(start: Drawable?, end: Drawable?, scale: Scale = Scale.FIT, durationMillis: Int = DEFAULT_DURATION, fadeStart: Boolean = true, preferExactIntrinsicSize: Boolean = false)","description":"coil.drawable.CrossfadeDrawable.CrossfadeDrawable","location":"coil-base/coil.drawable/-crossfade-drawable/-crossfade-drawable.html","searchKeys":["CrossfadeDrawable","constructor(start: Drawable?, end: Drawable?, scale: Scale = Scale.FIT, durationMillis: Int = DEFAULT_DURATION, fadeStart: Boolean = true, preferExactIntrinsicSize: Boolean = false)","coil.drawable.CrossfadeDrawable.CrossfadeDrawable"]},{"name":"constructor(target: TransitionTarget, result: ImageResult, durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, preferExactIntrinsicSize: Boolean = false)","description":"coil.transition.CrossfadeTransition.CrossfadeTransition","location":"coil-base/coil.transition/-crossfade-transition/-crossfade-transition.html","searchKeys":["CrossfadeTransition","constructor(target: TransitionTarget, result: ImageResult, durationMillis: Int = CrossfadeDrawable.DEFAULT_DURATION, preferExactIntrinsicSize: Boolean = false)","coil.transition.CrossfadeTransition.CrossfadeTransition"]},{"name":"constructor(topLeft: Float = 0.0f, topRight: Float = 0.0f, bottomLeft: Float = 0.0f, bottomRight: Float = 0.0f)","description":"coil.transform.RoundedCornersTransformation.RoundedCornersTransformation","location":"coil-base/coil.transform/-rounded-corners-transformation/-rounded-corners-transformation.html","searchKeys":["RoundedCornersTransformation","constructor(topLeft: Float = 0.0f, topRight: Float = 0.0f, bottomLeft: Float = 0.0f, bottomRight: Float = 0.0f)","coil.transform.RoundedCornersTransformation.RoundedCornersTransformation"]},{"name":"constructor(uri: Uri)","description":"coil.decode.ContentMetadata.ContentMetadata","location":"coil-base/coil.decode/-content-metadata/-content-metadata.html","searchKeys":["ContentMetadata","constructor(uri: Uri)","coil.decode.ContentMetadata.ContentMetadata"]},{"name":"constructor(value: Any?, memoryCacheKey: String?)","description":"coil.request.Parameters.Entry.Entry","location":"coil-base/coil.request/-parameters/-entry/-entry.html","searchKeys":["Entry","constructor(value: Any?, memoryCacheKey: String?)","coil.request.Parameters.Entry.Entry"]},{"name":"constructor(view: ImageView)","description":"coil.target.ImageViewTarget.ImageViewTarget","location":"coil-base/coil.target/-image-view-target/-image-view-target.html","searchKeys":["ImageViewTarget","constructor(view: ImageView)","coil.target.ImageViewTarget.ImageViewTarget"]},{"name":"constructor(width: Dimension, height: Dimension)","description":"coil.size.Size.Size","location":"coil-base/coil.size/-size/-size.html","searchKeys":["Size","constructor(width: Dimension, height: Dimension)","coil.size.Size.Size"]},{"name":"data class Size(val width: Dimension, val height: Dimension)","description":"coil.size.Size","location":"coil-base/coil.size/-size/index.html","searchKeys":["Size","data class Size(val width: Dimension, val height: Dimension)","coil.size.Size"]},{"name":"enum CachePolicy : Enum<CachePolicy> ","description":"coil.request.CachePolicy","location":"coil-base/coil.request/-cache-policy/index.html","searchKeys":["CachePolicy","enum CachePolicy : Enum<CachePolicy> ","coil.request.CachePolicy"]},{"name":"enum DataSource : Enum<DataSource> ","description":"coil.decode.DataSource","location":"coil-base/coil.decode/-data-source/index.html","searchKeys":["DataSource","enum DataSource : Enum<DataSource> ","coil.decode.DataSource"]},{"name":"enum ExifOrientationPolicy : Enum<ExifOrientationPolicy> ","description":"coil.decode.ExifOrientationPolicy","location":"coil-base/coil.decode/-exif-orientation-policy/index.html","searchKeys":["ExifOrientationPolicy","enum ExifOrientationPolicy : Enum<ExifOrientationPolicy> ","coil.decode.ExifOrientationPolicy"]},{"name":"enum Precision : Enum<Precision> ","description":"coil.size.Precision","location":"coil-base/coil.size/-precision/index.html","searchKeys":["Precision","enum Precision : Enum<Precision> ","coil.size.Precision"]},{"name":"enum Scale : Enum<Scale> ","description":"coil.size.Scale","location":"coil-base/coil.size/-scale/index.html","searchKeys":["Scale","enum Scale : Enum<Scale> ","coil.size.Scale"]},{"name":"fun <T : Any> add(factory: Fetcher.Factory<T>, type: Class<T>): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","fun <T : Any> add(factory: Fetcher.Factory<T>, type: Class<T>): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"fun <T : Any> add(keyer: Keyer<T>, type: Class<T>): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","fun <T : Any> add(keyer: Keyer<T>, type: Class<T>): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"fun <T : Any> add(mapper: Mapper<T, *>, type: Class<T>): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","fun <T : Any> add(mapper: Mapper<T, *>, type: Class<T>): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"fun <T : Any> fetcherFactory(factory: Fetcher.Factory<T>, type: Class<T>): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.fetcherFactory","location":"coil-base/coil.request/-image-request/-builder/fetcher-factory.html","searchKeys":["fetcherFactory","fun <T : Any> fetcherFactory(factory: Fetcher.Factory<T>, type: Class<T>): ImageRequest.Builder","coil.request.ImageRequest.Builder.fetcherFactory"]},{"name":"fun <T : Any> tag(type: Class<in T>, tag: T?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.tag","location":"coil-base/coil.request/-image-request/-builder/tag.html","searchKeys":["tag","fun <T : Any> tag(type: Class<in T>, tag: T?): ImageRequest.Builder","coil.request.ImageRequest.Builder.tag"]},{"name":"fun <T : Any> tag(type: Class<out T>): T?","description":"coil.request.Tags.tag","location":"coil-base/coil.request/-tags/tag.html","searchKeys":["tag","fun <T : Any> tag(type: Class<out T>): T?","coil.request.Tags.tag"]},{"name":"fun <T : Any> value(key: String): T?","description":"coil.request.Parameters.value","location":"coil-base/coil.request/-parameters/value.html","searchKeys":["value","fun <T : Any> value(key: String): T?","coil.request.Parameters.value"]},{"name":"fun <T : View> ViewSizeResolver(view: T, subtractPadding: Boolean = true): ViewSizeResolver<T>","description":"coil.size.ViewSizeResolver","location":"coil-base/coil.size/-view-size-resolver.html","searchKeys":["ViewSizeResolver","fun <T : View> ViewSizeResolver(view: T, subtractPadding: Boolean = true): ViewSizeResolver<T>","coil.size.ViewSizeResolver"]},{"name":"fun Dimension(px: Int): Dimension.Pixels","description":"coil.size.Dimension","location":"coil-base/coil.size/-dimension.html","searchKeys":["Dimension","fun Dimension(px: Int): Dimension.Pixels","coil.size.Dimension"]},{"name":"fun ImageLoader(context: Context): ImageLoader","description":"coil.ImageLoader","location":"coil-base/coil/-image-loader.html","searchKeys":["ImageLoader","fun ImageLoader(context: Context): ImageLoader","coil.ImageLoader"]},{"name":"fun ImageLoader.executeBlocking(request: ImageRequest): ImageResult","description":"coil.executeBlocking","location":"coil-base/coil/execute-blocking.html","searchKeys":["executeBlocking","fun ImageLoader.executeBlocking(request: ImageRequest): ImageResult","coil.executeBlocking"]},{"name":"fun ImageSource(file: Path, fileSystem: FileSystem = FileSystem.SYSTEM, diskCacheKey: String? = null, closeable: Closeable? = null): ImageSource","description":"coil.decode.ImageSource","location":"coil-base/coil.decode/-image-source.html","searchKeys":["ImageSource","fun ImageSource(file: Path, fileSystem: FileSystem = FileSystem.SYSTEM, diskCacheKey: String? = null, closeable: Closeable? = null): ImageSource","coil.decode.ImageSource"]},{"name":"fun ImageSource(file: Path, fileSystem: FileSystem = FileSystem.SYSTEM, diskCacheKey: String? = null, closeable: Closeable? = null, metadata: ImageSource.Metadata? = null): ImageSource","description":"coil.decode.ImageSource","location":"coil-base/coil.decode/-image-source.html","searchKeys":["ImageSource","fun ImageSource(file: Path, fileSystem: FileSystem = FileSystem.SYSTEM, diskCacheKey: String? = null, closeable: Closeable? = null, metadata: ImageSource.Metadata? = null): ImageSource","coil.decode.ImageSource"]},{"name":"fun ImageSource(source: BufferedSource, cacheDirectory: File): ImageSource","description":"coil.decode.ImageSource","location":"coil-base/coil.decode/-image-source.html","searchKeys":["ImageSource","fun ImageSource(source: BufferedSource, cacheDirectory: File): ImageSource","coil.decode.ImageSource"]},{"name":"fun ImageSource(source: BufferedSource, cacheDirectory: File, metadata: ImageSource.Metadata? = null): ImageSource","description":"coil.decode.ImageSource","location":"coil-base/coil.decode/-image-source.html","searchKeys":["ImageSource","fun ImageSource(source: BufferedSource, cacheDirectory: File, metadata: ImageSource.Metadata? = null): ImageSource","coil.decode.ImageSource"]},{"name":"fun ImageSource(source: BufferedSource, context: Context): ImageSource","description":"coil.decode.ImageSource","location":"coil-base/coil.decode/-image-source.html","searchKeys":["ImageSource","fun ImageSource(source: BufferedSource, context: Context): ImageSource","coil.decode.ImageSource"]},{"name":"fun ImageSource(source: BufferedSource, context: Context, metadata: ImageSource.Metadata? = null): ImageSource","description":"coil.decode.ImageSource","location":"coil-base/coil.decode/-image-source.html","searchKeys":["ImageSource","fun ImageSource(source: BufferedSource, context: Context, metadata: ImageSource.Metadata? = null): ImageSource","coil.decode.ImageSource"]},{"name":"fun Size(width: Dimension, height: Int): Size","description":"coil.size.Size","location":"coil-base/coil.size/-size.html","searchKeys":["Size","fun Size(width: Dimension, height: Int): Size","coil.size.Size"]},{"name":"fun Size(width: Int, height: Dimension): Size","description":"coil.size.Size","location":"coil-base/coil.size/-size.html","searchKeys":["Size","fun Size(width: Int, height: Dimension): Size","coil.size.Size"]},{"name":"fun Size(width: Int, height: Int): Size","description":"coil.size.Size","location":"coil-base/coil.size/-size.html","searchKeys":["Size","fun Size(width: Int, height: Int): Size","coil.size.Size"]},{"name":"fun SizeResolver(size: Size): SizeResolver","description":"coil.size.SizeResolver","location":"coil-base/coil.size/-size-resolver.html","searchKeys":["SizeResolver","fun SizeResolver(size: Size): SizeResolver","coil.size.SizeResolver"]},{"name":"fun add(factory: Decoder.Factory): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","fun add(factory: Decoder.Factory): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"fun add(interceptor: Interceptor): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","fun add(interceptor: Interceptor): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"fun addHeader(name: String, value: String): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.addHeader","location":"coil-base/coil.request/-image-request/-builder/add-header.html","searchKeys":["addHeader","fun addHeader(name: String, value: String): ImageRequest.Builder","coil.request.ImageRequest.Builder.addHeader"]},{"name":"fun addLastModifiedToFileCacheKey(enable: Boolean): ImageLoader.Builder","description":"coil.ImageLoader.Builder.addLastModifiedToFileCacheKey","location":"coil-base/coil/-image-loader/-builder/add-last-modified-to-file-cache-key.html","searchKeys":["addLastModifiedToFileCacheKey","fun addLastModifiedToFileCacheKey(enable: Boolean): ImageLoader.Builder","coil.ImageLoader.Builder.addLastModifiedToFileCacheKey"]},{"name":"fun allowConversionToBitmap(enable: Boolean): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.allowConversionToBitmap","location":"coil-base/coil.request/-image-request/-builder/allow-conversion-to-bitmap.html","searchKeys":["allowConversionToBitmap","fun allowConversionToBitmap(enable: Boolean): ImageRequest.Builder","coil.request.ImageRequest.Builder.allowConversionToBitmap"]},{"name":"fun allowHardware(enable: Boolean): ImageLoader.Builder","description":"coil.ImageLoader.Builder.allowHardware","location":"coil-base/coil/-image-loader/-builder/allow-hardware.html","searchKeys":["allowHardware","fun allowHardware(enable: Boolean): ImageLoader.Builder","coil.ImageLoader.Builder.allowHardware"]},{"name":"fun allowHardware(enable: Boolean): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.allowHardware","location":"coil-base/coil.request/-image-request/-builder/allow-hardware.html","searchKeys":["allowHardware","fun allowHardware(enable: Boolean): ImageRequest.Builder","coil.request.ImageRequest.Builder.allowHardware"]},{"name":"fun allowRgb565(enable: Boolean): ImageLoader.Builder","description":"coil.ImageLoader.Builder.allowRgb565","location":"coil-base/coil/-image-loader/-builder/allow-rgb565.html","searchKeys":["allowRgb565","fun allowRgb565(enable: Boolean): ImageLoader.Builder","coil.ImageLoader.Builder.allowRgb565"]},{"name":"fun allowRgb565(enable: Boolean): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.allowRgb565","location":"coil-base/coil.request/-image-request/-builder/allow-rgb565.html","searchKeys":["allowRgb565","fun allowRgb565(enable: Boolean): ImageRequest.Builder","coil.request.ImageRequest.Builder.allowRgb565"]},{"name":"fun asMap(): Map<Class<*>, Any>","description":"coil.request.Tags.asMap","location":"coil-base/coil.request/-tags/as-map.html","searchKeys":["asMap","fun asMap(): Map<Class<*>, Any>","coil.request.Tags.asMap"]},{"name":"fun bitmapConfig(bitmapConfig: Bitmap.Config): ImageLoader.Builder","description":"coil.ImageLoader.Builder.bitmapConfig","location":"coil-base/coil/-image-loader/-builder/bitmap-config.html","searchKeys":["bitmapConfig","fun bitmapConfig(bitmapConfig: Bitmap.Config): ImageLoader.Builder","coil.ImageLoader.Builder.bitmapConfig"]},{"name":"fun bitmapConfig(config: Bitmap.Config): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.bitmapConfig","location":"coil-base/coil.request/-image-request/-builder/bitmap-config.html","searchKeys":["bitmapConfig","fun bitmapConfig(config: Bitmap.Config): ImageRequest.Builder","coil.request.ImageRequest.Builder.bitmapConfig"]},{"name":"fun bitmapFactoryExifOrientationPolicy(policy: ExifOrientationPolicy): ImageLoader.Builder","description":"coil.ImageLoader.Builder.bitmapFactoryExifOrientationPolicy","location":"coil-base/coil/-image-loader/-builder/bitmap-factory-exif-orientation-policy.html","searchKeys":["bitmapFactoryExifOrientationPolicy","fun bitmapFactoryExifOrientationPolicy(policy: ExifOrientationPolicy): ImageLoader.Builder","coil.ImageLoader.Builder.bitmapFactoryExifOrientationPolicy"]},{"name":"fun bitmapFactoryMaxParallelism(maxParallelism: Int): ImageLoader.Builder","description":"coil.ImageLoader.Builder.bitmapFactoryMaxParallelism","location":"coil-base/coil/-image-loader/-builder/bitmap-factory-max-parallelism.html","searchKeys":["bitmapFactoryMaxParallelism","fun bitmapFactoryMaxParallelism(maxParallelism: Int): ImageLoader.Builder","coil.ImageLoader.Builder.bitmapFactoryMaxParallelism"]},{"name":"fun build(): ComponentRegistry","description":"coil.ComponentRegistry.Builder.build","location":"coil-base/coil/-component-registry/-builder/build.html","searchKeys":["build","fun build(): ComponentRegistry","coil.ComponentRegistry.Builder.build"]},{"name":"fun build(): DiskCache","description":"coil.disk.DiskCache.Builder.build","location":"coil-base/coil.disk/-disk-cache/-builder/build.html","searchKeys":["build","fun build(): DiskCache","coil.disk.DiskCache.Builder.build"]},{"name":"fun build(): ImageLoader","description":"coil.ImageLoader.Builder.build","location":"coil-base/coil/-image-loader/-builder/build.html","searchKeys":["build","fun build(): ImageLoader","coil.ImageLoader.Builder.build"]},{"name":"fun build(): ImageRequest","description":"coil.request.ImageRequest.Builder.build","location":"coil-base/coil.request/-image-request/-builder/build.html","searchKeys":["build","fun build(): ImageRequest","coil.request.ImageRequest.Builder.build"]},{"name":"fun build(): MemoryCache","description":"coil.memory.MemoryCache.Builder.build","location":"coil-base/coil.memory/-memory-cache/-builder/build.html","searchKeys":["build","fun build(): MemoryCache","coil.memory.MemoryCache.Builder.build"]},{"name":"fun build(): Parameters","description":"coil.request.Parameters.Builder.build","location":"coil-base/coil.request/-parameters/-builder/build.html","searchKeys":["build","fun build(): Parameters","coil.request.Parameters.Builder.build"]},{"name":"fun calculateInSampleSize(srcWidth: Int, srcHeight: Int, dstWidth: Int, dstHeight: Int, scale: Scale): Int","description":"coil.decode.DecodeUtils.calculateInSampleSize","location":"coil-base/coil.decode/-decode-utils/calculate-in-sample-size.html","searchKeys":["calculateInSampleSize","fun calculateInSampleSize(srcWidth: Int, srcHeight: Int, dstWidth: Int, dstHeight: Int, scale: Scale): Int","coil.decode.DecodeUtils.calculateInSampleSize"]},{"name":"fun callFactory(callFactory: Call.Factory): ImageLoader.Builder","description":"coil.ImageLoader.Builder.callFactory","location":"coil-base/coil/-image-loader/-builder/call-factory.html","searchKeys":["callFactory","fun callFactory(callFactory: Call.Factory): ImageLoader.Builder","coil.ImageLoader.Builder.callFactory"]},{"name":"fun callFactory(initializer: () -> Call.Factory): ImageLoader.Builder","description":"coil.ImageLoader.Builder.callFactory","location":"coil-base/coil/-image-loader/-builder/call-factory.html","searchKeys":["callFactory","fun callFactory(initializer: () -> Call.Factory): ImageLoader.Builder","coil.ImageLoader.Builder.callFactory"]},{"name":"fun cleanupDispatcher(dispatcher: CoroutineDispatcher): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.cleanupDispatcher","location":"coil-base/coil.disk/-disk-cache/-builder/cleanup-dispatcher.html","searchKeys":["cleanupDispatcher","fun cleanupDispatcher(dispatcher: CoroutineDispatcher): DiskCache.Builder","coil.disk.DiskCache.Builder.cleanupDispatcher"]},{"name":"fun colorSpace(colorSpace: ColorSpace): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.colorSpace","location":"coil-base/coil.request/-image-request/-builder/color-space.html","searchKeys":["colorSpace","fun colorSpace(colorSpace: ColorSpace): ImageRequest.Builder","coil.request.ImageRequest.Builder.colorSpace"]},{"name":"fun components(components: ComponentRegistry): ImageLoader.Builder","description":"coil.ImageLoader.Builder.components","location":"coil-base/coil/-image-loader/-builder/components.html","searchKeys":["components","fun components(components: ComponentRegistry): ImageLoader.Builder","coil.ImageLoader.Builder.components"]},{"name":"fun computeSizeMultiplier(srcWidth: Double, srcHeight: Double, dstWidth: Double, dstHeight: Double, scale: Scale): Double","description":"coil.decode.DecodeUtils.computeSizeMultiplier","location":"coil-base/coil.decode/-decode-utils/compute-size-multiplier.html","searchKeys":["computeSizeMultiplier","fun computeSizeMultiplier(srcWidth: Double, srcHeight: Double, dstWidth: Double, dstHeight: Double, scale: Scale): Double","coil.decode.DecodeUtils.computeSizeMultiplier"]},{"name":"fun computeSizeMultiplier(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float, scale: Scale): Float","description":"coil.decode.DecodeUtils.computeSizeMultiplier","location":"coil-base/coil.decode/-decode-utils/compute-size-multiplier.html","searchKeys":["computeSizeMultiplier","fun computeSizeMultiplier(srcWidth: Float, srcHeight: Float, dstWidth: Float, dstHeight: Float, scale: Scale): Float","coil.decode.DecodeUtils.computeSizeMultiplier"]},{"name":"fun computeSizeMultiplier(srcWidth: Int, srcHeight: Int, dstWidth: Int, dstHeight: Int, scale: Scale): Double","description":"coil.decode.DecodeUtils.computeSizeMultiplier","location":"coil-base/coil.decode/-decode-utils/compute-size-multiplier.html","searchKeys":["computeSizeMultiplier","fun computeSizeMultiplier(srcWidth: Int, srcHeight: Int, dstWidth: Int, dstHeight: Int, scale: Scale): Double","coil.decode.DecodeUtils.computeSizeMultiplier"]},{"name":"fun copy(bitmap: Bitmap = this.bitmap, extras: Map<String, Any> = this.extras): MemoryCache.Value","description":"coil.memory.MemoryCache.Value.copy","location":"coil-base/coil.memory/-memory-cache/-value/copy.html","searchKeys":["copy","fun copy(bitmap: Bitmap = this.bitmap, extras: Map<String, Any> = this.extras): MemoryCache.Value","coil.memory.MemoryCache.Value.copy"]},{"name":"fun copy(context: Context = this.context, config: Bitmap.Config = this.config, colorSpace: ColorSpace? = this.colorSpace, size: Size = this.size, scale: Scale = this.scale, allowInexactSize: Boolean = this.allowInexactSize, allowRgb565: Boolean = this.allowRgb565, premultipliedAlpha: Boolean = this.premultipliedAlpha, diskCacheKey: String? = this.diskCacheKey, headers: Headers = this.headers, tags: Tags = this.tags, parameters: Parameters = this.parameters, memoryCachePolicy: CachePolicy = this.memoryCachePolicy, diskCachePolicy: CachePolicy = this.diskCachePolicy, networkCachePolicy: CachePolicy = this.networkCachePolicy): Options","description":"coil.request.Options.copy","location":"coil-base/coil.request/-options/copy.html","searchKeys":["copy","fun copy(context: Context = this.context, config: Bitmap.Config = this.config, colorSpace: ColorSpace? = this.colorSpace, size: Size = this.size, scale: Scale = this.scale, allowInexactSize: Boolean = this.allowInexactSize, allowRgb565: Boolean = this.allowRgb565, premultipliedAlpha: Boolean = this.premultipliedAlpha, diskCacheKey: String? = this.diskCacheKey, headers: Headers = this.headers, tags: Tags = this.tags, parameters: Parameters = this.parameters, memoryCachePolicy: CachePolicy = this.memoryCachePolicy, diskCachePolicy: CachePolicy = this.diskCachePolicy, networkCachePolicy: CachePolicy = this.networkCachePolicy): Options","coil.request.Options.copy"]},{"name":"fun copy(drawable: Drawable = this.drawable, isSampled: Boolean = this.isSampled): DecodeResult","description":"coil.decode.DecodeResult.copy","location":"coil-base/coil.decode/-decode-result/copy.html","searchKeys":["copy","fun copy(drawable: Drawable = this.drawable, isSampled: Boolean = this.isSampled): DecodeResult","coil.decode.DecodeResult.copy"]},{"name":"fun copy(drawable: Drawable = this.drawable, isSampled: Boolean = this.isSampled, dataSource: DataSource = this.dataSource): DrawableResult","description":"coil.fetch.DrawableResult.copy","location":"coil-base/coil.fetch/-drawable-result/copy.html","searchKeys":["copy","fun copy(drawable: Drawable = this.drawable, isSampled: Boolean = this.isSampled, dataSource: DataSource = this.dataSource): DrawableResult","coil.fetch.DrawableResult.copy"]},{"name":"fun copy(drawable: Drawable = this.drawable, request: ImageRequest = this.request, dataSource: DataSource = this.dataSource, memoryCacheKey: MemoryCache.Key? = this.memoryCacheKey, diskCacheKey: String? = this.diskCacheKey, isSampled: Boolean = this.isSampled, isPlaceholderCached: Boolean = this.isPlaceholderCached): SuccessResult","description":"coil.request.SuccessResult.copy","location":"coil-base/coil.request/-success-result/copy.html","searchKeys":["copy","fun copy(drawable: Drawable = this.drawable, request: ImageRequest = this.request, dataSource: DataSource = this.dataSource, memoryCacheKey: MemoryCache.Key? = this.memoryCacheKey, diskCacheKey: String? = this.diskCacheKey, isSampled: Boolean = this.isSampled, isPlaceholderCached: Boolean = this.isPlaceholderCached): SuccessResult","coil.request.SuccessResult.copy"]},{"name":"fun copy(drawable: Drawable? = this.drawable, request: ImageRequest = this.request, throwable: Throwable = this.throwable): ErrorResult","description":"coil.request.ErrorResult.copy","location":"coil-base/coil.request/-error-result/copy.html","searchKeys":["copy","fun copy(drawable: Drawable? = this.drawable, request: ImageRequest = this.request, throwable: Throwable = this.throwable): ErrorResult","coil.request.ErrorResult.copy"]},{"name":"fun copy(interceptorDispatcher: CoroutineDispatcher = this.interceptorDispatcher, fetcherDispatcher: CoroutineDispatcher = this.fetcherDispatcher, decoderDispatcher: CoroutineDispatcher = this.decoderDispatcher, transformationDispatcher: CoroutineDispatcher = this.transformationDispatcher, transitionFactory: Transition.Factory = this.transitionFactory, precision: Precision = this.precision, bitmapConfig: Bitmap.Config = this.bitmapConfig, allowHardware: Boolean = this.allowHardware, allowRgb565: Boolean = this.allowRgb565, placeholder: Drawable? = this.placeholder, error: Drawable? = this.error, fallback: Drawable? = this.fallback, memoryCachePolicy: CachePolicy = this.memoryCachePolicy, diskCachePolicy: CachePolicy = this.diskCachePolicy, networkCachePolicy: CachePolicy = this.networkCachePolicy): DefaultRequestOptions","description":"coil.request.DefaultRequestOptions.copy","location":"coil-base/coil.request/-default-request-options/copy.html","searchKeys":["copy","fun copy(interceptorDispatcher: CoroutineDispatcher = this.interceptorDispatcher, fetcherDispatcher: CoroutineDispatcher = this.fetcherDispatcher, decoderDispatcher: CoroutineDispatcher = this.decoderDispatcher, transformationDispatcher: CoroutineDispatcher = this.transformationDispatcher, transitionFactory: Transition.Factory = this.transitionFactory, precision: Precision = this.precision, bitmapConfig: Bitmap.Config = this.bitmapConfig, allowHardware: Boolean = this.allowHardware, allowRgb565: Boolean = this.allowRgb565, placeholder: Drawable? = this.placeholder, error: Drawable? = this.error, fallback: Drawable? = this.fallback, memoryCachePolicy: CachePolicy = this.memoryCachePolicy, diskCachePolicy: CachePolicy = this.diskCachePolicy, networkCachePolicy: CachePolicy = this.networkCachePolicy): DefaultRequestOptions","coil.request.DefaultRequestOptions.copy"]},{"name":"fun copy(key: String = this.key, extras: Map<String, String> = this.extras): MemoryCache.Key","description":"coil.memory.MemoryCache.Key.copy","location":"coil-base/coil.memory/-memory-cache/-key/copy.html","searchKeys":["copy","fun copy(key: String = this.key, extras: Map<String, String> = this.extras): MemoryCache.Key","coil.memory.MemoryCache.Key.copy"]},{"name":"fun copy(lifecycle: Lifecycle? = this.lifecycle, sizeResolver: SizeResolver? = this.sizeResolver, scale: Scale? = this.scale, interceptorDispatcher: CoroutineDispatcher? = this.interceptorDispatcher, fetcherDispatcher: CoroutineDispatcher? = this.fetcherDispatcher, decoderDispatcher: CoroutineDispatcher? = this.decoderDispatcher, transformationDispatcher: CoroutineDispatcher? = this.transformationDispatcher, transitionFactory: Transition.Factory? = this.transitionFactory, precision: Precision? = this.precision, bitmapConfig: Bitmap.Config? = this.bitmapConfig, allowHardware: Boolean? = this.allowHardware, allowRgb565: Boolean? = this.allowRgb565, memoryCachePolicy: CachePolicy? = this.memoryCachePolicy, diskCachePolicy: CachePolicy? = this.diskCachePolicy, networkCachePolicy: CachePolicy? = this.networkCachePolicy): DefinedRequestOptions","description":"coil.request.DefinedRequestOptions.copy","location":"coil-base/coil.request/-defined-request-options/copy.html","searchKeys":["copy","fun copy(lifecycle: Lifecycle? = this.lifecycle, sizeResolver: SizeResolver? = this.sizeResolver, scale: Scale? = this.scale, interceptorDispatcher: CoroutineDispatcher? = this.interceptorDispatcher, fetcherDispatcher: CoroutineDispatcher? = this.fetcherDispatcher, decoderDispatcher: CoroutineDispatcher? = this.decoderDispatcher, transformationDispatcher: CoroutineDispatcher? = this.transformationDispatcher, transitionFactory: Transition.Factory? = this.transitionFactory, precision: Precision? = this.precision, bitmapConfig: Bitmap.Config? = this.bitmapConfig, allowHardware: Boolean? = this.allowHardware, allowRgb565: Boolean? = this.allowRgb565, memoryCachePolicy: CachePolicy? = this.memoryCachePolicy, diskCachePolicy: CachePolicy? = this.diskCachePolicy, networkCachePolicy: CachePolicy? = this.networkCachePolicy): DefinedRequestOptions","coil.request.DefinedRequestOptions.copy"]},{"name":"fun copy(source: ImageSource = this.source, mimeType: String? = this.mimeType, dataSource: DataSource = this.dataSource): SourceResult","description":"coil.fetch.SourceResult.copy","location":"coil-base/coil.fetch/-source-result/copy.html","searchKeys":["copy","fun copy(source: ImageSource = this.source, mimeType: String? = this.mimeType, dataSource: DataSource = this.dataSource): SourceResult","coil.fetch.SourceResult.copy"]},{"name":"fun crossfade(durationMillis: Int): ImageLoader.Builder","description":"coil.ImageLoader.Builder.crossfade","location":"coil-base/coil/-image-loader/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(durationMillis: Int): ImageLoader.Builder","coil.ImageLoader.Builder.crossfade"]},{"name":"fun crossfade(durationMillis: Int): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.crossfade","location":"coil-base/coil.request/-image-request/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(durationMillis: Int): ImageRequest.Builder","coil.request.ImageRequest.Builder.crossfade"]},{"name":"fun crossfade(enable: Boolean): ImageLoader.Builder","description":"coil.ImageLoader.Builder.crossfade","location":"coil-base/coil/-image-loader/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(enable: Boolean): ImageLoader.Builder","coil.ImageLoader.Builder.crossfade"]},{"name":"fun crossfade(enable: Boolean): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.crossfade","location":"coil-base/coil.request/-image-request/-builder/crossfade.html","searchKeys":["crossfade","fun crossfade(enable: Boolean): ImageRequest.Builder","coil.request.ImageRequest.Builder.crossfade"]},{"name":"fun data(data: Any?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.data","location":"coil-base/coil.request/-image-request/-builder/data.html","searchKeys":["data","fun data(data: Any?): ImageRequest.Builder","coil.request.ImageRequest.Builder.data"]},{"name":"fun decoderDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","description":"coil.ImageLoader.Builder.decoderDispatcher","location":"coil-base/coil/-image-loader/-builder/decoder-dispatcher.html","searchKeys":["decoderDispatcher","fun decoderDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","coil.ImageLoader.Builder.decoderDispatcher"]},{"name":"fun decoderDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.decoderDispatcher","location":"coil-base/coil.request/-image-request/-builder/decoder-dispatcher.html","searchKeys":["decoderDispatcher","fun decoderDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","coil.request.ImageRequest.Builder.decoderDispatcher"]},{"name":"fun decoderFactory(factory: Decoder.Factory): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.decoderFactory","location":"coil-base/coil.request/-image-request/-builder/decoder-factory.html","searchKeys":["decoderFactory","fun decoderFactory(factory: Decoder.Factory): ImageRequest.Builder","coil.request.ImageRequest.Builder.decoderFactory"]},{"name":"fun defaults(defaults: DefaultRequestOptions): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.defaults","location":"coil-base/coil.request/-image-request/-builder/defaults.html","searchKeys":["defaults","fun defaults(defaults: DefaultRequestOptions): ImageRequest.Builder","coil.request.ImageRequest.Builder.defaults"]},{"name":"fun directory(directory: File): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.directory","location":"coil-base/coil.disk/-disk-cache/-builder/directory.html","searchKeys":["directory","fun directory(directory: File): DiskCache.Builder","coil.disk.DiskCache.Builder.directory"]},{"name":"fun directory(directory: Path): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.directory","location":"coil-base/coil.disk/-disk-cache/-builder/directory.html","searchKeys":["directory","fun directory(directory: Path): DiskCache.Builder","coil.disk.DiskCache.Builder.directory"]},{"name":"fun diskCache(diskCache: DiskCache?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.diskCache","location":"coil-base/coil/-image-loader/-builder/disk-cache.html","searchKeys":["diskCache","fun diskCache(diskCache: DiskCache?): ImageLoader.Builder","coil.ImageLoader.Builder.diskCache"]},{"name":"fun diskCache(initializer: () -> DiskCache?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.diskCache","location":"coil-base/coil/-image-loader/-builder/disk-cache.html","searchKeys":["diskCache","fun diskCache(initializer: () -> DiskCache?): ImageLoader.Builder","coil.ImageLoader.Builder.diskCache"]},{"name":"fun diskCacheKey(key: String?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.diskCacheKey","location":"coil-base/coil.request/-image-request/-builder/disk-cache-key.html","searchKeys":["diskCacheKey","fun diskCacheKey(key: String?): ImageRequest.Builder","coil.request.ImageRequest.Builder.diskCacheKey"]},{"name":"fun diskCachePolicy(policy: CachePolicy): ImageLoader.Builder","description":"coil.ImageLoader.Builder.diskCachePolicy","location":"coil-base/coil/-image-loader/-builder/disk-cache-policy.html","searchKeys":["diskCachePolicy","fun diskCachePolicy(policy: CachePolicy): ImageLoader.Builder","coil.ImageLoader.Builder.diskCachePolicy"]},{"name":"fun diskCachePolicy(policy: CachePolicy): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.diskCachePolicy","location":"coil-base/coil.request/-image-request/-builder/disk-cache-policy.html","searchKeys":["diskCachePolicy","fun diskCachePolicy(policy: CachePolicy): ImageRequest.Builder","coil.request.ImageRequest.Builder.diskCachePolicy"]},{"name":"fun dispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","description":"coil.ImageLoader.Builder.dispatcher","location":"coil-base/coil/-image-loader/-builder/dispatcher.html","searchKeys":["dispatcher","fun dispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","coil.ImageLoader.Builder.dispatcher"]},{"name":"fun dispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.dispatcher","location":"coil-base/coil.request/-image-request/-builder/dispatcher.html","searchKeys":["dispatcher","fun dispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","coil.request.ImageRequest.Builder.dispatcher"]},{"name":"fun dispose(view: View)","description":"coil.util.CoilUtils.dispose","location":"coil-base/coil.util/-coil-utils/dispose.html","searchKeys":["dispose","fun dispose(view: View)","coil.util.CoilUtils.dispose"]},{"name":"fun entry(key: String): Parameters.Entry?","description":"coil.request.Parameters.entry","location":"coil-base/coil.request/-parameters/entry.html","searchKeys":["entry","fun entry(key: String): Parameters.Entry?","coil.request.Parameters.entry"]},{"name":"fun error(drawable: Drawable?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.error","location":"coil-base/coil/-image-loader/-builder/error.html","searchKeys":["error","fun error(drawable: Drawable?): ImageLoader.Builder","coil.ImageLoader.Builder.error"]},{"name":"fun error(drawable: Drawable?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.error","location":"coil-base/coil.request/-image-request/-builder/error.html","searchKeys":["error","fun error(drawable: Drawable?): ImageRequest.Builder","coil.request.ImageRequest.Builder.error"]},{"name":"fun error(drawableResId: Int): ImageLoader.Builder","description":"coil.ImageLoader.Builder.error","location":"coil-base/coil/-image-loader/-builder/error.html","searchKeys":["error","fun error(drawableResId: Int): ImageLoader.Builder","coil.ImageLoader.Builder.error"]},{"name":"fun error(drawableResId: Int): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.error","location":"coil-base/coil.request/-image-request/-builder/error.html","searchKeys":["error","fun error(drawableResId: Int): ImageRequest.Builder","coil.request.ImageRequest.Builder.error"]},{"name":"fun eventListener(listener: EventListener): ImageLoader.Builder","description":"coil.ImageLoader.Builder.eventListener","location":"coil-base/coil/-image-loader/-builder/event-listener.html","searchKeys":["eventListener","fun eventListener(listener: EventListener): ImageLoader.Builder","coil.ImageLoader.Builder.eventListener"]},{"name":"fun eventListenerFactory(factory: EventListener.Factory): ImageLoader.Builder","description":"coil.ImageLoader.Builder.eventListenerFactory","location":"coil-base/coil/-image-loader/-builder/event-listener-factory.html","searchKeys":["eventListenerFactory","fun eventListenerFactory(factory: EventListener.Factory): ImageLoader.Builder","coil.ImageLoader.Builder.eventListenerFactory"]},{"name":"fun fallback(drawable: Drawable?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.fallback","location":"coil-base/coil/-image-loader/-builder/fallback.html","searchKeys":["fallback","fun fallback(drawable: Drawable?): ImageLoader.Builder","coil.ImageLoader.Builder.fallback"]},{"name":"fun fallback(drawable: Drawable?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.fallback","location":"coil-base/coil.request/-image-request/-builder/fallback.html","searchKeys":["fallback","fun fallback(drawable: Drawable?): ImageRequest.Builder","coil.request.ImageRequest.Builder.fallback"]},{"name":"fun fallback(drawableResId: Int): ImageLoader.Builder","description":"coil.ImageLoader.Builder.fallback","location":"coil-base/coil/-image-loader/-builder/fallback.html","searchKeys":["fallback","fun fallback(drawableResId: Int): ImageLoader.Builder","coil.ImageLoader.Builder.fallback"]},{"name":"fun fallback(drawableResId: Int): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.fallback","location":"coil-base/coil.request/-image-request/-builder/fallback.html","searchKeys":["fallback","fun fallback(drawableResId: Int): ImageRequest.Builder","coil.request.ImageRequest.Builder.fallback"]},{"name":"fun fetcherDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","description":"coil.ImageLoader.Builder.fetcherDispatcher","location":"coil-base/coil/-image-loader/-builder/fetcher-dispatcher.html","searchKeys":["fetcherDispatcher","fun fetcherDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","coil.ImageLoader.Builder.fetcherDispatcher"]},{"name":"fun fetcherDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.fetcherDispatcher","location":"coil-base/coil.request/-image-request/-builder/fetcher-dispatcher.html","searchKeys":["fetcherDispatcher","fun fetcherDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","coil.request.ImageRequest.Builder.fetcherDispatcher"]},{"name":"fun fileSystem(fileSystem: FileSystem): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.fileSystem","location":"coil-base/coil.disk/-disk-cache/-builder/file-system.html","searchKeys":["fileSystem","fun fileSystem(fileSystem: FileSystem): DiskCache.Builder","coil.disk.DiskCache.Builder.fileSystem"]},{"name":"fun from(tags: Map<Class<*>, Any>): Tags","description":"coil.request.Tags.Companion.from","location":"coil-base/coil.request/-tags/-companion/from.html","searchKeys":["from","fun from(tags: Map<Class<*>, Any>): Tags","coil.request.Tags.Companion.from"]},{"name":"fun headers(headers: Headers): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.headers","location":"coil-base/coil.request/-image-request/-builder/headers.html","searchKeys":["headers","fun headers(headers: Headers): ImageRequest.Builder","coil.request.ImageRequest.Builder.headers"]},{"name":"fun interceptorDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","description":"coil.ImageLoader.Builder.interceptorDispatcher","location":"coil-base/coil/-image-loader/-builder/interceptor-dispatcher.html","searchKeys":["interceptorDispatcher","fun interceptorDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","coil.ImageLoader.Builder.interceptorDispatcher"]},{"name":"fun interceptorDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.interceptorDispatcher","location":"coil-base/coil.request/-image-request/-builder/interceptor-dispatcher.html","searchKeys":["interceptorDispatcher","fun interceptorDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","coil.request.ImageRequest.Builder.interceptorDispatcher"]},{"name":"fun interface Decoder","description":"coil.decode.Decoder","location":"coil-base/coil.decode/-decoder/index.html","searchKeys":["Decoder","fun interface Decoder","coil.decode.Decoder"]},{"name":"fun interface Factory","description":"coil.EventListener.Factory","location":"coil-base/coil/-event-listener/-factory/index.html","searchKeys":["Factory","fun interface Factory","coil.EventListener.Factory"]},{"name":"fun interface Factory","description":"coil.decode.Decoder.Factory","location":"coil-base/coil.decode/-decoder/-factory/index.html","searchKeys":["Factory","fun interface Factory","coil.decode.Decoder.Factory"]},{"name":"fun interface Factory","description":"coil.transition.Transition.Factory","location":"coil-base/coil.transition/-transition/-factory/index.html","searchKeys":["Factory","fun interface Factory","coil.transition.Transition.Factory"]},{"name":"fun interface Factory<T : Any>","description":"coil.fetch.Fetcher.Factory","location":"coil-base/coil.fetch/-fetcher/-factory/index.html","searchKeys":["Factory","fun interface Factory<T : Any>","coil.fetch.Fetcher.Factory"]},{"name":"fun interface Fetcher","description":"coil.fetch.Fetcher","location":"coil-base/coil.fetch/-fetcher/index.html","searchKeys":["Fetcher","fun interface Fetcher","coil.fetch.Fetcher"]},{"name":"fun interface Interceptor","description":"coil.intercept.Interceptor","location":"coil-base/coil.intercept/-interceptor/index.html","searchKeys":["Interceptor","fun interface Interceptor","coil.intercept.Interceptor"]},{"name":"fun interface Keyer<T : Any>","description":"coil.key.Keyer","location":"coil-base/coil.key/-keyer/index.html","searchKeys":["Keyer","fun interface Keyer<T : Any>","coil.key.Keyer"]},{"name":"fun interface Mapper<T : Any, V : Any>","description":"coil.map.Mapper","location":"coil-base/coil.map/-mapper/index.html","searchKeys":["Mapper","fun interface Mapper<T : Any, V : Any>","coil.map.Mapper"]},{"name":"fun interface SizeResolver","description":"coil.size.SizeResolver","location":"coil-base/coil.size/-size-resolver/index.html","searchKeys":["SizeResolver","fun interface SizeResolver","coil.size.SizeResolver"]},{"name":"fun interface Transition","description":"coil.transition.Transition","location":"coil-base/coil.transition/-transition/index.html","searchKeys":["Transition","fun interface Transition","coil.transition.Transition"]},{"name":"fun isEmpty(): Boolean","description":"coil.request.Parameters.isEmpty","location":"coil-base/coil.request/-parameters/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","coil.request.Parameters.isEmpty"]},{"name":"fun key(data: Any, options: Options): String?","description":"coil.ComponentRegistry.key","location":"coil-base/coil/-component-registry/key.html","searchKeys":["key","fun key(data: Any, options: Options): String?","coil.ComponentRegistry.key"]},{"name":"fun lifecycle(lifecycle: Lifecycle?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.lifecycle","location":"coil-base/coil.request/-image-request/-builder/lifecycle.html","searchKeys":["lifecycle","fun lifecycle(lifecycle: Lifecycle?): ImageRequest.Builder","coil.request.ImageRequest.Builder.lifecycle"]},{"name":"fun lifecycle(owner: LifecycleOwner?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.lifecycle","location":"coil-base/coil.request/-image-request/-builder/lifecycle.html","searchKeys":["lifecycle","fun lifecycle(owner: LifecycleOwner?): ImageRequest.Builder","coil.request.ImageRequest.Builder.lifecycle"]},{"name":"fun listener(listener: ImageRequest.Listener?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.listener","location":"coil-base/coil.request/-image-request/-builder/listener.html","searchKeys":["listener","fun listener(listener: ImageRequest.Listener?): ImageRequest.Builder","coil.request.ImageRequest.Builder.listener"]},{"name":"fun logger(logger: Logger?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.logger","location":"coil-base/coil/-image-loader/-builder/logger.html","searchKeys":["logger","fun logger(logger: Logger?): ImageLoader.Builder","coil.ImageLoader.Builder.logger"]},{"name":"fun map(data: Any, options: Options): Any","description":"coil.ComponentRegistry.map","location":"coil-base/coil/-component-registry/map.html","searchKeys":["map","fun map(data: Any, options: Options): Any","coil.ComponentRegistry.map"]},{"name":"fun maxSizeBytes(size: Int): MemoryCache.Builder","description":"coil.memory.MemoryCache.Builder.maxSizeBytes","location":"coil-base/coil.memory/-memory-cache/-builder/max-size-bytes.html","searchKeys":["maxSizeBytes","fun maxSizeBytes(size: Int): MemoryCache.Builder","coil.memory.MemoryCache.Builder.maxSizeBytes"]},{"name":"fun maxSizeBytes(size: Long): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.maxSizeBytes","location":"coil-base/coil.disk/-disk-cache/-builder/max-size-bytes.html","searchKeys":["maxSizeBytes","fun maxSizeBytes(size: Long): DiskCache.Builder","coil.disk.DiskCache.Builder.maxSizeBytes"]},{"name":"fun maxSizePercent(percent: Double): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.maxSizePercent","location":"coil-base/coil.disk/-disk-cache/-builder/max-size-percent.html","searchKeys":["maxSizePercent","fun maxSizePercent(percent: Double): DiskCache.Builder","coil.disk.DiskCache.Builder.maxSizePercent"]},{"name":"fun maxSizePercent(percent: Double): MemoryCache.Builder","description":"coil.memory.MemoryCache.Builder.maxSizePercent","location":"coil-base/coil.memory/-memory-cache/-builder/max-size-percent.html","searchKeys":["maxSizePercent","fun maxSizePercent(percent: Double): MemoryCache.Builder","coil.memory.MemoryCache.Builder.maxSizePercent"]},{"name":"fun maximumMaxSizeBytes(size: Long): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.maximumMaxSizeBytes","location":"coil-base/coil.disk/-disk-cache/-builder/maximum-max-size-bytes.html","searchKeys":["maximumMaxSizeBytes","fun maximumMaxSizeBytes(size: Long): DiskCache.Builder","coil.disk.DiskCache.Builder.maximumMaxSizeBytes"]},{"name":"fun memoryCache(initializer: () -> MemoryCache?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.memoryCache","location":"coil-base/coil/-image-loader/-builder/memory-cache.html","searchKeys":["memoryCache","fun memoryCache(initializer: () -> MemoryCache?): ImageLoader.Builder","coil.ImageLoader.Builder.memoryCache"]},{"name":"fun memoryCache(memoryCache: MemoryCache?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.memoryCache","location":"coil-base/coil/-image-loader/-builder/memory-cache.html","searchKeys":["memoryCache","fun memoryCache(memoryCache: MemoryCache?): ImageLoader.Builder","coil.ImageLoader.Builder.memoryCache"]},{"name":"fun memoryCacheKey(key: MemoryCache.Key?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.memoryCacheKey","location":"coil-base/coil.request/-image-request/-builder/memory-cache-key.html","searchKeys":["memoryCacheKey","fun memoryCacheKey(key: MemoryCache.Key?): ImageRequest.Builder","coil.request.ImageRequest.Builder.memoryCacheKey"]},{"name":"fun memoryCacheKey(key: String): String?","description":"coil.request.Parameters.memoryCacheKey","location":"coil-base/coil.request/-parameters/memory-cache-key.html","searchKeys":["memoryCacheKey","fun memoryCacheKey(key: String): String?","coil.request.Parameters.memoryCacheKey"]},{"name":"fun memoryCacheKey(key: String?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.memoryCacheKey","location":"coil-base/coil.request/-image-request/-builder/memory-cache-key.html","searchKeys":["memoryCacheKey","fun memoryCacheKey(key: String?): ImageRequest.Builder","coil.request.ImageRequest.Builder.memoryCacheKey"]},{"name":"fun memoryCacheKeys(): Map<String, String>","description":"coil.request.Parameters.memoryCacheKeys","location":"coil-base/coil.request/-parameters/memory-cache-keys.html","searchKeys":["memoryCacheKeys","fun memoryCacheKeys(): Map<String, String>","coil.request.Parameters.memoryCacheKeys"]},{"name":"fun memoryCachePolicy(policy: CachePolicy): ImageLoader.Builder","description":"coil.ImageLoader.Builder.memoryCachePolicy","location":"coil-base/coil/-image-loader/-builder/memory-cache-policy.html","searchKeys":["memoryCachePolicy","fun memoryCachePolicy(policy: CachePolicy): ImageLoader.Builder","coil.ImageLoader.Builder.memoryCachePolicy"]},{"name":"fun memoryCachePolicy(policy: CachePolicy): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.memoryCachePolicy","location":"coil-base/coil.request/-image-request/-builder/memory-cache-policy.html","searchKeys":["memoryCachePolicy","fun memoryCachePolicy(policy: CachePolicy): ImageRequest.Builder","coil.request.ImageRequest.Builder.memoryCachePolicy"]},{"name":"fun minimumMaxSizeBytes(size: Long): DiskCache.Builder","description":"coil.disk.DiskCache.Builder.minimumMaxSizeBytes","location":"coil-base/coil.disk/-disk-cache/-builder/minimum-max-size-bytes.html","searchKeys":["minimumMaxSizeBytes","fun minimumMaxSizeBytes(size: Long): DiskCache.Builder","coil.disk.DiskCache.Builder.minimumMaxSizeBytes"]},{"name":"fun networkCachePolicy(policy: CachePolicy): ImageLoader.Builder","description":"coil.ImageLoader.Builder.networkCachePolicy","location":"coil-base/coil/-image-loader/-builder/network-cache-policy.html","searchKeys":["networkCachePolicy","fun networkCachePolicy(policy: CachePolicy): ImageLoader.Builder","coil.ImageLoader.Builder.networkCachePolicy"]},{"name":"fun networkCachePolicy(policy: CachePolicy): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.networkCachePolicy","location":"coil-base/coil.request/-image-request/-builder/network-cache-policy.html","searchKeys":["networkCachePolicy","fun networkCachePolicy(policy: CachePolicy): ImageRequest.Builder","coil.request.ImageRequest.Builder.networkCachePolicy"]},{"name":"fun networkObserverEnabled(enable: Boolean): ImageLoader.Builder","description":"coil.ImageLoader.Builder.networkObserverEnabled","location":"coil-base/coil/-image-loader/-builder/network-observer-enabled.html","searchKeys":["networkObserverEnabled","fun networkObserverEnabled(enable: Boolean): ImageLoader.Builder","coil.ImageLoader.Builder.networkObserverEnabled"]},{"name":"fun newBuilder(): ComponentRegistry.Builder","description":"coil.ComponentRegistry.newBuilder","location":"coil-base/coil/-component-registry/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): ComponentRegistry.Builder","coil.ComponentRegistry.newBuilder"]},{"name":"fun newBuilder(): Parameters.Builder","description":"coil.request.Parameters.newBuilder","location":"coil-base/coil.request/-parameters/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): Parameters.Builder","coil.request.Parameters.newBuilder"]},{"name":"fun newBuilder(context: Context = this.context): ImageRequest.Builder","description":"coil.request.ImageRequest.newBuilder","location":"coil-base/coil.request/-image-request/new-builder.html","searchKeys":["newBuilder","fun newBuilder(context: Context = this.context): ImageRequest.Builder","coil.request.ImageRequest.newBuilder"]},{"name":"fun newDecoder(result: SourceResult, options: Options, imageLoader: ImageLoader, startIndex: Int = 0): Pair<Decoder, Int>?","description":"coil.ComponentRegistry.newDecoder","location":"coil-base/coil/-component-registry/new-decoder.html","searchKeys":["newDecoder","fun newDecoder(result: SourceResult, options: Options, imageLoader: ImageLoader, startIndex: Int = 0): Pair<Decoder, Int>?","coil.ComponentRegistry.newDecoder"]},{"name":"fun newFetcher(data: Any, options: Options, imageLoader: ImageLoader, startIndex: Int = 0): Pair<Fetcher, Int>?","description":"coil.ComponentRegistry.newFetcher","location":"coil-base/coil/-component-registry/new-fetcher.html","searchKeys":["newFetcher","fun newFetcher(data: Any, options: Options, imageLoader: ImageLoader, startIndex: Int = 0): Pair<Fetcher, Int>?","coil.ComponentRegistry.newFetcher"]},{"name":"fun okHttpClient(initializer: () -> OkHttpClient): ImageLoader.Builder","description":"coil.ImageLoader.Builder.okHttpClient","location":"coil-base/coil/-image-loader/-builder/ok-http-client.html","searchKeys":["okHttpClient","fun okHttpClient(initializer: () -> OkHttpClient): ImageLoader.Builder","coil.ImageLoader.Builder.okHttpClient"]},{"name":"fun okHttpClient(okHttpClient: OkHttpClient): ImageLoader.Builder","description":"coil.ImageLoader.Builder.okHttpClient","location":"coil-base/coil/-image-loader/-builder/ok-http-client.html","searchKeys":["okHttpClient","fun okHttpClient(okHttpClient: OkHttpClient): ImageLoader.Builder","coil.ImageLoader.Builder.okHttpClient"]},{"name":"fun parameters(parameters: Parameters): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.parameters","location":"coil-base/coil.request/-image-request/-builder/parameters.html","searchKeys":["parameters","fun parameters(parameters: Parameters): ImageRequest.Builder","coil.request.ImageRequest.Builder.parameters"]},{"name":"fun placeholder(drawable: Drawable?): ImageLoader.Builder","description":"coil.ImageLoader.Builder.placeholder","location":"coil-base/coil/-image-loader/-builder/placeholder.html","searchKeys":["placeholder","fun placeholder(drawable: Drawable?): ImageLoader.Builder","coil.ImageLoader.Builder.placeholder"]},{"name":"fun placeholder(drawable: Drawable?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.placeholder","location":"coil-base/coil.request/-image-request/-builder/placeholder.html","searchKeys":["placeholder","fun placeholder(drawable: Drawable?): ImageRequest.Builder","coil.request.ImageRequest.Builder.placeholder"]},{"name":"fun placeholder(drawableResId: Int): ImageLoader.Builder","description":"coil.ImageLoader.Builder.placeholder","location":"coil-base/coil/-image-loader/-builder/placeholder.html","searchKeys":["placeholder","fun placeholder(drawableResId: Int): ImageLoader.Builder","coil.ImageLoader.Builder.placeholder"]},{"name":"fun placeholder(drawableResId: Int): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.placeholder","location":"coil-base/coil.request/-image-request/-builder/placeholder.html","searchKeys":["placeholder","fun placeholder(drawableResId: Int): ImageRequest.Builder","coil.request.ImageRequest.Builder.placeholder"]},{"name":"fun placeholderMemoryCacheKey(key: MemoryCache.Key?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.placeholderMemoryCacheKey","location":"coil-base/coil.request/-image-request/-builder/placeholder-memory-cache-key.html","searchKeys":["placeholderMemoryCacheKey","fun placeholderMemoryCacheKey(key: MemoryCache.Key?): ImageRequest.Builder","coil.request.ImageRequest.Builder.placeholderMemoryCacheKey"]},{"name":"fun placeholderMemoryCacheKey(key: String?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.placeholderMemoryCacheKey","location":"coil-base/coil.request/-image-request/-builder/placeholder-memory-cache-key.html","searchKeys":["placeholderMemoryCacheKey","fun placeholderMemoryCacheKey(key: String?): ImageRequest.Builder","coil.request.ImageRequest.Builder.placeholderMemoryCacheKey"]},{"name":"fun precision(precision: Precision): ImageLoader.Builder","description":"coil.ImageLoader.Builder.precision","location":"coil-base/coil/-image-loader/-builder/precision.html","searchKeys":["precision","fun precision(precision: Precision): ImageLoader.Builder","coil.ImageLoader.Builder.precision"]},{"name":"fun precision(precision: Precision): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.precision","location":"coil-base/coil.request/-image-request/-builder/precision.html","searchKeys":["precision","fun precision(precision: Precision): ImageRequest.Builder","coil.request.ImageRequest.Builder.precision"]},{"name":"fun premultipliedAlpha(enable: Boolean): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.premultipliedAlpha","location":"coil-base/coil.request/-image-request/-builder/premultiplied-alpha.html","searchKeys":["premultipliedAlpha","fun premultipliedAlpha(enable: Boolean): ImageRequest.Builder","coil.request.ImageRequest.Builder.premultipliedAlpha"]},{"name":"fun remove(key: String): Parameters.Builder","description":"coil.request.Parameters.Builder.remove","location":"coil-base/coil.request/-parameters/-builder/remove.html","searchKeys":["remove","fun remove(key: String): Parameters.Builder","coil.request.Parameters.Builder.remove"]},{"name":"fun removeHeader(name: String): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.removeHeader","location":"coil-base/coil.request/-image-request/-builder/remove-header.html","searchKeys":["removeHeader","fun removeHeader(name: String): ImageRequest.Builder","coil.request.ImageRequest.Builder.removeHeader"]},{"name":"fun removeParameter(key: String): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.removeParameter","location":"coil-base/coil.request/-image-request/-builder/remove-parameter.html","searchKeys":["removeParameter","fun removeParameter(key: String): ImageRequest.Builder","coil.request.ImageRequest.Builder.removeParameter"]},{"name":"fun respectCacheHeaders(enable: Boolean): ImageLoader.Builder","description":"coil.ImageLoader.Builder.respectCacheHeaders","location":"coil-base/coil/-image-loader/-builder/respect-cache-headers.html","searchKeys":["respectCacheHeaders","fun respectCacheHeaders(enable: Boolean): ImageLoader.Builder","coil.ImageLoader.Builder.respectCacheHeaders"]},{"name":"fun result(view: View): ImageResult?","description":"coil.util.CoilUtils.result","location":"coil-base/coil.util/-coil-utils/result.html","searchKeys":["result","fun result(view: View): ImageResult?","coil.util.CoilUtils.result"]},{"name":"fun scale(scale: Scale): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.scale","location":"coil-base/coil.request/-image-request/-builder/scale.html","searchKeys":["scale","fun scale(scale: Scale): ImageRequest.Builder","coil.request.ImageRequest.Builder.scale"]},{"name":"fun set(key: String, value: Any?, memoryCacheKey: String? = value?.toString()): Parameters.Builder","description":"coil.request.Parameters.Builder.set","location":"coil-base/coil.request/-parameters/-builder/set.html","searchKeys":["set","fun set(key: String, value: Any?, memoryCacheKey: String? = value?.toString()): Parameters.Builder","coil.request.Parameters.Builder.set"]},{"name":"fun setHeader(name: String, value: String): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.setHeader","location":"coil-base/coil.request/-image-request/-builder/set-header.html","searchKeys":["setHeader","fun setHeader(name: String, value: String): ImageRequest.Builder","coil.request.ImageRequest.Builder.setHeader"]},{"name":"fun setParameter(key: String, value: Any?, memoryCacheKey: String? = value?.toString()): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.setParameter","location":"coil-base/coil.request/-image-request/-builder/set-parameter.html","searchKeys":["setParameter","fun setParameter(key: String, value: Any?, memoryCacheKey: String? = value?.toString()): ImageRequest.Builder","coil.request.ImageRequest.Builder.setParameter"]},{"name":"fun size(resolver: SizeResolver): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.size","location":"coil-base/coil.request/-image-request/-builder/size.html","searchKeys":["size","fun size(resolver: SizeResolver): ImageRequest.Builder","coil.request.ImageRequest.Builder.size"]},{"name":"fun size(size: Int): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.size","location":"coil-base/coil.request/-image-request/-builder/size.html","searchKeys":["size","fun size(size: Int): ImageRequest.Builder","coil.request.ImageRequest.Builder.size"]},{"name":"fun size(size: Size): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.size","location":"coil-base/coil.request/-image-request/-builder/size.html","searchKeys":["size","fun size(size: Size): ImageRequest.Builder","coil.request.ImageRequest.Builder.size"]},{"name":"fun size(width: Dimension, height: Dimension): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.size","location":"coil-base/coil.request/-image-request/-builder/size.html","searchKeys":["size","fun size(width: Dimension, height: Dimension): ImageRequest.Builder","coil.request.ImageRequest.Builder.size"]},{"name":"fun size(width: Int, height: Int): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.size","location":"coil-base/coil.request/-image-request/-builder/size.html","searchKeys":["size","fun size(width: Int, height: Int): ImageRequest.Builder","coil.request.ImageRequest.Builder.size"]},{"name":"fun strongReferencesEnabled(enable: Boolean): MemoryCache.Builder","description":"coil.memory.MemoryCache.Builder.strongReferencesEnabled","location":"coil-base/coil.memory/-memory-cache/-builder/strong-references-enabled.html","searchKeys":["strongReferencesEnabled","fun strongReferencesEnabled(enable: Boolean): MemoryCache.Builder","coil.memory.MemoryCache.Builder.strongReferencesEnabled"]},{"name":"fun tags(tags: Tags): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.tags","location":"coil-base/coil.request/-image-request/-builder/tags.html","searchKeys":["tags","fun tags(tags: Tags): ImageRequest.Builder","coil.request.ImageRequest.Builder.tags"]},{"name":"fun target(imageView: ImageView): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.target","location":"coil-base/coil.request/-image-request/-builder/target.html","searchKeys":["target","fun target(imageView: ImageView): ImageRequest.Builder","coil.request.ImageRequest.Builder.target"]},{"name":"fun target(target: Target?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.target","location":"coil-base/coil.request/-image-request/-builder/target.html","searchKeys":["target","fun target(target: Target?): ImageRequest.Builder","coil.request.ImageRequest.Builder.target"]},{"name":"fun transformationDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","description":"coil.ImageLoader.Builder.transformationDispatcher","location":"coil-base/coil/-image-loader/-builder/transformation-dispatcher.html","searchKeys":["transformationDispatcher","fun transformationDispatcher(dispatcher: CoroutineDispatcher): ImageLoader.Builder","coil.ImageLoader.Builder.transformationDispatcher"]},{"name":"fun transformationDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.transformationDispatcher","location":"coil-base/coil.request/-image-request/-builder/transformation-dispatcher.html","searchKeys":["transformationDispatcher","fun transformationDispatcher(dispatcher: CoroutineDispatcher): ImageRequest.Builder","coil.request.ImageRequest.Builder.transformationDispatcher"]},{"name":"fun transformations(transformations: List<Transformation>): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.transformations","location":"coil-base/coil.request/-image-request/-builder/transformations.html","searchKeys":["transformations","fun transformations(transformations: List<Transformation>): ImageRequest.Builder","coil.request.ImageRequest.Builder.transformations"]},{"name":"fun transformations(vararg transformations: Transformation): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.transformations","location":"coil-base/coil.request/-image-request/-builder/transformations.html","searchKeys":["transformations","fun transformations(vararg transformations: Transformation): ImageRequest.Builder","coil.request.ImageRequest.Builder.transformations"]},{"name":"fun transitionFactory(factory: Transition.Factory): ImageLoader.Builder","description":"coil.ImageLoader.Builder.transitionFactory","location":"coil-base/coil/-image-loader/-builder/transition-factory.html","searchKeys":["transitionFactory","fun transitionFactory(factory: Transition.Factory): ImageLoader.Builder","coil.ImageLoader.Builder.transitionFactory"]},{"name":"fun transitionFactory(transition: Transition.Factory): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.transitionFactory","location":"coil-base/coil.request/-image-request/-builder/transition-factory.html","searchKeys":["transitionFactory","fun transitionFactory(transition: Transition.Factory): ImageRequest.Builder","coil.request.ImageRequest.Builder.transitionFactory"]},{"name":"fun valueOf(value: String): CachePolicy","description":"coil.request.CachePolicy.valueOf","location":"coil-base/coil.request/-cache-policy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CachePolicy","coil.request.CachePolicy.valueOf"]},{"name":"fun valueOf(value: String): DataSource","description":"coil.decode.DataSource.valueOf","location":"coil-base/coil.decode/-data-source/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DataSource","coil.decode.DataSource.valueOf"]},{"name":"fun valueOf(value: String): ExifOrientationPolicy","description":"coil.decode.ExifOrientationPolicy.valueOf","location":"coil-base/coil.decode/-exif-orientation-policy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ExifOrientationPolicy","coil.decode.ExifOrientationPolicy.valueOf"]},{"name":"fun valueOf(value: String): Precision","description":"coil.size.Precision.valueOf","location":"coil-base/coil.size/-precision/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Precision","coil.size.Precision.valueOf"]},{"name":"fun valueOf(value: String): Scale","description":"coil.size.Scale.valueOf","location":"coil-base/coil.size/-scale/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Scale","coil.size.Scale.valueOf"]},{"name":"fun values(): Array<CachePolicy>","description":"coil.request.CachePolicy.values","location":"coil-base/coil.request/-cache-policy/values.html","searchKeys":["values","fun values(): Array<CachePolicy>","coil.request.CachePolicy.values"]},{"name":"fun values(): Array<DataSource>","description":"coil.decode.DataSource.values","location":"coil-base/coil.decode/-data-source/values.html","searchKeys":["values","fun values(): Array<DataSource>","coil.decode.DataSource.values"]},{"name":"fun values(): Array<ExifOrientationPolicy>","description":"coil.decode.ExifOrientationPolicy.values","location":"coil-base/coil.decode/-exif-orientation-policy/values.html","searchKeys":["values","fun values(): Array<ExifOrientationPolicy>","coil.decode.ExifOrientationPolicy.values"]},{"name":"fun values(): Array<Precision>","description":"coil.size.Precision.values","location":"coil-base/coil.size/-precision/values.html","searchKeys":["values","fun values(): Array<Precision>","coil.size.Precision.values"]},{"name":"fun values(): Array<Scale>","description":"coil.size.Scale.values","location":"coil-base/coil.size/-scale/values.html","searchKeys":["values","fun values(): Array<Scale>","coil.size.Scale.values"]},{"name":"fun values(): Map<String, Any?>","description":"coil.request.Parameters.values","location":"coil-base/coil.request/-parameters/values.html","searchKeys":["values","fun values(): Map<String, Any?>","coil.request.Parameters.values"]},{"name":"fun weakReferencesEnabled(enable: Boolean): MemoryCache.Builder","description":"coil.memory.MemoryCache.Builder.weakReferencesEnabled","location":"coil-base/coil.memory/-memory-cache/-builder/weak-references-enabled.html","searchKeys":["weakReferencesEnabled","fun weakReferencesEnabled(enable: Boolean): MemoryCache.Builder","coil.memory.MemoryCache.Builder.weakReferencesEnabled"]},{"name":"inline fun <T : Any> add(factory: Fetcher.Factory<T>): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","inline fun <T : Any> add(factory: Fetcher.Factory<T>): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"inline fun <T : Any> add(keyer: Keyer<T>): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","inline fun <T : Any> add(keyer: Keyer<T>): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"inline fun <T : Any> add(mapper: Mapper<T, *>): ComponentRegistry.Builder","description":"coil.ComponentRegistry.Builder.add","location":"coil-base/coil/-component-registry/-builder/add.html","searchKeys":["add","inline fun <T : Any> add(mapper: Mapper<T, *>): ComponentRegistry.Builder","coil.ComponentRegistry.Builder.add"]},{"name":"inline fun <T : Any> fetcherFactory(factory: Fetcher.Factory<T>): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.fetcherFactory","location":"coil-base/coil.request/-image-request/-builder/fetcher-factory.html","searchKeys":["fetcherFactory","inline fun <T : Any> fetcherFactory(factory: Fetcher.Factory<T>): ImageRequest.Builder","coil.request.ImageRequest.Builder.fetcherFactory"]},{"name":"inline fun <T : Any> tag(): T?","description":"coil.request.Tags.tag","location":"coil-base/coil.request/-tags/tag.html","searchKeys":["tag","inline fun <T : Any> tag(): T?","coil.request.Tags.tag"]},{"name":"inline fun <T : Any> tag(tag: T?): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.tag","location":"coil-base/coil.request/-image-request/-builder/tag.html","searchKeys":["tag","inline fun <T : Any> tag(tag: T?): ImageRequest.Builder","coil.request.ImageRequest.Builder.tag"]},{"name":"inline fun Dimension.pxOrElse(block: () -> Int): Int","description":"coil.size.pxOrElse","location":"coil-base/coil.size/px-or-else.html","searchKeys":["pxOrElse","inline fun Dimension.pxOrElse(block: () -> Int): Int","coil.size.pxOrElse"]},{"name":"inline fun components(builder: ComponentRegistry.Builder.() -> Unit): ImageLoader.Builder","description":"coil.ImageLoader.Builder.components","location":"coil-base/coil/-image-loader/-builder/components.html","searchKeys":["components","inline fun components(builder: ComponentRegistry.Builder.() -> Unit): ImageLoader.Builder","coil.ImageLoader.Builder.components"]},{"name":"inline fun listener(crossinline onStart: (request: ImageRequest) -> Unit = {}, crossinline onCancel: (request: ImageRequest) -> Unit = {}, crossinline onError: (request: ImageRequest, result: ErrorResult) -> Unit = { _, _ -> }, crossinline onSuccess: (request: ImageRequest, result: SuccessResult) -> Unit = { _, _ -> }): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.listener","location":"coil-base/coil.request/-image-request/-builder/listener.html","searchKeys":["listener","inline fun listener(crossinline onStart: (request: ImageRequest) -> Unit = {}, crossinline onCancel: (request: ImageRequest) -> Unit = {}, crossinline onError: (request: ImageRequest, result: ErrorResult) -> Unit = { _, _ -> }, crossinline onSuccess: (request: ImageRequest, result: SuccessResult) -> Unit = { _, _ -> }): ImageRequest.Builder","coil.request.ImageRequest.Builder.listener"]},{"name":"inline fun target(crossinline onStart: (placeholder: Drawable?) -> Unit = {}, crossinline onError: (error: Drawable?) -> Unit = {}, crossinline onSuccess: (result: Drawable) -> Unit = {}): ImageRequest.Builder","description":"coil.request.ImageRequest.Builder.target","location":"coil-base/coil.request/-image-request/-builder/target.html","searchKeys":["target","inline fun target(crossinline onStart: (placeholder: Drawable?) -> Unit = {}, crossinline onError: (error: Drawable?) -> Unit = {}, crossinline onSuccess: (result: Drawable) -> Unit = {}): ImageRequest.Builder","coil.request.ImageRequest.Builder.target"]},{"name":"interface Chain","description":"coil.intercept.Interceptor.Chain","location":"coil-base/coil.intercept/-interceptor/-chain/index.html","searchKeys":["Chain","interface Chain","coil.intercept.Interceptor.Chain"]},{"name":"interface DiskCache","description":"coil.disk.DiskCache","location":"coil-base/coil.disk/-disk-cache/index.html","searchKeys":["DiskCache","interface DiskCache","coil.disk.DiskCache"]},{"name":"interface Disposable","description":"coil.request.Disposable","location":"coil-base/coil.request/-disposable/index.html","searchKeys":["Disposable","interface Disposable","coil.request.Disposable"]},{"name":"interface Editor","description":"coil.disk.DiskCache.Editor","location":"coil-base/coil.disk/-disk-cache/-editor/index.html","searchKeys":["Editor","interface Editor","coil.disk.DiskCache.Editor"]},{"name":"interface EventListener : ImageRequest.Listener","description":"coil.EventListener","location":"coil-base/coil/-event-listener/index.html","searchKeys":["EventListener","interface EventListener : ImageRequest.Listener","coil.EventListener"]},{"name":"interface ImageLoader","description":"coil.ImageLoader","location":"coil-base/coil/-image-loader/index.html","searchKeys":["ImageLoader","interface ImageLoader","coil.ImageLoader"]},{"name":"interface Listener","description":"coil.request.ImageRequest.Listener","location":"coil-base/coil.request/-image-request/-listener/index.html","searchKeys":["Listener","interface Listener","coil.request.ImageRequest.Listener"]},{"name":"interface Logger","description":"coil.util.Logger","location":"coil-base/coil.util/-logger/index.html","searchKeys":["Logger","interface Logger","coil.util.Logger"]},{"name":"interface MemoryCache","description":"coil.memory.MemoryCache","location":"coil-base/coil.memory/-memory-cache/index.html","searchKeys":["MemoryCache","interface MemoryCache","coil.memory.MemoryCache"]},{"name":"interface Snapshot : Closeable","description":"coil.disk.DiskCache.Snapshot","location":"coil-base/coil.disk/-disk-cache/-snapshot/index.html","searchKeys":["Snapshot","interface Snapshot : Closeable","coil.disk.DiskCache.Snapshot"]},{"name":"interface Target","description":"coil.target.Target","location":"coil-base/coil.target/-target/index.html","searchKeys":["Target","interface Target","coil.target.Target"]},{"name":"interface Transformation","description":"coil.transform.Transformation","location":"coil-base/coil.transform/-transformation/index.html","searchKeys":["Transformation","interface Transformation","coil.transform.Transformation"]},{"name":"interface TransitionTarget : Target","description":"coil.transition.TransitionTarget","location":"coil-base/coil.transition/-transition-target/index.html","searchKeys":["TransitionTarget","interface TransitionTarget : Target","coil.transition.TransitionTarget"]},{"name":"interface ViewSizeResolver<T : View> : SizeResolver","description":"coil.size.ViewSizeResolver","location":"coil-base/coil.size/-view-size-resolver/index.html","searchKeys":["ViewSizeResolver","interface ViewSizeResolver<T : View> : SizeResolver","coil.size.ViewSizeResolver"]},{"name":"interface ViewTarget<T : View> : Target","description":"coil.target.ViewTarget","location":"coil-base/coil.target/-view-target/index.html","searchKeys":["ViewTarget","interface ViewTarget<T : View> : Target","coil.target.ViewTarget"]},{"name":"object CoilUtils","description":"coil.util.CoilUtils","location":"coil-base/coil.util/-coil-utils/index.html","searchKeys":["CoilUtils","object CoilUtils","coil.util.CoilUtils"]},{"name":"object Companion","description":"coil.EventListener.Companion","location":"coil-base/coil/-event-listener/-companion/index.html","searchKeys":["Companion","object Companion","coil.EventListener.Companion"]},{"name":"object Companion","description":"coil.EventListener.Factory.Companion","location":"coil-base/coil/-event-listener/-factory/-companion/index.html","searchKeys":["Companion","object Companion","coil.EventListener.Factory.Companion"]},{"name":"object Companion","description":"coil.drawable.CrossfadeDrawable.Companion","location":"coil-base/coil.drawable/-crossfade-drawable/-companion/index.html","searchKeys":["Companion","object Companion","coil.drawable.CrossfadeDrawable.Companion"]},{"name":"object Companion","description":"coil.request.Parameters.Companion","location":"coil-base/coil.request/-parameters/-companion/index.html","searchKeys":["Companion","object Companion","coil.request.Parameters.Companion"]},{"name":"object Companion","description":"coil.request.Tags.Companion","location":"coil-base/coil.request/-tags/-companion/index.html","searchKeys":["Companion","object Companion","coil.request.Tags.Companion"]},{"name":"object Companion","description":"coil.size.Size.Companion","location":"coil-base/coil.size/-size/-companion/index.html","searchKeys":["Companion","object Companion","coil.size.Size.Companion"]},{"name":"object Companion","description":"coil.transition.Transition.Factory.Companion","location":"coil-base/coil.transition/-transition/-factory/-companion/index.html","searchKeys":["Companion","object Companion","coil.transition.Transition.Factory.Companion"]},{"name":"object DecodeUtils","description":"coil.decode.DecodeUtils","location":"coil-base/coil.decode/-decode-utils/index.html","searchKeys":["DecodeUtils","object DecodeUtils","coil.decode.DecodeUtils"]},{"name":"object NullRequestData","description":"coil.request.NullRequestData","location":"coil-base/coil.request/-null-request-data/index.html","searchKeys":["NullRequestData","object NullRequestData","coil.request.NullRequestData"]},{"name":"object Undefined : Dimension","description":"coil.size.Dimension.Undefined","location":"coil-base/coil.size/-dimension/-undefined/index.html","searchKeys":["Undefined","object Undefined : Dimension","coil.size.Dimension.Undefined"]},{"name":"open class ImageViewTarget(val view: ImageView) : GenericViewTarget<ImageView> ","description":"coil.target.ImageViewTarget","location":"coil-base/coil.target/-image-view-target/index.html","searchKeys":["ImageViewTarget","open class ImageViewTarget(val view: ImageView) : GenericViewTarget<ImageView> ","coil.target.ImageViewTarget"]},{"name":"open fun decodeEnd(request: ImageRequest, decoder: Decoder, options: Options, result: DecodeResult?)","description":"coil.EventListener.decodeEnd","location":"coil-base/coil/-event-listener/decode-end.html","searchKeys":["decodeEnd","open fun decodeEnd(request: ImageRequest, decoder: Decoder, options: Options, result: DecodeResult?)","coil.EventListener.decodeEnd"]},{"name":"open fun decodeStart(request: ImageRequest, decoder: Decoder, options: Options)","description":"coil.EventListener.decodeStart","location":"coil-base/coil/-event-listener/decode-start.html","searchKeys":["decodeStart","open fun decodeStart(request: ImageRequest, decoder: Decoder, options: Options)","coil.EventListener.decodeStart"]},{"name":"open fun fetchEnd(request: ImageRequest, fetcher: Fetcher, options: Options, result: FetchResult?)","description":"coil.EventListener.fetchEnd","location":"coil-base/coil/-event-listener/fetch-end.html","searchKeys":["fetchEnd","open fun fetchEnd(request: ImageRequest, fetcher: Fetcher, options: Options, result: FetchResult?)","coil.EventListener.fetchEnd"]},{"name":"open fun fetchStart(request: ImageRequest, fetcher: Fetcher, options: Options)","description":"coil.EventListener.fetchStart","location":"coil-base/coil/-event-listener/fetch-start.html","searchKeys":["fetchStart","open fun fetchStart(request: ImageRequest, fetcher: Fetcher, options: Options)","coil.EventListener.fetchStart"]},{"name":"open fun keyEnd(request: ImageRequest, output: String?)","description":"coil.EventListener.keyEnd","location":"coil-base/coil/-event-listener/key-end.html","searchKeys":["keyEnd","open fun keyEnd(request: ImageRequest, output: String?)","coil.EventListener.keyEnd"]},{"name":"open fun keyStart(request: ImageRequest, input: Any)","description":"coil.EventListener.keyStart","location":"coil-base/coil/-event-listener/key-start.html","searchKeys":["keyStart","open fun keyStart(request: ImageRequest, input: Any)","coil.EventListener.keyStart"]},{"name":"open fun mapEnd(request: ImageRequest, output: Any)","description":"coil.EventListener.mapEnd","location":"coil-base/coil/-event-listener/map-end.html","searchKeys":["mapEnd","open fun mapEnd(request: ImageRequest, output: Any)","coil.EventListener.mapEnd"]},{"name":"open fun mapStart(request: ImageRequest, input: Any)","description":"coil.EventListener.mapStart","location":"coil-base/coil/-event-listener/map-start.html","searchKeys":["mapStart","open fun mapStart(request: ImageRequest, input: Any)","coil.EventListener.mapStart"]},{"name":"open fun onCancel(request: ImageRequest)","description":"coil.request.ImageRequest.Listener.onCancel","location":"coil-base/coil.request/-image-request/-listener/on-cancel.html","searchKeys":["onCancel","open fun onCancel(request: ImageRequest)","coil.request.ImageRequest.Listener.onCancel"]},{"name":"open fun onError(error: Drawable?)","description":"coil.target.Target.onError","location":"coil-base/coil.target/-target/on-error.html","searchKeys":["onError","open fun onError(error: Drawable?)","coil.target.Target.onError"]},{"name":"open fun onError(request: ImageRequest, result: ErrorResult)","description":"coil.request.ImageRequest.Listener.onError","location":"coil-base/coil.request/-image-request/-listener/on-error.html","searchKeys":["onError","open fun onError(request: ImageRequest, result: ErrorResult)","coil.request.ImageRequest.Listener.onError"]},{"name":"open fun onStart(placeholder: Drawable?)","description":"coil.target.Target.onStart","location":"coil-base/coil.target/-target/on-start.html","searchKeys":["onStart","open fun onStart(placeholder: Drawable?)","coil.target.Target.onStart"]},{"name":"open fun onStart(request: ImageRequest)","description":"coil.request.ImageRequest.Listener.onStart","location":"coil-base/coil.request/-image-request/-listener/on-start.html","searchKeys":["onStart","open fun onStart(request: ImageRequest)","coil.request.ImageRequest.Listener.onStart"]},{"name":"open fun onSuccess(request: ImageRequest, result: SuccessResult)","description":"coil.request.ImageRequest.Listener.onSuccess","location":"coil-base/coil.request/-image-request/-listener/on-success.html","searchKeys":["onSuccess","open fun onSuccess(request: ImageRequest, result: SuccessResult)","coil.request.ImageRequest.Listener.onSuccess"]},{"name":"open fun onSuccess(result: Drawable)","description":"coil.target.Target.onSuccess","location":"coil-base/coil.target/-target/on-success.html","searchKeys":["onSuccess","open fun onSuccess(result: Drawable)","coil.target.Target.onSuccess"]},{"name":"open fun resolveSizeEnd(request: ImageRequest, size: Size)","description":"coil.EventListener.resolveSizeEnd","location":"coil-base/coil/-event-listener/resolve-size-end.html","searchKeys":["resolveSizeEnd","open fun resolveSizeEnd(request: ImageRequest, size: Size)","coil.EventListener.resolveSizeEnd"]},{"name":"open fun resolveSizeStart(request: ImageRequest)","description":"coil.EventListener.resolveSizeStart","location":"coil-base/coil/-event-listener/resolve-size-start.html","searchKeys":["resolveSizeStart","open fun resolveSizeStart(request: ImageRequest)","coil.EventListener.resolveSizeStart"]},{"name":"open fun transformEnd(request: ImageRequest, output: Bitmap)","description":"coil.EventListener.transformEnd","location":"coil-base/coil/-event-listener/transform-end.html","searchKeys":["transformEnd","open fun transformEnd(request: ImageRequest, output: Bitmap)","coil.EventListener.transformEnd"]},{"name":"open fun transformStart(request: ImageRequest, input: Bitmap)","description":"coil.EventListener.transformStart","location":"coil-base/coil/-event-listener/transform-start.html","searchKeys":["transformStart","open fun transformStart(request: ImageRequest, input: Bitmap)","coil.EventListener.transformStart"]},{"name":"open fun transitionEnd(request: ImageRequest, transition: Transition)","description":"coil.EventListener.transitionEnd","location":"coil-base/coil/-event-listener/transition-end.html","searchKeys":["transitionEnd","open fun transitionEnd(request: ImageRequest, transition: Transition)","coil.EventListener.transitionEnd"]},{"name":"open fun transitionStart(request: ImageRequest, transition: Transition)","description":"coil.EventListener.transitionStart","location":"coil-base/coil/-event-listener/transition-start.html","searchKeys":["transitionStart","open fun transitionStart(request: ImageRequest, transition: Transition)","coil.EventListener.transitionStart"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.decode.BitmapFactoryDecoder.Factory.equals","location":"coil-base/coil.decode/-bitmap-factory-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.decode.BitmapFactoryDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.decode.DecodeResult.equals","location":"coil-base/coil.decode/-decode-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.decode.DecodeResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.fetch.DrawableResult.equals","location":"coil-base/coil.fetch/-drawable-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.fetch.DrawableResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.fetch.SourceResult.equals","location":"coil-base/coil.fetch/-source-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.fetch.SourceResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.memory.MemoryCache.Key.equals","location":"coil-base/coil.memory/-memory-cache/-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.memory.MemoryCache.Key.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.memory.MemoryCache.Value.equals","location":"coil-base/coil.memory/-memory-cache/-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.memory.MemoryCache.Value.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.DefaultRequestOptions.equals","location":"coil-base/coil.request/-default-request-options/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.DefaultRequestOptions.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.DefinedRequestOptions.equals","location":"coil-base/coil.request/-defined-request-options/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.DefinedRequestOptions.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.ErrorResult.equals","location":"coil-base/coil.request/-error-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.ErrorResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.ImageRequest.equals","location":"coil-base/coil.request/-image-request/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.ImageRequest.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.Options.equals","location":"coil-base/coil.request/-options/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.Options.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.Parameters.Entry.equals","location":"coil-base/coil.request/-parameters/-entry/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.Parameters.Entry.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.Parameters.equals","location":"coil-base/coil.request/-parameters/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.Parameters.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.SuccessResult.equals","location":"coil-base/coil.request/-success-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.SuccessResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.request.Tags.equals","location":"coil-base/coil.request/-tags/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.request.Tags.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.size.Dimension.Pixels.equals","location":"coil-base/coil.size/-dimension/-pixels/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.size.Dimension.Pixels.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.target.ImageViewTarget.equals","location":"coil-base/coil.target/-image-view-target/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.target.ImageViewTarget.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.transform.CircleCropTransformation.equals","location":"coil-base/coil.transform/-circle-crop-transformation/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.transform.CircleCropTransformation.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.transform.RoundedCornersTransformation.equals","location":"coil-base/coil.transform/-rounded-corners-transformation/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.transform.RoundedCornersTransformation.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.transition.CrossfadeTransition.Factory.equals","location":"coil-base/coil.transition/-crossfade-transition/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.transition.CrossfadeTransition.Factory.equals"]},{"name":"open operator override fun iterator(): Iterator<Pair<String, Parameters.Entry>>","description":"coil.request.Parameters.iterator","location":"coil-base/coil.request/-parameters/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Pair<String, Parameters.Entry>>","coil.request.Parameters.iterator"]},{"name":"open override fun clearAnimationCallbacks()","description":"coil.drawable.CrossfadeDrawable.clearAnimationCallbacks","location":"coil-base/coil.drawable/-crossfade-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks()","coil.drawable.CrossfadeDrawable.clearAnimationCallbacks"]},{"name":"open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder","description":"coil.decode.BitmapFactoryDecoder.Factory.create","location":"coil-base/coil.decode/-bitmap-factory-decoder/-factory/create.html","searchKeys":["create","open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder","coil.decode.BitmapFactoryDecoder.Factory.create"]},{"name":"open override fun create(target: TransitionTarget, result: ImageResult): Transition","description":"coil.transition.CrossfadeTransition.Factory.create","location":"coil-base/coil.transition/-crossfade-transition/-factory/create.html","searchKeys":["create","open override fun create(target: TransitionTarget, result: ImageResult): Transition","coil.transition.CrossfadeTransition.Factory.create"]},{"name":"open override fun describeContents(): Int","description":"coil.memory.MemoryCache.Key.describeContents","location":"coil-base/coil.memory/-memory-cache/-key/describe-contents.html","searchKeys":["describeContents","open override fun describeContents(): Int","coil.memory.MemoryCache.Key.describeContents"]},{"name":"open override fun draw(canvas: Canvas)","description":"coil.drawable.CrossfadeDrawable.draw","location":"coil-base/coil.drawable/-crossfade-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","coil.drawable.CrossfadeDrawable.draw"]},{"name":"open override fun getAlpha(): Int","description":"coil.drawable.CrossfadeDrawable.getAlpha","location":"coil-base/coil.drawable/-crossfade-drawable/get-alpha.html","searchKeys":["getAlpha","open override fun getAlpha(): Int","coil.drawable.CrossfadeDrawable.getAlpha"]},{"name":"open override fun getColorFilter(): ColorFilter?","description":"coil.drawable.CrossfadeDrawable.getColorFilter","location":"coil-base/coil.drawable/-crossfade-drawable/get-color-filter.html","searchKeys":["getColorFilter","open override fun getColorFilter(): ColorFilter?","coil.drawable.CrossfadeDrawable.getColorFilter"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"coil.drawable.CrossfadeDrawable.getIntrinsicHeight","location":"coil-base/coil.drawable/-crossfade-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","coil.drawable.CrossfadeDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"coil.drawable.CrossfadeDrawable.getIntrinsicWidth","location":"coil-base/coil.drawable/-crossfade-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","coil.drawable.CrossfadeDrawable.getIntrinsicWidth"]},{"name":"open override fun hashCode(): Int","description":"coil.decode.BitmapFactoryDecoder.Factory.hashCode","location":"coil-base/coil.decode/-bitmap-factory-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.decode.BitmapFactoryDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.decode.DecodeResult.hashCode","location":"coil-base/coil.decode/-decode-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.decode.DecodeResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.fetch.DrawableResult.hashCode","location":"coil-base/coil.fetch/-drawable-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.fetch.DrawableResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.fetch.SourceResult.hashCode","location":"coil-base/coil.fetch/-source-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.fetch.SourceResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.memory.MemoryCache.Key.hashCode","location":"coil-base/coil.memory/-memory-cache/-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.memory.MemoryCache.Key.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.memory.MemoryCache.Value.hashCode","location":"coil-base/coil.memory/-memory-cache/-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.memory.MemoryCache.Value.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.DefaultRequestOptions.hashCode","location":"coil-base/coil.request/-default-request-options/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.DefaultRequestOptions.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.DefinedRequestOptions.hashCode","location":"coil-base/coil.request/-defined-request-options/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.DefinedRequestOptions.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.ErrorResult.hashCode","location":"coil-base/coil.request/-error-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.ErrorResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.ImageRequest.hashCode","location":"coil-base/coil.request/-image-request/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.ImageRequest.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.Options.hashCode","location":"coil-base/coil.request/-options/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.Options.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.Parameters.Entry.hashCode","location":"coil-base/coil.request/-parameters/-entry/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.Parameters.Entry.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.Parameters.hashCode","location":"coil-base/coil.request/-parameters/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.Parameters.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.SuccessResult.hashCode","location":"coil-base/coil.request/-success-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.SuccessResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.request.Tags.hashCode","location":"coil-base/coil.request/-tags/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.request.Tags.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.size.Dimension.Pixels.hashCode","location":"coil-base/coil.size/-dimension/-pixels/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.size.Dimension.Pixels.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.target.ImageViewTarget.hashCode","location":"coil-base/coil.target/-image-view-target/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.target.ImageViewTarget.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.transform.CircleCropTransformation.hashCode","location":"coil-base/coil.transform/-circle-crop-transformation/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.transform.CircleCropTransformation.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.transform.RoundedCornersTransformation.hashCode","location":"coil-base/coil.transform/-rounded-corners-transformation/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.transform.RoundedCornersTransformation.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.transition.CrossfadeTransition.Factory.hashCode","location":"coil-base/coil.transition/-crossfade-transition/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.transition.CrossfadeTransition.Factory.hashCode"]},{"name":"open override fun invalidateDrawable(who: Drawable)","description":"coil.drawable.CrossfadeDrawable.invalidateDrawable","location":"coil-base/coil.drawable/-crossfade-drawable/invalidate-drawable.html","searchKeys":["invalidateDrawable","open override fun invalidateDrawable(who: Drawable)","coil.drawable.CrossfadeDrawable.invalidateDrawable"]},{"name":"open override fun isRunning(): Boolean","description":"coil.drawable.CrossfadeDrawable.isRunning","location":"coil-base/coil.drawable/-crossfade-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","coil.drawable.CrossfadeDrawable.isRunning"]},{"name":"open override fun log(tag: String, priority: Int, message: String?, throwable: Throwable?)","description":"coil.util.DebugLogger.log","location":"coil-base/coil.util/-debug-logger/log.html","searchKeys":["log","open override fun log(tag: String, priority: Int, message: String?, throwable: Throwable?)","coil.util.DebugLogger.log"]},{"name":"open override fun onCancel(request: ImageRequest)","description":"coil.EventListener.onCancel","location":"coil-base/coil/-event-listener/on-cancel.html","searchKeys":["onCancel","open override fun onCancel(request: ImageRequest)","coil.EventListener.onCancel"]},{"name":"open override fun onError(error: Drawable?)","description":"coil.target.GenericViewTarget.onError","location":"coil-base/coil.target/-generic-view-target/on-error.html","searchKeys":["onError","open override fun onError(error: Drawable?)","coil.target.GenericViewTarget.onError"]},{"name":"open override fun onError(request: ImageRequest, result: ErrorResult)","description":"coil.EventListener.onError","location":"coil-base/coil/-event-listener/on-error.html","searchKeys":["onError","open override fun onError(request: ImageRequest, result: ErrorResult)","coil.EventListener.onError"]},{"name":"open override fun onStart(owner: LifecycleOwner)","description":"coil.target.GenericViewTarget.onStart","location":"coil-base/coil.target/-generic-view-target/on-start.html","searchKeys":["onStart","open override fun onStart(owner: LifecycleOwner)","coil.target.GenericViewTarget.onStart"]},{"name":"open override fun onStart(placeholder: Drawable?)","description":"coil.target.GenericViewTarget.onStart","location":"coil-base/coil.target/-generic-view-target/on-start.html","searchKeys":["onStart","open override fun onStart(placeholder: Drawable?)","coil.target.GenericViewTarget.onStart"]},{"name":"open override fun onStart(request: ImageRequest)","description":"coil.EventListener.onStart","location":"coil-base/coil/-event-listener/on-start.html","searchKeys":["onStart","open override fun onStart(request: ImageRequest)","coil.EventListener.onStart"]},{"name":"open override fun onStop(owner: LifecycleOwner)","description":"coil.target.GenericViewTarget.onStop","location":"coil-base/coil.target/-generic-view-target/on-stop.html","searchKeys":["onStop","open override fun onStop(owner: LifecycleOwner)","coil.target.GenericViewTarget.onStop"]},{"name":"open override fun onSuccess(request: ImageRequest, result: SuccessResult)","description":"coil.EventListener.onSuccess","location":"coil-base/coil/-event-listener/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(request: ImageRequest, result: SuccessResult)","coil.EventListener.onSuccess"]},{"name":"open override fun onSuccess(result: Drawable)","description":"coil.target.GenericViewTarget.onSuccess","location":"coil-base/coil.target/-generic-view-target/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(result: Drawable)","coil.target.GenericViewTarget.onSuccess"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"coil.drawable.CrossfadeDrawable.registerAnimationCallback","location":"coil-base/coil.drawable/-crossfade-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","coil.drawable.CrossfadeDrawable.registerAnimationCallback"]},{"name":"open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","description":"coil.drawable.CrossfadeDrawable.scheduleDrawable","location":"coil-base/coil.drawable/-crossfade-drawable/schedule-drawable.html","searchKeys":["scheduleDrawable","open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","coil.drawable.CrossfadeDrawable.scheduleDrawable"]},{"name":"open override fun setAlpha(alpha: Int)","description":"coil.drawable.CrossfadeDrawable.setAlpha","location":"coil-base/coil.drawable/-crossfade-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","coil.drawable.CrossfadeDrawable.setAlpha"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"coil.drawable.CrossfadeDrawable.setColorFilter","location":"coil-base/coil.drawable/-crossfade-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","coil.drawable.CrossfadeDrawable.setColorFilter"]},{"name":"open override fun setTint(tintColor: Int)","description":"coil.drawable.CrossfadeDrawable.setTint","location":"coil-base/coil.drawable/-crossfade-drawable/set-tint.html","searchKeys":["setTint","open override fun setTint(tintColor: Int)","coil.drawable.CrossfadeDrawable.setTint"]},{"name":"open override fun setTintBlendMode(blendMode: BlendMode?)","description":"coil.drawable.CrossfadeDrawable.setTintBlendMode","location":"coil-base/coil.drawable/-crossfade-drawable/set-tint-blend-mode.html","searchKeys":["setTintBlendMode","open override fun setTintBlendMode(blendMode: BlendMode?)","coil.drawable.CrossfadeDrawable.setTintBlendMode"]},{"name":"open override fun setTintList(tint: ColorStateList?)","description":"coil.drawable.CrossfadeDrawable.setTintList","location":"coil-base/coil.drawable/-crossfade-drawable/set-tint-list.html","searchKeys":["setTintList","open override fun setTintList(tint: ColorStateList?)","coil.drawable.CrossfadeDrawable.setTintList"]},{"name":"open override fun setTintMode(tintMode: PorterDuff.Mode?)","description":"coil.drawable.CrossfadeDrawable.setTintMode","location":"coil-base/coil.drawable/-crossfade-drawable/set-tint-mode.html","searchKeys":["setTintMode","open override fun setTintMode(tintMode: PorterDuff.Mode?)","coil.drawable.CrossfadeDrawable.setTintMode"]},{"name":"open override fun start()","description":"coil.drawable.CrossfadeDrawable.start","location":"coil-base/coil.drawable/-crossfade-drawable/start.html","searchKeys":["start","open override fun start()","coil.drawable.CrossfadeDrawable.start"]},{"name":"open override fun stop()","description":"coil.drawable.CrossfadeDrawable.stop","location":"coil-base/coil.drawable/-crossfade-drawable/stop.html","searchKeys":["stop","open override fun stop()","coil.drawable.CrossfadeDrawable.stop"]},{"name":"open override fun toString(): String","description":"coil.memory.MemoryCache.Key.toString","location":"coil-base/coil.memory/-memory-cache/-key/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.memory.MemoryCache.Key.toString"]},{"name":"open override fun toString(): String","description":"coil.memory.MemoryCache.Value.toString","location":"coil-base/coil.memory/-memory-cache/-value/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.memory.MemoryCache.Value.toString"]},{"name":"open override fun toString(): String","description":"coil.request.NullRequestData.toString","location":"coil-base/coil.request/-null-request-data/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.request.NullRequestData.toString"]},{"name":"open override fun toString(): String","description":"coil.request.Parameters.Entry.toString","location":"coil-base/coil.request/-parameters/-entry/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.request.Parameters.Entry.toString"]},{"name":"open override fun toString(): String","description":"coil.request.Parameters.toString","location":"coil-base/coil.request/-parameters/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.request.Parameters.toString"]},{"name":"open override fun toString(): String","description":"coil.request.Tags.toString","location":"coil-base/coil.request/-tags/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.request.Tags.toString"]},{"name":"open override fun toString(): String","description":"coil.size.Dimension.Pixels.toString","location":"coil-base/coil.size/-dimension/-pixels/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.size.Dimension.Pixels.toString"]},{"name":"open override fun toString(): String","description":"coil.size.Dimension.Undefined.toString","location":"coil-base/coil.size/-dimension/-undefined/to-string.html","searchKeys":["toString","open override fun toString(): String","coil.size.Dimension.Undefined.toString"]},{"name":"open override fun transition()","description":"coil.transition.CrossfadeTransition.transition","location":"coil-base/coil.transition/-crossfade-transition/transition.html","searchKeys":["transition","open override fun transition()","coil.transition.CrossfadeTransition.transition"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"coil.drawable.CrossfadeDrawable.unregisterAnimationCallback","location":"coil-base/coil.drawable/-crossfade-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","coil.drawable.CrossfadeDrawable.unregisterAnimationCallback"]},{"name":"open override fun unscheduleDrawable(who: Drawable, what: Runnable)","description":"coil.drawable.CrossfadeDrawable.unscheduleDrawable","location":"coil-base/coil.drawable/-crossfade-drawable/unschedule-drawable.html","searchKeys":["unscheduleDrawable","open override fun unscheduleDrawable(who: Drawable, what: Runnable)","coil.drawable.CrossfadeDrawable.unscheduleDrawable"]},{"name":"open override fun writeToParcel(parcel: Parcel, flags: Int)","description":"coil.memory.MemoryCache.Key.writeToParcel","location":"coil-base/coil.memory/-memory-cache/-key/write-to-parcel.html","searchKeys":["writeToParcel","open override fun writeToParcel(parcel: Parcel, flags: Int)","coil.memory.MemoryCache.Key.writeToParcel"]},{"name":"open override val cacheKey: String","description":"coil.transform.CircleCropTransformation.cacheKey","location":"coil-base/coil.transform/-circle-crop-transformation/cache-key.html","searchKeys":["cacheKey","open override val cacheKey: String","coil.transform.CircleCropTransformation.cacheKey"]},{"name":"open override val cacheKey: String","description":"coil.transform.RoundedCornersTransformation.cacheKey","location":"coil-base/coil.transform/-rounded-corners-transformation/cache-key.html","searchKeys":["cacheKey","open override val cacheKey: String","coil.transform.RoundedCornersTransformation.cacheKey"]},{"name":"open override val drawable: Drawable","description":"coil.request.SuccessResult.drawable","location":"coil-base/coil.request/-success-result/drawable.html","searchKeys":["drawable","open override val drawable: Drawable","coil.request.SuccessResult.drawable"]},{"name":"open override val drawable: Drawable?","description":"coil.request.ErrorResult.drawable","location":"coil-base/coil.request/-error-result/drawable.html","searchKeys":["drawable","open override val drawable: Drawable?","coil.request.ErrorResult.drawable"]},{"name":"open override val request: ImageRequest","description":"coil.request.ErrorResult.request","location":"coil-base/coil.request/-error-result/request.html","searchKeys":["request","open override val request: ImageRequest","coil.request.ErrorResult.request"]},{"name":"open override val request: ImageRequest","description":"coil.request.SuccessResult.request","location":"coil-base/coil.request/-success-result/request.html","searchKeys":["request","open override val request: ImageRequest","coil.request.SuccessResult.request"]},{"name":"open override val view: ImageView","description":"coil.target.ImageViewTarget.view","location":"coil-base/coil.target/-image-view-target/view.html","searchKeys":["view","open override val view: ImageView","coil.target.ImageViewTarget.view"]},{"name":"open override var drawable: Drawable?","description":"coil.target.ImageViewTarget.drawable","location":"coil-base/coil.target/-image-view-target/drawable.html","searchKeys":["drawable","open override var drawable: Drawable?","coil.target.ImageViewTarget.drawable"]},{"name":"open override var level: Int","description":"coil.util.DebugLogger.level","location":"coil-base/coil.util/-debug-logger/level.html","searchKeys":["level","open override var level: Int","coil.util.DebugLogger.level"]},{"name":"open suspend override fun decode(): DecodeResult","description":"coil.decode.BitmapFactoryDecoder.decode","location":"coil-base/coil.decode/-bitmap-factory-decoder/decode.html","searchKeys":["decode","open suspend override fun decode(): DecodeResult","coil.decode.BitmapFactoryDecoder.decode"]},{"name":"open suspend override fun size(): Size","description":"coil.size.ViewSizeResolver.size","location":"coil-base/coil.size/-view-size-resolver/size.html","searchKeys":["size","open suspend override fun size(): Size","coil.size.ViewSizeResolver.size"]},{"name":"open suspend override fun transform(input: Bitmap, size: Size): Bitmap","description":"coil.transform.CircleCropTransformation.transform","location":"coil-base/coil.transform/-circle-crop-transformation/transform.html","searchKeys":["transform","open suspend override fun transform(input: Bitmap, size: Size): Bitmap","coil.transform.CircleCropTransformation.transform"]},{"name":"open suspend override fun transform(input: Bitmap, size: Size): Bitmap","description":"coil.transform.RoundedCornersTransformation.transform","location":"coil-base/coil.transform/-rounded-corners-transformation/transform.html","searchKeys":["transform","open suspend override fun transform(input: Bitmap, size: Size): Bitmap","coil.transform.RoundedCornersTransformation.transform"]},{"name":"open val subtractPadding: Boolean","description":"coil.size.ViewSizeResolver.subtractPadding","location":"coil-base/coil.size/-view-size-resolver/subtract-padding.html","searchKeys":["subtractPadding","open val subtractPadding: Boolean","coil.size.ViewSizeResolver.subtractPadding"]},{"name":"sealed class Dimension","description":"coil.size.Dimension","location":"coil-base/coil.size/-dimension/index.html","searchKeys":["Dimension","sealed class Dimension","coil.size.Dimension"]},{"name":"sealed class FetchResult","description":"coil.fetch.FetchResult","location":"coil-base/coil.fetch/-fetch-result/index.html","searchKeys":["FetchResult","sealed class FetchResult","coil.fetch.FetchResult"]},{"name":"sealed class ImageResult","description":"coil.request.ImageResult","location":"coil-base/coil.request/-image-result/index.html","searchKeys":["ImageResult","sealed class ImageResult","coil.request.ImageResult"]},{"name":"sealed class ImageSource : Closeable","description":"coil.decode.ImageSource","location":"coil-base/coil.decode/-image-source/index.html","searchKeys":["ImageSource","sealed class ImageSource : Closeable","coil.decode.ImageSource"]},{"name":"val EMPTY: Parameters","description":"coil.request.Parameters.Companion.EMPTY","location":"coil-base/coil.request/-parameters/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Parameters","coil.request.Parameters.Companion.EMPTY"]},{"name":"val EMPTY: Tags","description":"coil.request.Tags.Companion.EMPTY","location":"coil-base/coil.request/-tags/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Tags","coil.request.Tags.Companion.EMPTY"]},{"name":"val NONE: EventListener","description":"coil.EventListener.Companion.NONE","location":"coil-base/coil/-event-listener/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: EventListener","coil.EventListener.Companion.NONE"]},{"name":"val NONE: EventListener.Factory","description":"coil.EventListener.Factory.Companion.NONE","location":"coil-base/coil/-event-listener/-factory/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: EventListener.Factory","coil.EventListener.Factory.Companion.NONE"]},{"name":"val NONE: Transition.Factory","description":"coil.transition.Transition.Factory.Companion.NONE","location":"coil-base/coil.transition/-transition/-factory/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: Transition.Factory","coil.transition.Transition.Factory.Companion.NONE"]},{"name":"val ORIGINAL: Size","description":"coil.size.Size.Companion.ORIGINAL","location":"coil-base/coil.size/-size/-companion/-o-r-i-g-i-n-a-l.html","searchKeys":["ORIGINAL","val ORIGINAL: Size","coil.size.Size.Companion.ORIGINAL"]},{"name":"val Size.isOriginal: Boolean","description":"coil.size.isOriginal","location":"coil-base/coil.size/is-original.html","searchKeys":["isOriginal","val Size.isOriginal: Boolean","coil.size.isOriginal"]},{"name":"val allowConversionToBitmap: Boolean","description":"coil.request.ImageRequest.allowConversionToBitmap","location":"coil-base/coil.request/-image-request/allow-conversion-to-bitmap.html","searchKeys":["allowConversionToBitmap","val allowConversionToBitmap: Boolean","coil.request.ImageRequest.allowConversionToBitmap"]},{"name":"val allowHardware: Boolean","description":"coil.request.ImageRequest.allowHardware","location":"coil-base/coil.request/-image-request/allow-hardware.html","searchKeys":["allowHardware","val allowHardware: Boolean","coil.request.ImageRequest.allowHardware"]},{"name":"val allowHardware: Boolean = true","description":"coil.request.DefaultRequestOptions.allowHardware","location":"coil-base/coil.request/-default-request-options/allow-hardware.html","searchKeys":["allowHardware","val allowHardware: Boolean = true","coil.request.DefaultRequestOptions.allowHardware"]},{"name":"val allowHardware: Boolean?","description":"coil.request.DefinedRequestOptions.allowHardware","location":"coil-base/coil.request/-defined-request-options/allow-hardware.html","searchKeys":["allowHardware","val allowHardware: Boolean?","coil.request.DefinedRequestOptions.allowHardware"]},{"name":"val allowInexactSize: Boolean = false","description":"coil.request.Options.allowInexactSize","location":"coil-base/coil.request/-options/allow-inexact-size.html","searchKeys":["allowInexactSize","val allowInexactSize: Boolean = false","coil.request.Options.allowInexactSize"]},{"name":"val allowRgb565: Boolean","description":"coil.request.ImageRequest.allowRgb565","location":"coil-base/coil.request/-image-request/allow-rgb565.html","searchKeys":["allowRgb565","val allowRgb565: Boolean","coil.request.ImageRequest.allowRgb565"]},{"name":"val allowRgb565: Boolean = false","description":"coil.request.DefaultRequestOptions.allowRgb565","location":"coil-base/coil.request/-default-request-options/allow-rgb565.html","searchKeys":["allowRgb565","val allowRgb565: Boolean = false","coil.request.DefaultRequestOptions.allowRgb565"]},{"name":"val allowRgb565: Boolean = false","description":"coil.request.Options.allowRgb565","location":"coil-base/coil.request/-options/allow-rgb565.html","searchKeys":["allowRgb565","val allowRgb565: Boolean = false","coil.request.Options.allowRgb565"]},{"name":"val allowRgb565: Boolean?","description":"coil.request.DefinedRequestOptions.allowRgb565","location":"coil-base/coil.request/-defined-request-options/allow-rgb565.html","searchKeys":["allowRgb565","val allowRgb565: Boolean?","coil.request.DefinedRequestOptions.allowRgb565"]},{"name":"val bitmap: Bitmap","description":"coil.memory.MemoryCache.Value.bitmap","location":"coil-base/coil.memory/-memory-cache/-value/bitmap.html","searchKeys":["bitmap","val bitmap: Bitmap","coil.memory.MemoryCache.Value.bitmap"]},{"name":"val bitmapConfig: Bitmap.Config","description":"coil.request.DefaultRequestOptions.bitmapConfig","location":"coil-base/coil.request/-default-request-options/bitmap-config.html","searchKeys":["bitmapConfig","val bitmapConfig: Bitmap.Config","coil.request.DefaultRequestOptions.bitmapConfig"]},{"name":"val bitmapConfig: Bitmap.Config","description":"coil.request.ImageRequest.bitmapConfig","location":"coil-base/coil.request/-image-request/bitmap-config.html","searchKeys":["bitmapConfig","val bitmapConfig: Bitmap.Config","coil.request.ImageRequest.bitmapConfig"]},{"name":"val bitmapConfig: Bitmap.Config?","description":"coil.request.DefinedRequestOptions.bitmapConfig","location":"coil-base/coil.request/-defined-request-options/bitmap-config.html","searchKeys":["bitmapConfig","val bitmapConfig: Bitmap.Config?","coil.request.DefinedRequestOptions.bitmapConfig"]},{"name":"val colorSpace: ColorSpace?","description":"coil.request.ImageRequest.colorSpace","location":"coil-base/coil.request/-image-request/color-space.html","searchKeys":["colorSpace","val colorSpace: ColorSpace?","coil.request.ImageRequest.colorSpace"]},{"name":"val colorSpace: ColorSpace?","description":"coil.request.Options.colorSpace","location":"coil-base/coil.request/-options/color-space.html","searchKeys":["colorSpace","val colorSpace: ColorSpace?","coil.request.Options.colorSpace"]},{"name":"val config: Bitmap.Config","description":"coil.request.Options.config","location":"coil-base/coil.request/-options/config.html","searchKeys":["config","val config: Bitmap.Config","coil.request.Options.config"]},{"name":"val context: Context","description":"coil.request.ImageRequest.context","location":"coil-base/coil.request/-image-request/context.html","searchKeys":["context","val context: Context","coil.request.ImageRequest.context"]},{"name":"val context: Context","description":"coil.request.Options.context","location":"coil-base/coil.request/-options/context.html","searchKeys":["context","val context: Context","coil.request.Options.context"]},{"name":"val data: Any","description":"coil.request.ImageRequest.data","location":"coil-base/coil.request/-image-request/data.html","searchKeys":["data","val data: Any","coil.request.ImageRequest.data"]},{"name":"val dataSource: DataSource","description":"coil.fetch.DrawableResult.dataSource","location":"coil-base/coil.fetch/-drawable-result/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","coil.fetch.DrawableResult.dataSource"]},{"name":"val dataSource: DataSource","description":"coil.fetch.SourceResult.dataSource","location":"coil-base/coil.fetch/-source-result/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","coil.fetch.SourceResult.dataSource"]},{"name":"val dataSource: DataSource","description":"coil.request.SuccessResult.dataSource","location":"coil-base/coil.request/-success-result/data-source.html","searchKeys":["dataSource","val dataSource: DataSource","coil.request.SuccessResult.dataSource"]},{"name":"val decoderDispatcher: CoroutineDispatcher","description":"coil.request.DefaultRequestOptions.decoderDispatcher","location":"coil-base/coil.request/-default-request-options/decoder-dispatcher.html","searchKeys":["decoderDispatcher","val decoderDispatcher: CoroutineDispatcher","coil.request.DefaultRequestOptions.decoderDispatcher"]},{"name":"val decoderDispatcher: CoroutineDispatcher","description":"coil.request.ImageRequest.decoderDispatcher","location":"coil-base/coil.request/-image-request/decoder-dispatcher.html","searchKeys":["decoderDispatcher","val decoderDispatcher: CoroutineDispatcher","coil.request.ImageRequest.decoderDispatcher"]},{"name":"val decoderDispatcher: CoroutineDispatcher?","description":"coil.request.DefinedRequestOptions.decoderDispatcher","location":"coil-base/coil.request/-defined-request-options/decoder-dispatcher.html","searchKeys":["decoderDispatcher","val decoderDispatcher: CoroutineDispatcher?","coil.request.DefinedRequestOptions.decoderDispatcher"]},{"name":"val decoderFactories: List<Decoder.Factory>","description":"coil.ComponentRegistry.decoderFactories","location":"coil-base/coil/-component-registry/decoder-factories.html","searchKeys":["decoderFactories","val decoderFactories: List<Decoder.Factory>","coil.ComponentRegistry.decoderFactories"]},{"name":"val decoderFactory: Decoder.Factory?","description":"coil.request.ImageRequest.decoderFactory","location":"coil-base/coil.request/-image-request/decoder-factory.html","searchKeys":["decoderFactory","val decoderFactory: Decoder.Factory?","coil.request.ImageRequest.decoderFactory"]},{"name":"val defaults: DefaultRequestOptions","description":"coil.request.ImageRequest.defaults","location":"coil-base/coil.request/-image-request/defaults.html","searchKeys":["defaults","val defaults: DefaultRequestOptions","coil.request.ImageRequest.defaults"]},{"name":"val defined: DefinedRequestOptions","description":"coil.request.ImageRequest.defined","location":"coil-base/coil.request/-image-request/defined.html","searchKeys":["defined","val defined: DefinedRequestOptions","coil.request.ImageRequest.defined"]},{"name":"val density: Int","description":"coil.decode.ResourceMetadata.density","location":"coil-base/coil.decode/-resource-metadata/density.html","searchKeys":["density","val density: Int","coil.decode.ResourceMetadata.density"]},{"name":"val diskCacheKey: String?","description":"coil.request.ImageRequest.diskCacheKey","location":"coil-base/coil.request/-image-request/disk-cache-key.html","searchKeys":["diskCacheKey","val diskCacheKey: String?","coil.request.ImageRequest.diskCacheKey"]},{"name":"val diskCacheKey: String? = null","description":"coil.request.Options.diskCacheKey","location":"coil-base/coil.request/-options/disk-cache-key.html","searchKeys":["diskCacheKey","val diskCacheKey: String? = null","coil.request.Options.diskCacheKey"]},{"name":"val diskCacheKey: String? = null","description":"coil.request.SuccessResult.diskCacheKey","location":"coil-base/coil.request/-success-result/disk-cache-key.html","searchKeys":["diskCacheKey","val diskCacheKey: String? = null","coil.request.SuccessResult.diskCacheKey"]},{"name":"val diskCachePolicy: CachePolicy","description":"coil.request.DefaultRequestOptions.diskCachePolicy","location":"coil-base/coil.request/-default-request-options/disk-cache-policy.html","searchKeys":["diskCachePolicy","val diskCachePolicy: CachePolicy","coil.request.DefaultRequestOptions.diskCachePolicy"]},{"name":"val diskCachePolicy: CachePolicy","description":"coil.request.ImageRequest.diskCachePolicy","location":"coil-base/coil.request/-image-request/disk-cache-policy.html","searchKeys":["diskCachePolicy","val diskCachePolicy: CachePolicy","coil.request.ImageRequest.diskCachePolicy"]},{"name":"val diskCachePolicy: CachePolicy","description":"coil.request.Options.diskCachePolicy","location":"coil-base/coil.request/-options/disk-cache-policy.html","searchKeys":["diskCachePolicy","val diskCachePolicy: CachePolicy","coil.request.Options.diskCachePolicy"]},{"name":"val diskCachePolicy: CachePolicy?","description":"coil.request.DefinedRequestOptions.diskCachePolicy","location":"coil-base/coil.request/-defined-request-options/disk-cache-policy.html","searchKeys":["diskCachePolicy","val diskCachePolicy: CachePolicy?","coil.request.DefinedRequestOptions.diskCachePolicy"]},{"name":"val drawable: Drawable","description":"coil.decode.DecodeResult.drawable","location":"coil-base/coil.decode/-decode-result/drawable.html","searchKeys":["drawable","val drawable: Drawable","coil.decode.DecodeResult.drawable"]},{"name":"val drawable: Drawable","description":"coil.fetch.DrawableResult.drawable","location":"coil-base/coil.fetch/-drawable-result/drawable.html","searchKeys":["drawable","val drawable: Drawable","coil.fetch.DrawableResult.drawable"]},{"name":"val durationMillis: Int","description":"coil.drawable.CrossfadeDrawable.durationMillis","location":"coil-base/coil.drawable/-crossfade-drawable/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","coil.drawable.CrossfadeDrawable.durationMillis"]},{"name":"val durationMillis: Int","description":"coil.transition.CrossfadeTransition.Factory.durationMillis","location":"coil-base/coil.transition/-crossfade-transition/-factory/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","coil.transition.CrossfadeTransition.Factory.durationMillis"]},{"name":"val durationMillis: Int","description":"coil.transition.CrossfadeTransition.durationMillis","location":"coil-base/coil.transition/-crossfade-transition/duration-millis.html","searchKeys":["durationMillis","val durationMillis: Int","coil.transition.CrossfadeTransition.durationMillis"]},{"name":"val end: Drawable?","description":"coil.drawable.CrossfadeDrawable.end","location":"coil-base/coil.drawable/-crossfade-drawable/end.html","searchKeys":["end","val end: Drawable?","coil.drawable.CrossfadeDrawable.end"]},{"name":"val entries: EnumEntries<CachePolicy>","description":"coil.request.CachePolicy.entries","location":"coil-base/coil.request/-cache-policy/entries.html","searchKeys":["entries","val entries: EnumEntries<CachePolicy>","coil.request.CachePolicy.entries"]},{"name":"val entries: EnumEntries<DataSource>","description":"coil.decode.DataSource.entries","location":"coil-base/coil.decode/-data-source/entries.html","searchKeys":["entries","val entries: EnumEntries<DataSource>","coil.decode.DataSource.entries"]},{"name":"val entries: EnumEntries<ExifOrientationPolicy>","description":"coil.decode.ExifOrientationPolicy.entries","location":"coil-base/coil.decode/-exif-orientation-policy/entries.html","searchKeys":["entries","val entries: EnumEntries<ExifOrientationPolicy>","coil.decode.ExifOrientationPolicy.entries"]},{"name":"val entries: EnumEntries<Precision>","description":"coil.size.Precision.entries","location":"coil-base/coil.size/-precision/entries.html","searchKeys":["entries","val entries: EnumEntries<Precision>","coil.size.Precision.entries"]},{"name":"val entries: EnumEntries<Scale>","description":"coil.size.Scale.entries","location":"coil-base/coil.size/-scale/entries.html","searchKeys":["entries","val entries: EnumEntries<Scale>","coil.size.Scale.entries"]},{"name":"val error: Drawable?","description":"coil.request.ImageRequest.error","location":"coil-base/coil.request/-image-request/error.html","searchKeys":["error","val error: Drawable?","coil.request.ImageRequest.error"]},{"name":"val error: Drawable? = null","description":"coil.request.DefaultRequestOptions.error","location":"coil-base/coil.request/-default-request-options/error.html","searchKeys":["error","val error: Drawable? = null","coil.request.DefaultRequestOptions.error"]},{"name":"val extras: Map<String, Any>","description":"coil.memory.MemoryCache.Value.extras","location":"coil-base/coil.memory/-memory-cache/-value/extras.html","searchKeys":["extras","val extras: Map<String, Any>","coil.memory.MemoryCache.Value.extras"]},{"name":"val extras: Map<String, String>","description":"coil.memory.MemoryCache.Key.extras","location":"coil-base/coil.memory/-memory-cache/-key/extras.html","searchKeys":["extras","val extras: Map<String, String>","coil.memory.MemoryCache.Key.extras"]},{"name":"val fadeStart: Boolean = true","description":"coil.drawable.CrossfadeDrawable.fadeStart","location":"coil-base/coil.drawable/-crossfade-drawable/fade-start.html","searchKeys":["fadeStart","val fadeStart: Boolean = true","coil.drawable.CrossfadeDrawable.fadeStart"]},{"name":"val fallback: Drawable?","description":"coil.request.ImageRequest.fallback","location":"coil-base/coil.request/-image-request/fallback.html","searchKeys":["fallback","val fallback: Drawable?","coil.request.ImageRequest.fallback"]},{"name":"val fallback: Drawable? = null","description":"coil.request.DefaultRequestOptions.fallback","location":"coil-base/coil.request/-default-request-options/fallback.html","searchKeys":["fallback","val fallback: Drawable? = null","coil.request.DefaultRequestOptions.fallback"]},{"name":"val fetcherDispatcher: CoroutineDispatcher","description":"coil.request.DefaultRequestOptions.fetcherDispatcher","location":"coil-base/coil.request/-default-request-options/fetcher-dispatcher.html","searchKeys":["fetcherDispatcher","val fetcherDispatcher: CoroutineDispatcher","coil.request.DefaultRequestOptions.fetcherDispatcher"]},{"name":"val fetcherDispatcher: CoroutineDispatcher","description":"coil.request.ImageRequest.fetcherDispatcher","location":"coil-base/coil.request/-image-request/fetcher-dispatcher.html","searchKeys":["fetcherDispatcher","val fetcherDispatcher: CoroutineDispatcher","coil.request.ImageRequest.fetcherDispatcher"]},{"name":"val fetcherDispatcher: CoroutineDispatcher?","description":"coil.request.DefinedRequestOptions.fetcherDispatcher","location":"coil-base/coil.request/-defined-request-options/fetcher-dispatcher.html","searchKeys":["fetcherDispatcher","val fetcherDispatcher: CoroutineDispatcher?","coil.request.DefinedRequestOptions.fetcherDispatcher"]},{"name":"val fetcherFactories: List<Pair<Fetcher.Factory<out Any>, Class<out Any>>>","description":"coil.ComponentRegistry.fetcherFactories","location":"coil-base/coil/-component-registry/fetcher-factories.html","searchKeys":["fetcherFactories","val fetcherFactories: List<Pair<Fetcher.Factory<out Any>, Class<out Any>>>","coil.ComponentRegistry.fetcherFactories"]},{"name":"val fetcherFactory: Pair<Fetcher.Factory<*>, Class<*>>?","description":"coil.request.ImageRequest.fetcherFactory","location":"coil-base/coil.request/-image-request/fetcher-factory.html","searchKeys":["fetcherFactory","val fetcherFactory: Pair<Fetcher.Factory<*>, Class<*>>?","coil.request.ImageRequest.fetcherFactory"]},{"name":"val filePath: String","description":"coil.decode.AssetMetadata.filePath","location":"coil-base/coil.decode/-asset-metadata/file-path.html","searchKeys":["filePath","val filePath: String","coil.decode.AssetMetadata.filePath"]},{"name":"val headers: Headers","description":"coil.request.ImageRequest.headers","location":"coil-base/coil.request/-image-request/headers.html","searchKeys":["headers","val headers: Headers","coil.request.ImageRequest.headers"]},{"name":"val headers: Headers","description":"coil.request.Options.headers","location":"coil-base/coil.request/-options/headers.html","searchKeys":["headers","val headers: Headers","coil.request.Options.headers"]},{"name":"val height: Dimension","description":"coil.size.Size.height","location":"coil-base/coil.size/-size/height.html","searchKeys":["height","val height: Dimension","coil.size.Size.height"]},{"name":"val interceptorDispatcher: CoroutineDispatcher","description":"coil.request.DefaultRequestOptions.interceptorDispatcher","location":"coil-base/coil.request/-default-request-options/interceptor-dispatcher.html","searchKeys":["interceptorDispatcher","val interceptorDispatcher: CoroutineDispatcher","coil.request.DefaultRequestOptions.interceptorDispatcher"]},{"name":"val interceptorDispatcher: CoroutineDispatcher","description":"coil.request.ImageRequest.interceptorDispatcher","location":"coil-base/coil.request/-image-request/interceptor-dispatcher.html","searchKeys":["interceptorDispatcher","val interceptorDispatcher: CoroutineDispatcher","coil.request.ImageRequest.interceptorDispatcher"]},{"name":"val interceptorDispatcher: CoroutineDispatcher?","description":"coil.request.DefinedRequestOptions.interceptorDispatcher","location":"coil-base/coil.request/-defined-request-options/interceptor-dispatcher.html","searchKeys":["interceptorDispatcher","val interceptorDispatcher: CoroutineDispatcher?","coil.request.DefinedRequestOptions.interceptorDispatcher"]},{"name":"val interceptors: List<Interceptor>","description":"coil.ComponentRegistry.interceptors","location":"coil-base/coil/-component-registry/interceptors.html","searchKeys":["interceptors","val interceptors: List<Interceptor>","coil.ComponentRegistry.interceptors"]},{"name":"val isPlaceholderCached: Boolean = false","description":"coil.request.SuccessResult.isPlaceholderCached","location":"coil-base/coil.request/-success-result/is-placeholder-cached.html","searchKeys":["isPlaceholderCached","val isPlaceholderCached: Boolean = false","coil.request.SuccessResult.isPlaceholderCached"]},{"name":"val isSampled: Boolean","description":"coil.decode.DecodeResult.isSampled","location":"coil-base/coil.decode/-decode-result/is-sampled.html","searchKeys":["isSampled","val isSampled: Boolean","coil.decode.DecodeResult.isSampled"]},{"name":"val isSampled: Boolean","description":"coil.fetch.DrawableResult.isSampled","location":"coil-base/coil.fetch/-drawable-result/is-sampled.html","searchKeys":["isSampled","val isSampled: Boolean","coil.fetch.DrawableResult.isSampled"]},{"name":"val isSampled: Boolean = false","description":"coil.request.SuccessResult.isSampled","location":"coil-base/coil.request/-success-result/is-sampled.html","searchKeys":["isSampled","val isSampled: Boolean = false","coil.request.SuccessResult.isSampled"]},{"name":"val key: String","description":"coil.memory.MemoryCache.Key.key","location":"coil-base/coil.memory/-memory-cache/-key/key.html","searchKeys":["key","val key: String","coil.memory.MemoryCache.Key.key"]},{"name":"val keyers: List<Pair<Keyer<out Any>, Class<out Any>>>","description":"coil.ComponentRegistry.keyers","location":"coil-base/coil/-component-registry/keyers.html","searchKeys":["keyers","val keyers: List<Pair<Keyer<out Any>, Class<out Any>>>","coil.ComponentRegistry.keyers"]},{"name":"val lifecycle: Lifecycle","description":"coil.request.ImageRequest.lifecycle","location":"coil-base/coil.request/-image-request/lifecycle.html","searchKeys":["lifecycle","val lifecycle: Lifecycle","coil.request.ImageRequest.lifecycle"]},{"name":"val lifecycle: Lifecycle?","description":"coil.request.DefinedRequestOptions.lifecycle","location":"coil-base/coil.request/-defined-request-options/lifecycle.html","searchKeys":["lifecycle","val lifecycle: Lifecycle?","coil.request.DefinedRequestOptions.lifecycle"]},{"name":"val listener: ImageRequest.Listener?","description":"coil.request.ImageRequest.listener","location":"coil-base/coil.request/-image-request/listener.html","searchKeys":["listener","val listener: ImageRequest.Listener?","coil.request.ImageRequest.listener"]},{"name":"val mappers: List<Pair<Mapper<out Any, out Any>, Class<out Any>>>","description":"coil.ComponentRegistry.mappers","location":"coil-base/coil/-component-registry/mappers.html","searchKeys":["mappers","val mappers: List<Pair<Mapper<out Any, out Any>, Class<out Any>>>","coil.ComponentRegistry.mappers"]},{"name":"val memoryCacheKey: MemoryCache.Key?","description":"coil.request.ImageRequest.memoryCacheKey","location":"coil-base/coil.request/-image-request/memory-cache-key.html","searchKeys":["memoryCacheKey","val memoryCacheKey: MemoryCache.Key?","coil.request.ImageRequest.memoryCacheKey"]},{"name":"val memoryCacheKey: MemoryCache.Key? = null","description":"coil.request.SuccessResult.memoryCacheKey","location":"coil-base/coil.request/-success-result/memory-cache-key.html","searchKeys":["memoryCacheKey","val memoryCacheKey: MemoryCache.Key? = null","coil.request.SuccessResult.memoryCacheKey"]},{"name":"val memoryCacheKey: String?","description":"coil.request.Parameters.Entry.memoryCacheKey","location":"coil-base/coil.request/-parameters/-entry/memory-cache-key.html","searchKeys":["memoryCacheKey","val memoryCacheKey: String?","coil.request.Parameters.Entry.memoryCacheKey"]},{"name":"val memoryCachePolicy: CachePolicy","description":"coil.request.DefaultRequestOptions.memoryCachePolicy","location":"coil-base/coil.request/-default-request-options/memory-cache-policy.html","searchKeys":["memoryCachePolicy","val memoryCachePolicy: CachePolicy","coil.request.DefaultRequestOptions.memoryCachePolicy"]},{"name":"val memoryCachePolicy: CachePolicy","description":"coil.request.ImageRequest.memoryCachePolicy","location":"coil-base/coil.request/-image-request/memory-cache-policy.html","searchKeys":["memoryCachePolicy","val memoryCachePolicy: CachePolicy","coil.request.ImageRequest.memoryCachePolicy"]},{"name":"val memoryCachePolicy: CachePolicy","description":"coil.request.Options.memoryCachePolicy","location":"coil-base/coil.request/-options/memory-cache-policy.html","searchKeys":["memoryCachePolicy","val memoryCachePolicy: CachePolicy","coil.request.Options.memoryCachePolicy"]},{"name":"val memoryCachePolicy: CachePolicy?","description":"coil.request.DefinedRequestOptions.memoryCachePolicy","location":"coil-base/coil.request/-defined-request-options/memory-cache-policy.html","searchKeys":["memoryCachePolicy","val memoryCachePolicy: CachePolicy?","coil.request.DefinedRequestOptions.memoryCachePolicy"]},{"name":"val mimeType: String?","description":"coil.fetch.SourceResult.mimeType","location":"coil-base/coil.fetch/-source-result/mime-type.html","searchKeys":["mimeType","val mimeType: String?","coil.fetch.SourceResult.mimeType"]},{"name":"val networkCachePolicy: CachePolicy","description":"coil.request.DefaultRequestOptions.networkCachePolicy","location":"coil-base/coil.request/-default-request-options/network-cache-policy.html","searchKeys":["networkCachePolicy","val networkCachePolicy: CachePolicy","coil.request.DefaultRequestOptions.networkCachePolicy"]},{"name":"val networkCachePolicy: CachePolicy","description":"coil.request.ImageRequest.networkCachePolicy","location":"coil-base/coil.request/-image-request/network-cache-policy.html","searchKeys":["networkCachePolicy","val networkCachePolicy: CachePolicy","coil.request.ImageRequest.networkCachePolicy"]},{"name":"val networkCachePolicy: CachePolicy","description":"coil.request.Options.networkCachePolicy","location":"coil-base/coil.request/-options/network-cache-policy.html","searchKeys":["networkCachePolicy","val networkCachePolicy: CachePolicy","coil.request.Options.networkCachePolicy"]},{"name":"val networkCachePolicy: CachePolicy?","description":"coil.request.DefinedRequestOptions.networkCachePolicy","location":"coil-base/coil.request/-defined-request-options/network-cache-policy.html","searchKeys":["networkCachePolicy","val networkCachePolicy: CachePolicy?","coil.request.DefinedRequestOptions.networkCachePolicy"]},{"name":"val packageName: String","description":"coil.decode.ResourceMetadata.packageName","location":"coil-base/coil.decode/-resource-metadata/package-name.html","searchKeys":["packageName","val packageName: String","coil.decode.ResourceMetadata.packageName"]},{"name":"val parameters: Parameters","description":"coil.request.ImageRequest.parameters","location":"coil-base/coil.request/-image-request/parameters.html","searchKeys":["parameters","val parameters: Parameters","coil.request.ImageRequest.parameters"]},{"name":"val parameters: Parameters","description":"coil.request.Options.parameters","location":"coil-base/coil.request/-options/parameters.html","searchKeys":["parameters","val parameters: Parameters","coil.request.Options.parameters"]},{"name":"val placeholder: Drawable?","description":"coil.request.ImageRequest.placeholder","location":"coil-base/coil.request/-image-request/placeholder.html","searchKeys":["placeholder","val placeholder: Drawable?","coil.request.ImageRequest.placeholder"]},{"name":"val placeholder: Drawable? = null","description":"coil.request.DefaultRequestOptions.placeholder","location":"coil-base/coil.request/-default-request-options/placeholder.html","searchKeys":["placeholder","val placeholder: Drawable? = null","coil.request.DefaultRequestOptions.placeholder"]},{"name":"val placeholderMemoryCacheKey: MemoryCache.Key?","description":"coil.request.ImageRequest.placeholderMemoryCacheKey","location":"coil-base/coil.request/-image-request/placeholder-memory-cache-key.html","searchKeys":["placeholderMemoryCacheKey","val placeholderMemoryCacheKey: MemoryCache.Key?","coil.request.ImageRequest.placeholderMemoryCacheKey"]},{"name":"val precision: Precision","description":"coil.request.DefaultRequestOptions.precision","location":"coil-base/coil.request/-default-request-options/precision.html","searchKeys":["precision","val precision: Precision","coil.request.DefaultRequestOptions.precision"]},{"name":"val precision: Precision","description":"coil.request.ImageRequest.precision","location":"coil-base/coil.request/-image-request/precision.html","searchKeys":["precision","val precision: Precision","coil.request.ImageRequest.precision"]},{"name":"val precision: Precision?","description":"coil.request.DefinedRequestOptions.precision","location":"coil-base/coil.request/-defined-request-options/precision.html","searchKeys":["precision","val precision: Precision?","coil.request.DefinedRequestOptions.precision"]},{"name":"val preferExactIntrinsicSize: Boolean = false","description":"coil.drawable.CrossfadeDrawable.preferExactIntrinsicSize","location":"coil-base/coil.drawable/-crossfade-drawable/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean = false","coil.drawable.CrossfadeDrawable.preferExactIntrinsicSize"]},{"name":"val preferExactIntrinsicSize: Boolean = false","description":"coil.transition.CrossfadeTransition.Factory.preferExactIntrinsicSize","location":"coil-base/coil.transition/-crossfade-transition/-factory/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean = false","coil.transition.CrossfadeTransition.Factory.preferExactIntrinsicSize"]},{"name":"val preferExactIntrinsicSize: Boolean = false","description":"coil.transition.CrossfadeTransition.preferExactIntrinsicSize","location":"coil-base/coil.transition/-crossfade-transition/prefer-exact-intrinsic-size.html","searchKeys":["preferExactIntrinsicSize","val preferExactIntrinsicSize: Boolean = false","coil.transition.CrossfadeTransition.preferExactIntrinsicSize"]},{"name":"val premultipliedAlpha: Boolean","description":"coil.request.ImageRequest.premultipliedAlpha","location":"coil-base/coil.request/-image-request/premultiplied-alpha.html","searchKeys":["premultipliedAlpha","val premultipliedAlpha: Boolean","coil.request.ImageRequest.premultipliedAlpha"]},{"name":"val premultipliedAlpha: Boolean = true","description":"coil.request.Options.premultipliedAlpha","location":"coil-base/coil.request/-options/premultiplied-alpha.html","searchKeys":["premultipliedAlpha","val premultipliedAlpha: Boolean = true","coil.request.Options.premultipliedAlpha"]},{"name":"val px: Int","description":"coil.size.Dimension.Pixels.px","location":"coil-base/coil.size/-dimension/-pixels/px.html","searchKeys":["px","val px: Int","coil.size.Dimension.Pixels.px"]},{"name":"val readEnabled: Boolean","description":"coil.request.CachePolicy.readEnabled","location":"coil-base/coil.request/-cache-policy/read-enabled.html","searchKeys":["readEnabled","val readEnabled: Boolean","coil.request.CachePolicy.readEnabled"]},{"name":"val resId: Int","description":"coil.decode.ResourceMetadata.resId","location":"coil-base/coil.decode/-resource-metadata/res-id.html","searchKeys":["resId","val resId: Int","coil.decode.ResourceMetadata.resId"]},{"name":"val response: Response","description":"coil.network.HttpException.response","location":"coil-base/coil.network/-http-exception/response.html","searchKeys":["response","val response: Response","coil.network.HttpException.response"]},{"name":"val scale: Scale","description":"coil.drawable.CrossfadeDrawable.scale","location":"coil-base/coil.drawable/-crossfade-drawable/scale.html","searchKeys":["scale","val scale: Scale","coil.drawable.CrossfadeDrawable.scale"]},{"name":"val scale: Scale","description":"coil.request.ImageRequest.scale","location":"coil-base/coil.request/-image-request/scale.html","searchKeys":["scale","val scale: Scale","coil.request.ImageRequest.scale"]},{"name":"val scale: Scale","description":"coil.request.Options.scale","location":"coil-base/coil.request/-options/scale.html","searchKeys":["scale","val scale: Scale","coil.request.Options.scale"]},{"name":"val scale: Scale?","description":"coil.request.DefinedRequestOptions.scale","location":"coil-base/coil.request/-defined-request-options/scale.html","searchKeys":["scale","val scale: Scale?","coil.request.DefinedRequestOptions.scale"]},{"name":"val size: Int","description":"coil.request.Parameters.size","location":"coil-base/coil.request/-parameters/size.html","searchKeys":["size","val size: Int","coil.request.Parameters.size"]},{"name":"val size: Size","description":"coil.request.Options.size","location":"coil-base/coil.request/-options/size.html","searchKeys":["size","val size: Size","coil.request.Options.size"]},{"name":"val sizeResolver: SizeResolver","description":"coil.request.ImageRequest.sizeResolver","location":"coil-base/coil.request/-image-request/size-resolver.html","searchKeys":["sizeResolver","val sizeResolver: SizeResolver","coil.request.ImageRequest.sizeResolver"]},{"name":"val sizeResolver: SizeResolver?","description":"coil.request.DefinedRequestOptions.sizeResolver","location":"coil-base/coil.request/-defined-request-options/size-resolver.html","searchKeys":["sizeResolver","val sizeResolver: SizeResolver?","coil.request.DefinedRequestOptions.sizeResolver"]},{"name":"val source: ImageSource","description":"coil.fetch.SourceResult.source","location":"coil-base/coil.fetch/-source-result/source.html","searchKeys":["source","val source: ImageSource","coil.fetch.SourceResult.source"]},{"name":"val tags: Tags","description":"coil.request.ImageRequest.tags","location":"coil-base/coil.request/-image-request/tags.html","searchKeys":["tags","val tags: Tags","coil.request.ImageRequest.tags"]},{"name":"val tags: Tags","description":"coil.request.Options.tags","location":"coil-base/coil.request/-options/tags.html","searchKeys":["tags","val tags: Tags","coil.request.Options.tags"]},{"name":"val target: Target?","description":"coil.request.ImageRequest.target","location":"coil-base/coil.request/-image-request/target.html","searchKeys":["target","val target: Target?","coil.request.ImageRequest.target"]},{"name":"val throwable: Throwable","description":"coil.request.ErrorResult.throwable","location":"coil-base/coil.request/-error-result/throwable.html","searchKeys":["throwable","val throwable: Throwable","coil.request.ErrorResult.throwable"]},{"name":"val transformationDispatcher: CoroutineDispatcher","description":"coil.request.DefaultRequestOptions.transformationDispatcher","location":"coil-base/coil.request/-default-request-options/transformation-dispatcher.html","searchKeys":["transformationDispatcher","val transformationDispatcher: CoroutineDispatcher","coil.request.DefaultRequestOptions.transformationDispatcher"]},{"name":"val transformationDispatcher: CoroutineDispatcher","description":"coil.request.ImageRequest.transformationDispatcher","location":"coil-base/coil.request/-image-request/transformation-dispatcher.html","searchKeys":["transformationDispatcher","val transformationDispatcher: CoroutineDispatcher","coil.request.ImageRequest.transformationDispatcher"]},{"name":"val transformationDispatcher: CoroutineDispatcher?","description":"coil.request.DefinedRequestOptions.transformationDispatcher","location":"coil-base/coil.request/-defined-request-options/transformation-dispatcher.html","searchKeys":["transformationDispatcher","val transformationDispatcher: CoroutineDispatcher?","coil.request.DefinedRequestOptions.transformationDispatcher"]},{"name":"val transformations: List<Transformation>","description":"coil.request.ImageRequest.transformations","location":"coil-base/coil.request/-image-request/transformations.html","searchKeys":["transformations","val transformations: List<Transformation>","coil.request.ImageRequest.transformations"]},{"name":"val transitionFactory: Transition.Factory","description":"coil.request.DefaultRequestOptions.transitionFactory","location":"coil-base/coil.request/-default-request-options/transition-factory.html","searchKeys":["transitionFactory","val transitionFactory: Transition.Factory","coil.request.DefaultRequestOptions.transitionFactory"]},{"name":"val transitionFactory: Transition.Factory","description":"coil.request.ImageRequest.transitionFactory","location":"coil-base/coil.request/-image-request/transition-factory.html","searchKeys":["transitionFactory","val transitionFactory: Transition.Factory","coil.request.ImageRequest.transitionFactory"]},{"name":"val transitionFactory: Transition.Factory?","description":"coil.request.DefinedRequestOptions.transitionFactory","location":"coil-base/coil.request/-defined-request-options/transition-factory.html","searchKeys":["transitionFactory","val transitionFactory: Transition.Factory?","coil.request.DefinedRequestOptions.transitionFactory"]},{"name":"val uri: Uri","description":"coil.decode.ContentMetadata.uri","location":"coil-base/coil.decode/-content-metadata/uri.html","searchKeys":["uri","val uri: Uri","coil.decode.ContentMetadata.uri"]},{"name":"val value: Any?","description":"coil.request.Parameters.Entry.value","location":"coil-base/coil.request/-parameters/-entry/value.html","searchKeys":["value","val value: Any?","coil.request.Parameters.Entry.value"]},{"name":"val width: Dimension","description":"coil.size.Size.width","location":"coil-base/coil.size/-size/width.html","searchKeys":["width","val width: Dimension","coil.size.Size.width"]},{"name":"val writeEnabled: Boolean","description":"coil.request.CachePolicy.writeEnabled","location":"coil-base/coil.request/-cache-policy/write-enabled.html","searchKeys":["writeEnabled","val writeEnabled: Boolean","coil.request.CachePolicy.writeEnabled"]},{"name":"class Factory : Decoder.Factory","description":"coil.decode.VideoFrameDecoder.Factory","location":"coil-video/coil.decode/-video-frame-decoder/-factory/index.html","searchKeys":["Factory","class Factory : Decoder.Factory","coil.decode.VideoFrameDecoder.Factory"]},{"name":"class Factory : Fetcher.Factory<MediaDataSource> ","description":"coil.fetch.MediaDataSourceFetcher.Factory","location":"coil-video/coil.fetch/-media-data-source-fetcher/-factory/index.html","searchKeys":["Factory","class Factory : Fetcher.Factory<MediaDataSource> ","coil.fetch.MediaDataSourceFetcher.Factory"]},{"name":"class MediaDataSourceFetcher(data: MediaDataSource, options: Options) : Fetcher","description":"coil.fetch.MediaDataSourceFetcher","location":"coil-video/coil.fetch/-media-data-source-fetcher/index.html","searchKeys":["MediaDataSourceFetcher","class MediaDataSourceFetcher(data: MediaDataSource, options: Options) : Fetcher","coil.fetch.MediaDataSourceFetcher"]},{"name":"class MediaSourceMetadata(val mediaDataSource: MediaDataSource) : ImageSource.Metadata","description":"coil.fetch.MediaDataSourceFetcher.MediaSourceMetadata","location":"coil-video/coil.fetch/-media-data-source-fetcher/-media-source-metadata/index.html","searchKeys":["MediaSourceMetadata","class MediaSourceMetadata(val mediaDataSource: MediaDataSource) : ImageSource.Metadata","coil.fetch.MediaDataSourceFetcher.MediaSourceMetadata"]},{"name":"class VideoFrameDecoder(source: ImageSource, options: Options) : Decoder","description":"coil.decode.VideoFrameDecoder","location":"coil-video/coil.decode/-video-frame-decoder/index.html","searchKeys":["VideoFrameDecoder","class VideoFrameDecoder(source: ImageSource, options: Options) : Decoder","coil.decode.VideoFrameDecoder"]},{"name":"const val VIDEO_FRAME_MICROS_KEY: String","description":"coil.decode.VideoFrameDecoder.Companion.VIDEO_FRAME_MICROS_KEY","location":"coil-video/coil.decode/-video-frame-decoder/-companion/-v-i-d-e-o_-f-r-a-m-e_-m-i-c-r-o-s_-k-e-y.html","searchKeys":["VIDEO_FRAME_MICROS_KEY","const val VIDEO_FRAME_MICROS_KEY: String","coil.decode.VideoFrameDecoder.Companion.VIDEO_FRAME_MICROS_KEY"]},{"name":"const val VIDEO_FRAME_OPTION_KEY: String","description":"coil.decode.VideoFrameDecoder.Companion.VIDEO_FRAME_OPTION_KEY","location":"coil-video/coil.decode/-video-frame-decoder/-companion/-v-i-d-e-o_-f-r-a-m-e_-o-p-t-i-o-n_-k-e-y.html","searchKeys":["VIDEO_FRAME_OPTION_KEY","const val VIDEO_FRAME_OPTION_KEY: String","coil.decode.VideoFrameDecoder.Companion.VIDEO_FRAME_OPTION_KEY"]},{"name":"const val VIDEO_FRAME_PERCENT_KEY: String","description":"coil.decode.VideoFrameDecoder.Companion.VIDEO_FRAME_PERCENT_KEY","location":"coil-video/coil.decode/-video-frame-decoder/-companion/-v-i-d-e-o_-f-r-a-m-e_-p-e-r-c-e-n-t_-k-e-y.html","searchKeys":["VIDEO_FRAME_PERCENT_KEY","const val VIDEO_FRAME_PERCENT_KEY: String","coil.decode.VideoFrameDecoder.Companion.VIDEO_FRAME_PERCENT_KEY"]},{"name":"constructor()","description":"coil.decode.VideoFrameDecoder.Factory.Factory","location":"coil-video/coil.decode/-video-frame-decoder/-factory/-factory.html","searchKeys":["Factory","constructor()","coil.decode.VideoFrameDecoder.Factory.Factory"]},{"name":"constructor()","description":"coil.fetch.MediaDataSourceFetcher.Factory.Factory","location":"coil-video/coil.fetch/-media-data-source-fetcher/-factory/-factory.html","searchKeys":["Factory","constructor()","coil.fetch.MediaDataSourceFetcher.Factory.Factory"]},{"name":"constructor(data: MediaDataSource, options: Options)","description":"coil.fetch.MediaDataSourceFetcher.MediaDataSourceFetcher","location":"coil-video/coil.fetch/-media-data-source-fetcher/-media-data-source-fetcher.html","searchKeys":["MediaDataSourceFetcher","constructor(data: MediaDataSource, options: Options)","coil.fetch.MediaDataSourceFetcher.MediaDataSourceFetcher"]},{"name":"constructor(mediaDataSource: MediaDataSource)","description":"coil.fetch.MediaDataSourceFetcher.MediaSourceMetadata.MediaSourceMetadata","location":"coil-video/coil.fetch/-media-data-source-fetcher/-media-source-metadata/-media-source-metadata.html","searchKeys":["MediaSourceMetadata","constructor(mediaDataSource: MediaDataSource)","coil.fetch.MediaDataSourceFetcher.MediaSourceMetadata.MediaSourceMetadata"]},{"name":"constructor(source: ImageSource, options: Options)","description":"coil.decode.VideoFrameDecoder.VideoFrameDecoder","location":"coil-video/coil.decode/-video-frame-decoder/-video-frame-decoder.html","searchKeys":["VideoFrameDecoder","constructor(source: ImageSource, options: Options)","coil.decode.VideoFrameDecoder.VideoFrameDecoder"]},{"name":"fun ImageRequest.Builder.videoFrameMicros(frameMicros: Long): ImageRequest.Builder","description":"coil.request.videoFrameMicros","location":"coil-video/coil.request/video-frame-micros.html","searchKeys":["videoFrameMicros","fun ImageRequest.Builder.videoFrameMicros(frameMicros: Long): ImageRequest.Builder","coil.request.videoFrameMicros"]},{"name":"fun ImageRequest.Builder.videoFrameMillis(frameMillis: Long): ImageRequest.Builder","description":"coil.request.videoFrameMillis","location":"coil-video/coil.request/video-frame-millis.html","searchKeys":["videoFrameMillis","fun ImageRequest.Builder.videoFrameMillis(frameMillis: Long): ImageRequest.Builder","coil.request.videoFrameMillis"]},{"name":"fun ImageRequest.Builder.videoFrameOption(option: Int): ImageRequest.Builder","description":"coil.request.videoFrameOption","location":"coil-video/coil.request/video-frame-option.html","searchKeys":["videoFrameOption","fun ImageRequest.Builder.videoFrameOption(option: Int): ImageRequest.Builder","coil.request.videoFrameOption"]},{"name":"fun ImageRequest.Builder.videoFramePercent(framePercent: Double): ImageRequest.Builder","description":"coil.request.videoFramePercent","location":"coil-video/coil.request/video-frame-percent.html","searchKeys":["videoFramePercent","fun ImageRequest.Builder.videoFramePercent(framePercent: Double): ImageRequest.Builder","coil.request.videoFramePercent"]},{"name":"fun Parameters.videoFrameMicros(): Long?","description":"coil.request.videoFrameMicros","location":"coil-video/coil.request/video-frame-micros.html","searchKeys":["videoFrameMicros","fun Parameters.videoFrameMicros(): Long?","coil.request.videoFrameMicros"]},{"name":"fun Parameters.videoFrameOption(): Int?","description":"coil.request.videoFrameOption","location":"coil-video/coil.request/video-frame-option.html","searchKeys":["videoFrameOption","fun Parameters.videoFrameOption(): Int?","coil.request.videoFrameOption"]},{"name":"fun Parameters.videoFramePercent(): Double?","description":"coil.request.videoFramePercent","location":"coil-video/coil.request/video-frame-percent.html","searchKeys":["videoFramePercent","fun Parameters.videoFramePercent(): Double?","coil.request.videoFramePercent"]},{"name":"object Companion","description":"coil.decode.VideoFrameDecoder.Companion","location":"coil-video/coil.decode/-video-frame-decoder/-companion/index.html","searchKeys":["Companion","object Companion","coil.decode.VideoFrameDecoder.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.decode.VideoFrameDecoder.Factory.equals","location":"coil-video/coil.decode/-video-frame-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.decode.VideoFrameDecoder.Factory.equals"]},{"name":"open override fun create(data: MediaDataSource, options: Options, imageLoader: ImageLoader): Fetcher","description":"coil.fetch.MediaDataSourceFetcher.Factory.create","location":"coil-video/coil.fetch/-media-data-source-fetcher/-factory/create.html","searchKeys":["create","open override fun create(data: MediaDataSource, options: Options, imageLoader: ImageLoader): Fetcher","coil.fetch.MediaDataSourceFetcher.Factory.create"]},{"name":"open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","description":"coil.decode.VideoFrameDecoder.Factory.create","location":"coil-video/coil.decode/-video-frame-decoder/-factory/create.html","searchKeys":["create","open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","coil.decode.VideoFrameDecoder.Factory.create"]},{"name":"open override fun hashCode(): Int","description":"coil.decode.VideoFrameDecoder.Factory.hashCode","location":"coil-video/coil.decode/-video-frame-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.decode.VideoFrameDecoder.Factory.hashCode"]},{"name":"open suspend override fun decode(): DecodeResult","description":"coil.decode.VideoFrameDecoder.decode","location":"coil-video/coil.decode/-video-frame-decoder/decode.html","searchKeys":["decode","open suspend override fun decode(): DecodeResult","coil.decode.VideoFrameDecoder.decode"]},{"name":"open suspend override fun fetch(): FetchResult","description":"coil.fetch.MediaDataSourceFetcher.fetch","location":"coil-video/coil.fetch/-media-data-source-fetcher/fetch.html","searchKeys":["fetch","open suspend override fun fetch(): FetchResult","coil.fetch.MediaDataSourceFetcher.fetch"]},{"name":"val mediaDataSource: MediaDataSource","description":"coil.fetch.MediaDataSourceFetcher.MediaSourceMetadata.mediaDataSource","location":"coil-video/coil.fetch/-media-data-source-fetcher/-media-source-metadata/media-data-source.html","searchKeys":["mediaDataSource","val mediaDataSource: MediaDataSource","coil.fetch.MediaDataSourceFetcher.MediaSourceMetadata.mediaDataSource"]},{"name":"OPAQUE","description":"coil.transform.PixelOpacity.OPAQUE","location":"coil-gif/coil.transform/-pixel-opacity/-o-p-a-q-u-e/index.html","searchKeys":["OPAQUE","OPAQUE","coil.transform.PixelOpacity.OPAQUE"]},{"name":"TRANSLUCENT","description":"coil.transform.PixelOpacity.TRANSLUCENT","location":"coil-gif/coil.transform/-pixel-opacity/-t-r-a-n-s-l-u-c-e-n-t/index.html","searchKeys":["TRANSLUCENT","TRANSLUCENT","coil.transform.PixelOpacity.TRANSLUCENT"]},{"name":"UNCHANGED","description":"coil.transform.PixelOpacity.UNCHANGED","location":"coil-gif/coil.transform/-pixel-opacity/-u-n-c-h-a-n-g-e-d/index.html","searchKeys":["UNCHANGED","UNCHANGED","coil.transform.PixelOpacity.UNCHANGED"]},{"name":"abstract fun transform(canvas: Canvas): PixelOpacity","description":"coil.transform.AnimatedTransformation.transform","location":"coil-gif/coil.transform/-animated-transformation/transform.html","searchKeys":["transform","abstract fun transform(canvas: Canvas): PixelOpacity","coil.transform.AnimatedTransformation.transform"]},{"name":"class Factory constructor(enforceMinimumFrameDelay: Boolean = true) : Decoder.Factory","description":"coil.decode.GifDecoder.Factory","location":"coil-gif/coil.decode/-gif-decoder/-factory/index.html","searchKeys":["Factory","class Factory constructor(enforceMinimumFrameDelay: Boolean = true) : Decoder.Factory","coil.decode.GifDecoder.Factory"]},{"name":"class Factory constructor(enforceMinimumFrameDelay: Boolean = true) : Decoder.Factory","description":"coil.decode.ImageDecoderDecoder.Factory","location":"coil-gif/coil.decode/-image-decoder-decoder/-factory/index.html","searchKeys":["Factory","class Factory constructor(enforceMinimumFrameDelay: Boolean = true) : Decoder.Factory","coil.decode.ImageDecoderDecoder.Factory"]},{"name":"class GifDecoder constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true) : Decoder","description":"coil.decode.GifDecoder","location":"coil-gif/coil.decode/-gif-decoder/index.html","searchKeys":["GifDecoder","class GifDecoder constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true) : Decoder","coil.decode.GifDecoder"]},{"name":"class ImageDecoderDecoder constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true) : Decoder","description":"coil.decode.ImageDecoderDecoder","location":"coil-gif/coil.decode/-image-decoder-decoder/index.html","searchKeys":["ImageDecoderDecoder","class ImageDecoderDecoder constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true) : Decoder","coil.decode.ImageDecoderDecoder"]},{"name":"class MovieDrawable constructor(movie: Movie, val config: Bitmap.Config = Bitmap.Config.ARGB_8888, val scale: Scale = Scale.FIT) : Drawable, Animatable2Compat","description":"coil.drawable.MovieDrawable","location":"coil-gif/coil.drawable/-movie-drawable/index.html","searchKeys":["MovieDrawable","class MovieDrawable constructor(movie: Movie, val config: Bitmap.Config = Bitmap.Config.ARGB_8888, val scale: Scale = Scale.FIT) : Drawable, Animatable2Compat","coil.drawable.MovieDrawable"]},{"name":"class ScaleDrawable constructor(val child: Drawable, val scale: Scale = Scale.FIT) : Drawable, Drawable.Callback, Animatable","description":"coil.drawable.ScaleDrawable","location":"coil-gif/coil.drawable/-scale-drawable/index.html","searchKeys":["ScaleDrawable","class ScaleDrawable constructor(val child: Drawable, val scale: Scale = Scale.FIT) : Drawable, Drawable.Callback, Animatable","coil.drawable.ScaleDrawable"]},{"name":"const val ANIMATED_TRANSFORMATION_KEY: String","description":"coil.decode.GifDecoder.Companion.ANIMATED_TRANSFORMATION_KEY","location":"coil-gif/coil.decode/-gif-decoder/-companion/-a-n-i-m-a-t-e-d_-t-r-a-n-s-f-o-r-m-a-t-i-o-n_-k-e-y.html","searchKeys":["ANIMATED_TRANSFORMATION_KEY","const val ANIMATED_TRANSFORMATION_KEY: String","coil.decode.GifDecoder.Companion.ANIMATED_TRANSFORMATION_KEY"]},{"name":"const val ANIMATION_END_CALLBACK_KEY: String","description":"coil.decode.GifDecoder.Companion.ANIMATION_END_CALLBACK_KEY","location":"coil-gif/coil.decode/-gif-decoder/-companion/-a-n-i-m-a-t-i-o-n_-e-n-d_-c-a-l-l-b-a-c-k_-k-e-y.html","searchKeys":["ANIMATION_END_CALLBACK_KEY","const val ANIMATION_END_CALLBACK_KEY: String","coil.decode.GifDecoder.Companion.ANIMATION_END_CALLBACK_KEY"]},{"name":"const val ANIMATION_START_CALLBACK_KEY: String","description":"coil.decode.GifDecoder.Companion.ANIMATION_START_CALLBACK_KEY","location":"coil-gif/coil.decode/-gif-decoder/-companion/-a-n-i-m-a-t-i-o-n_-s-t-a-r-t_-c-a-l-l-b-a-c-k_-k-e-y.html","searchKeys":["ANIMATION_START_CALLBACK_KEY","const val ANIMATION_START_CALLBACK_KEY: String","coil.decode.GifDecoder.Companion.ANIMATION_START_CALLBACK_KEY"]},{"name":"const val REPEAT_COUNT_KEY: String","description":"coil.decode.GifDecoder.Companion.REPEAT_COUNT_KEY","location":"coil-gif/coil.decode/-gif-decoder/-companion/-r-e-p-e-a-t_-c-o-u-n-t_-k-e-y.html","searchKeys":["REPEAT_COUNT_KEY","const val REPEAT_COUNT_KEY: String","coil.decode.GifDecoder.Companion.REPEAT_COUNT_KEY"]},{"name":"const val REPEAT_INFINITE: Int","description":"coil.drawable.MovieDrawable.Companion.REPEAT_INFINITE","location":"coil-gif/coil.drawable/-movie-drawable/-companion/-r-e-p-e-a-t_-i-n-f-i-n-i-t-e.html","searchKeys":["REPEAT_INFINITE","const val REPEAT_INFINITE: Int","coil.drawable.MovieDrawable.Companion.REPEAT_INFINITE"]},{"name":"constructor(child: Drawable, scale: Scale = Scale.FIT)","description":"coil.drawable.ScaleDrawable.ScaleDrawable","location":"coil-gif/coil.drawable/-scale-drawable/-scale-drawable.html","searchKeys":["ScaleDrawable","constructor(child: Drawable, scale: Scale = Scale.FIT)","coil.drawable.ScaleDrawable.ScaleDrawable"]},{"name":"constructor(enforceMinimumFrameDelay: Boolean = true)","description":"coil.decode.GifDecoder.Factory.Factory","location":"coil-gif/coil.decode/-gif-decoder/-factory/-factory.html","searchKeys":["Factory","constructor(enforceMinimumFrameDelay: Boolean = true)","coil.decode.GifDecoder.Factory.Factory"]},{"name":"constructor(enforceMinimumFrameDelay: Boolean = true)","description":"coil.decode.ImageDecoderDecoder.Factory.Factory","location":"coil-gif/coil.decode/-image-decoder-decoder/-factory/-factory.html","searchKeys":["Factory","constructor(enforceMinimumFrameDelay: Boolean = true)","coil.decode.ImageDecoderDecoder.Factory.Factory"]},{"name":"constructor(movie: Movie, config: Bitmap.Config = Bitmap.Config.ARGB_8888, scale: Scale = Scale.FIT)","description":"coil.drawable.MovieDrawable.MovieDrawable","location":"coil-gif/coil.drawable/-movie-drawable/-movie-drawable.html","searchKeys":["MovieDrawable","constructor(movie: Movie, config: Bitmap.Config = Bitmap.Config.ARGB_8888, scale: Scale = Scale.FIT)","coil.drawable.MovieDrawable.MovieDrawable"]},{"name":"constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true)","description":"coil.decode.GifDecoder.GifDecoder","location":"coil-gif/coil.decode/-gif-decoder/-gif-decoder.html","searchKeys":["GifDecoder","constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true)","coil.decode.GifDecoder.GifDecoder"]},{"name":"constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true)","description":"coil.decode.ImageDecoderDecoder.ImageDecoderDecoder","location":"coil-gif/coil.decode/-image-decoder-decoder/-image-decoder-decoder.html","searchKeys":["ImageDecoderDecoder","constructor(source: ImageSource, options: Options, enforceMinimumFrameDelay: Boolean = true)","coil.decode.ImageDecoderDecoder.ImageDecoderDecoder"]},{"name":"enum PixelOpacity : Enum<PixelOpacity> ","description":"coil.transform.PixelOpacity","location":"coil-gif/coil.transform/-pixel-opacity/index.html","searchKeys":["PixelOpacity","enum PixelOpacity : Enum<PixelOpacity> ","coil.transform.PixelOpacity"]},{"name":"fun DecodeUtils.isAnimatedHeif(source: BufferedSource): Boolean","description":"coil.decode.isAnimatedHeif","location":"coil-gif/coil.decode/is-animated-heif.html","searchKeys":["isAnimatedHeif","fun DecodeUtils.isAnimatedHeif(source: BufferedSource): Boolean","coil.decode.isAnimatedHeif"]},{"name":"fun DecodeUtils.isAnimatedWebP(source: BufferedSource): Boolean","description":"coil.decode.isAnimatedWebP","location":"coil-gif/coil.decode/is-animated-web-p.html","searchKeys":["isAnimatedWebP","fun DecodeUtils.isAnimatedWebP(source: BufferedSource): Boolean","coil.decode.isAnimatedWebP"]},{"name":"fun DecodeUtils.isGif(source: BufferedSource): Boolean","description":"coil.decode.isGif","location":"coil-gif/coil.decode/is-gif.html","searchKeys":["isGif","fun DecodeUtils.isGif(source: BufferedSource): Boolean","coil.decode.isGif"]},{"name":"fun DecodeUtils.isHeif(source: BufferedSource): Boolean","description":"coil.decode.isHeif","location":"coil-gif/coil.decode/is-heif.html","searchKeys":["isHeif","fun DecodeUtils.isHeif(source: BufferedSource): Boolean","coil.decode.isHeif"]},{"name":"fun DecodeUtils.isWebP(source: BufferedSource): Boolean","description":"coil.decode.isWebP","location":"coil-gif/coil.decode/is-web-p.html","searchKeys":["isWebP","fun DecodeUtils.isWebP(source: BufferedSource): Boolean","coil.decode.isWebP"]},{"name":"fun ImageRequest.Builder.animatedTransformation(animatedTransformation: AnimatedTransformation): ImageRequest.Builder","description":"coil.request.animatedTransformation","location":"coil-gif/coil.request/animated-transformation.html","searchKeys":["animatedTransformation","fun ImageRequest.Builder.animatedTransformation(animatedTransformation: AnimatedTransformation): ImageRequest.Builder","coil.request.animatedTransformation"]},{"name":"fun ImageRequest.Builder.onAnimationEnd(callback: () -> Unit?): ImageRequest.Builder","description":"coil.request.onAnimationEnd","location":"coil-gif/coil.request/on-animation-end.html","searchKeys":["onAnimationEnd","fun ImageRequest.Builder.onAnimationEnd(callback: () -> Unit?): ImageRequest.Builder","coil.request.onAnimationEnd"]},{"name":"fun ImageRequest.Builder.onAnimationStart(callback: () -> Unit?): ImageRequest.Builder","description":"coil.request.onAnimationStart","location":"coil-gif/coil.request/on-animation-start.html","searchKeys":["onAnimationStart","fun ImageRequest.Builder.onAnimationStart(callback: () -> Unit?): ImageRequest.Builder","coil.request.onAnimationStart"]},{"name":"fun ImageRequest.Builder.repeatCount(repeatCount: Int): ImageRequest.Builder","description":"coil.request.repeatCount","location":"coil-gif/coil.request/repeat-count.html","searchKeys":["repeatCount","fun ImageRequest.Builder.repeatCount(repeatCount: Int): ImageRequest.Builder","coil.request.repeatCount"]},{"name":"fun Parameters.animatedTransformation(): AnimatedTransformation?","description":"coil.request.animatedTransformation","location":"coil-gif/coil.request/animated-transformation.html","searchKeys":["animatedTransformation","fun Parameters.animatedTransformation(): AnimatedTransformation?","coil.request.animatedTransformation"]},{"name":"fun Parameters.animationEndCallback(): () -> Unit?","description":"coil.request.animationEndCallback","location":"coil-gif/coil.request/animation-end-callback.html","searchKeys":["animationEndCallback","fun Parameters.animationEndCallback(): () -> Unit?","coil.request.animationEndCallback"]},{"name":"fun Parameters.animationStartCallback(): () -> Unit?","description":"coil.request.animationStartCallback","location":"coil-gif/coil.request/animation-start-callback.html","searchKeys":["animationStartCallback","fun Parameters.animationStartCallback(): () -> Unit?","coil.request.animationStartCallback"]},{"name":"fun Parameters.repeatCount(): Int?","description":"coil.request.repeatCount","location":"coil-gif/coil.request/repeat-count.html","searchKeys":["repeatCount","fun Parameters.repeatCount(): Int?","coil.request.repeatCount"]},{"name":"fun getAnimatedTransformation(): AnimatedTransformation?","description":"coil.drawable.MovieDrawable.getAnimatedTransformation","location":"coil-gif/coil.drawable/-movie-drawable/get-animated-transformation.html","searchKeys":["getAnimatedTransformation","fun getAnimatedTransformation(): AnimatedTransformation?","coil.drawable.MovieDrawable.getAnimatedTransformation"]},{"name":"fun getRepeatCount(): Int","description":"coil.drawable.MovieDrawable.getRepeatCount","location":"coil-gif/coil.drawable/-movie-drawable/get-repeat-count.html","searchKeys":["getRepeatCount","fun getRepeatCount(): Int","coil.drawable.MovieDrawable.getRepeatCount"]},{"name":"fun interface AnimatedTransformation","description":"coil.transform.AnimatedTransformation","location":"coil-gif/coil.transform/-animated-transformation/index.html","searchKeys":["AnimatedTransformation","fun interface AnimatedTransformation","coil.transform.AnimatedTransformation"]},{"name":"fun setAnimatedTransformation(animatedTransformation: AnimatedTransformation?)","description":"coil.drawable.MovieDrawable.setAnimatedTransformation","location":"coil-gif/coil.drawable/-movie-drawable/set-animated-transformation.html","searchKeys":["setAnimatedTransformation","fun setAnimatedTransformation(animatedTransformation: AnimatedTransformation?)","coil.drawable.MovieDrawable.setAnimatedTransformation"]},{"name":"fun setRepeatCount(repeatCount: Int)","description":"coil.drawable.MovieDrawable.setRepeatCount","location":"coil-gif/coil.drawable/-movie-drawable/set-repeat-count.html","searchKeys":["setRepeatCount","fun setRepeatCount(repeatCount: Int)","coil.drawable.MovieDrawable.setRepeatCount"]},{"name":"fun valueOf(value: String): PixelOpacity","description":"coil.transform.PixelOpacity.valueOf","location":"coil-gif/coil.transform/-pixel-opacity/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PixelOpacity","coil.transform.PixelOpacity.valueOf"]},{"name":"fun values(): Array<PixelOpacity>","description":"coil.transform.PixelOpacity.values","location":"coil-gif/coil.transform/-pixel-opacity/values.html","searchKeys":["values","fun values(): Array<PixelOpacity>","coil.transform.PixelOpacity.values"]},{"name":"object Companion","description":"coil.decode.GifDecoder.Companion","location":"coil-gif/coil.decode/-gif-decoder/-companion/index.html","searchKeys":["Companion","object Companion","coil.decode.GifDecoder.Companion"]},{"name":"object Companion","description":"coil.drawable.MovieDrawable.Companion","location":"coil-gif/coil.drawable/-movie-drawable/-companion/index.html","searchKeys":["Companion","object Companion","coil.drawable.MovieDrawable.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.decode.GifDecoder.Factory.equals","location":"coil-gif/coil.decode/-gif-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.decode.GifDecoder.Factory.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.decode.ImageDecoderDecoder.Factory.equals","location":"coil-gif/coil.decode/-image-decoder-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.decode.ImageDecoderDecoder.Factory.equals"]},{"name":"open override fun clearAnimationCallbacks()","description":"coil.drawable.MovieDrawable.clearAnimationCallbacks","location":"coil-gif/coil.drawable/-movie-drawable/clear-animation-callbacks.html","searchKeys":["clearAnimationCallbacks","open override fun clearAnimationCallbacks()","coil.drawable.MovieDrawable.clearAnimationCallbacks"]},{"name":"open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","description":"coil.decode.GifDecoder.Factory.create","location":"coil-gif/coil.decode/-gif-decoder/-factory/create.html","searchKeys":["create","open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","coil.decode.GifDecoder.Factory.create"]},{"name":"open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","description":"coil.decode.ImageDecoderDecoder.Factory.create","location":"coil-gif/coil.decode/-image-decoder-decoder/-factory/create.html","searchKeys":["create","open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","coil.decode.ImageDecoderDecoder.Factory.create"]},{"name":"open override fun draw(canvas: Canvas)","description":"coil.drawable.MovieDrawable.draw","location":"coil-gif/coil.drawable/-movie-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","coil.drawable.MovieDrawable.draw"]},{"name":"open override fun draw(canvas: Canvas)","description":"coil.drawable.ScaleDrawable.draw","location":"coil-gif/coil.drawable/-scale-drawable/draw.html","searchKeys":["draw","open override fun draw(canvas: Canvas)","coil.drawable.ScaleDrawable.draw"]},{"name":"open override fun getAlpha(): Int","description":"coil.drawable.ScaleDrawable.getAlpha","location":"coil-gif/coil.drawable/-scale-drawable/get-alpha.html","searchKeys":["getAlpha","open override fun getAlpha(): Int","coil.drawable.ScaleDrawable.getAlpha"]},{"name":"open override fun getColorFilter(): ColorFilter?","description":"coil.drawable.ScaleDrawable.getColorFilter","location":"coil-gif/coil.drawable/-scale-drawable/get-color-filter.html","searchKeys":["getColorFilter","open override fun getColorFilter(): ColorFilter?","coil.drawable.ScaleDrawable.getColorFilter"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"coil.drawable.MovieDrawable.getIntrinsicHeight","location":"coil-gif/coil.drawable/-movie-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","coil.drawable.MovieDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicHeight(): Int","description":"coil.drawable.ScaleDrawable.getIntrinsicHeight","location":"coil-gif/coil.drawable/-scale-drawable/get-intrinsic-height.html","searchKeys":["getIntrinsicHeight","open override fun getIntrinsicHeight(): Int","coil.drawable.ScaleDrawable.getIntrinsicHeight"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"coil.drawable.MovieDrawable.getIntrinsicWidth","location":"coil-gif/coil.drawable/-movie-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","coil.drawable.MovieDrawable.getIntrinsicWidth"]},{"name":"open override fun getIntrinsicWidth(): Int","description":"coil.drawable.ScaleDrawable.getIntrinsicWidth","location":"coil-gif/coil.drawable/-scale-drawable/get-intrinsic-width.html","searchKeys":["getIntrinsicWidth","open override fun getIntrinsicWidth(): Int","coil.drawable.ScaleDrawable.getIntrinsicWidth"]},{"name":"open override fun hashCode(): Int","description":"coil.decode.GifDecoder.Factory.hashCode","location":"coil-gif/coil.decode/-gif-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.decode.GifDecoder.Factory.hashCode"]},{"name":"open override fun hashCode(): Int","description":"coil.decode.ImageDecoderDecoder.Factory.hashCode","location":"coil-gif/coil.decode/-image-decoder-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.decode.ImageDecoderDecoder.Factory.hashCode"]},{"name":"open override fun invalidateDrawable(who: Drawable)","description":"coil.drawable.ScaleDrawable.invalidateDrawable","location":"coil-gif/coil.drawable/-scale-drawable/invalidate-drawable.html","searchKeys":["invalidateDrawable","open override fun invalidateDrawable(who: Drawable)","coil.drawable.ScaleDrawable.invalidateDrawable"]},{"name":"open override fun isRunning(): Boolean","description":"coil.drawable.MovieDrawable.isRunning","location":"coil-gif/coil.drawable/-movie-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","coil.drawable.MovieDrawable.isRunning"]},{"name":"open override fun isRunning(): Boolean","description":"coil.drawable.ScaleDrawable.isRunning","location":"coil-gif/coil.drawable/-scale-drawable/is-running.html","searchKeys":["isRunning","open override fun isRunning(): Boolean","coil.drawable.ScaleDrawable.isRunning"]},{"name":"open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","description":"coil.drawable.MovieDrawable.registerAnimationCallback","location":"coil-gif/coil.drawable/-movie-drawable/register-animation-callback.html","searchKeys":["registerAnimationCallback","open override fun registerAnimationCallback(callback: Animatable2Compat.AnimationCallback)","coil.drawable.MovieDrawable.registerAnimationCallback"]},{"name":"open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","description":"coil.drawable.ScaleDrawable.scheduleDrawable","location":"coil-gif/coil.drawable/-scale-drawable/schedule-drawable.html","searchKeys":["scheduleDrawable","open override fun scheduleDrawable(who: Drawable, what: Runnable, when: Long)","coil.drawable.ScaleDrawable.scheduleDrawable"]},{"name":"open override fun setAlpha(alpha: Int)","description":"coil.drawable.MovieDrawable.setAlpha","location":"coil-gif/coil.drawable/-movie-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","coil.drawable.MovieDrawable.setAlpha"]},{"name":"open override fun setAlpha(alpha: Int)","description":"coil.drawable.ScaleDrawable.setAlpha","location":"coil-gif/coil.drawable/-scale-drawable/set-alpha.html","searchKeys":["setAlpha","open override fun setAlpha(alpha: Int)","coil.drawable.ScaleDrawable.setAlpha"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"coil.drawable.MovieDrawable.setColorFilter","location":"coil-gif/coil.drawable/-movie-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","coil.drawable.MovieDrawable.setColorFilter"]},{"name":"open override fun setColorFilter(colorFilter: ColorFilter?)","description":"coil.drawable.ScaleDrawable.setColorFilter","location":"coil-gif/coil.drawable/-scale-drawable/set-color-filter.html","searchKeys":["setColorFilter","open override fun setColorFilter(colorFilter: ColorFilter?)","coil.drawable.ScaleDrawable.setColorFilter"]},{"name":"open override fun setTint(tintColor: Int)","description":"coil.drawable.ScaleDrawable.setTint","location":"coil-gif/coil.drawable/-scale-drawable/set-tint.html","searchKeys":["setTint","open override fun setTint(tintColor: Int)","coil.drawable.ScaleDrawable.setTint"]},{"name":"open override fun setTintBlendMode(blendMode: BlendMode?)","description":"coil.drawable.ScaleDrawable.setTintBlendMode","location":"coil-gif/coil.drawable/-scale-drawable/set-tint-blend-mode.html","searchKeys":["setTintBlendMode","open override fun setTintBlendMode(blendMode: BlendMode?)","coil.drawable.ScaleDrawable.setTintBlendMode"]},{"name":"open override fun setTintList(tint: ColorStateList?)","description":"coil.drawable.ScaleDrawable.setTintList","location":"coil-gif/coil.drawable/-scale-drawable/set-tint-list.html","searchKeys":["setTintList","open override fun setTintList(tint: ColorStateList?)","coil.drawable.ScaleDrawable.setTintList"]},{"name":"open override fun setTintMode(tintMode: PorterDuff.Mode?)","description":"coil.drawable.ScaleDrawable.setTintMode","location":"coil-gif/coil.drawable/-scale-drawable/set-tint-mode.html","searchKeys":["setTintMode","open override fun setTintMode(tintMode: PorterDuff.Mode?)","coil.drawable.ScaleDrawable.setTintMode"]},{"name":"open override fun start()","description":"coil.drawable.MovieDrawable.start","location":"coil-gif/coil.drawable/-movie-drawable/start.html","searchKeys":["start","open override fun start()","coil.drawable.MovieDrawable.start"]},{"name":"open override fun start()","description":"coil.drawable.ScaleDrawable.start","location":"coil-gif/coil.drawable/-scale-drawable/start.html","searchKeys":["start","open override fun start()","coil.drawable.ScaleDrawable.start"]},{"name":"open override fun stop()","description":"coil.drawable.MovieDrawable.stop","location":"coil-gif/coil.drawable/-movie-drawable/stop.html","searchKeys":["stop","open override fun stop()","coil.drawable.MovieDrawable.stop"]},{"name":"open override fun stop()","description":"coil.drawable.ScaleDrawable.stop","location":"coil-gif/coil.drawable/-scale-drawable/stop.html","searchKeys":["stop","open override fun stop()","coil.drawable.ScaleDrawable.stop"]},{"name":"open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","description":"coil.drawable.MovieDrawable.unregisterAnimationCallback","location":"coil-gif/coil.drawable/-movie-drawable/unregister-animation-callback.html","searchKeys":["unregisterAnimationCallback","open override fun unregisterAnimationCallback(callback: Animatable2Compat.AnimationCallback): Boolean","coil.drawable.MovieDrawable.unregisterAnimationCallback"]},{"name":"open override fun unscheduleDrawable(who: Drawable, what: Runnable)","description":"coil.drawable.ScaleDrawable.unscheduleDrawable","location":"coil-gif/coil.drawable/-scale-drawable/unschedule-drawable.html","searchKeys":["unscheduleDrawable","open override fun unscheduleDrawable(who: Drawable, what: Runnable)","coil.drawable.ScaleDrawable.unscheduleDrawable"]},{"name":"open suspend override fun decode(): DecodeResult","description":"coil.decode.GifDecoder.decode","location":"coil-gif/coil.decode/-gif-decoder/decode.html","searchKeys":["decode","open suspend override fun decode(): DecodeResult","coil.decode.GifDecoder.decode"]},{"name":"open suspend override fun decode(): DecodeResult","description":"coil.decode.ImageDecoderDecoder.decode","location":"coil-gif/coil.decode/-image-decoder-decoder/decode.html","searchKeys":["decode","open suspend override fun decode(): DecodeResult","coil.decode.ImageDecoderDecoder.decode"]},{"name":"val child: Drawable","description":"coil.drawable.ScaleDrawable.child","location":"coil-gif/coil.drawable/-scale-drawable/child.html","searchKeys":["child","val child: Drawable","coil.drawable.ScaleDrawable.child"]},{"name":"val config: Bitmap.Config","description":"coil.drawable.MovieDrawable.config","location":"coil-gif/coil.drawable/-movie-drawable/config.html","searchKeys":["config","val config: Bitmap.Config","coil.drawable.MovieDrawable.config"]},{"name":"val entries: EnumEntries<PixelOpacity>","description":"coil.transform.PixelOpacity.entries","location":"coil-gif/coil.transform/-pixel-opacity/entries.html","searchKeys":["entries","val entries: EnumEntries<PixelOpacity>","coil.transform.PixelOpacity.entries"]},{"name":"val scale: Scale","description":"coil.drawable.MovieDrawable.scale","location":"coil-gif/coil.drawable/-movie-drawable/scale.html","searchKeys":["scale","val scale: Scale","coil.drawable.MovieDrawable.scale"]},{"name":"val scale: Scale","description":"coil.drawable.ScaleDrawable.scale","location":"coil-gif/coil.drawable/-scale-drawable/scale.html","searchKeys":["scale","val scale: Scale","coil.drawable.ScaleDrawable.scale"]},{"name":"class Factory constructor(val useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder.Factory","description":"coil.decode.SvgDecoder.Factory","location":"coil-svg/coil.decode/-svg-decoder/-factory/index.html","searchKeys":["Factory","class Factory constructor(val useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder.Factory","coil.decode.SvgDecoder.Factory"]},{"name":"class SvgDecoder constructor(source: ImageSource, options: Options, val useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder","description":"coil.decode.SvgDecoder","location":"coil-svg/coil.decode/-svg-decoder/index.html","searchKeys":["SvgDecoder","class SvgDecoder constructor(source: ImageSource, options: Options, val useViewBoundsAsIntrinsicSize: Boolean = true) : Decoder","coil.decode.SvgDecoder"]},{"name":"const val CSS_KEY: String","description":"coil.decode.SvgDecoder.Companion.CSS_KEY","location":"coil-svg/coil.decode/-svg-decoder/-companion/-c-s-s_-k-e-y.html","searchKeys":["CSS_KEY","const val CSS_KEY: String","coil.decode.SvgDecoder.Companion.CSS_KEY"]},{"name":"constructor(source: ImageSource, options: Options, useViewBoundsAsIntrinsicSize: Boolean = true)","description":"coil.decode.SvgDecoder.SvgDecoder","location":"coil-svg/coil.decode/-svg-decoder/-svg-decoder.html","searchKeys":["SvgDecoder","constructor(source: ImageSource, options: Options, useViewBoundsAsIntrinsicSize: Boolean = true)","coil.decode.SvgDecoder.SvgDecoder"]},{"name":"constructor(useViewBoundsAsIntrinsicSize: Boolean = true)","description":"coil.decode.SvgDecoder.Factory.Factory","location":"coil-svg/coil.decode/-svg-decoder/-factory/-factory.html","searchKeys":["Factory","constructor(useViewBoundsAsIntrinsicSize: Boolean = true)","coil.decode.SvgDecoder.Factory.Factory"]},{"name":"fun DecodeUtils.isSvg(source: BufferedSource): Boolean","description":"coil.decode.isSvg","location":"coil-svg/coil.decode/is-svg.html","searchKeys":["isSvg","fun DecodeUtils.isSvg(source: BufferedSource): Boolean","coil.decode.isSvg"]},{"name":"fun ImageRequest.Builder.css(css: String): ImageRequest.Builder","description":"coil.request.css","location":"coil-svg/coil.request/css.html","searchKeys":["css","fun ImageRequest.Builder.css(css: String): ImageRequest.Builder","coil.request.css"]},{"name":"fun Parameters.css(): String?","description":"coil.request.css","location":"coil-svg/coil.request/css.html","searchKeys":["css","fun Parameters.css(): String?","coil.request.css"]},{"name":"object Companion","description":"coil.decode.SvgDecoder.Companion","location":"coil-svg/coil.decode/-svg-decoder/-companion/index.html","searchKeys":["Companion","object Companion","coil.decode.SvgDecoder.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"coil.decode.SvgDecoder.Factory.equals","location":"coil-svg/coil.decode/-svg-decoder/-factory/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","coil.decode.SvgDecoder.Factory.equals"]},{"name":"open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","description":"coil.decode.SvgDecoder.Factory.create","location":"coil-svg/coil.decode/-svg-decoder/-factory/create.html","searchKeys":["create","open override fun create(result: SourceResult, options: Options, imageLoader: ImageLoader): Decoder?","coil.decode.SvgDecoder.Factory.create"]},{"name":"open override fun hashCode(): Int","description":"coil.decode.SvgDecoder.Factory.hashCode","location":"coil-svg/coil.decode/-svg-decoder/-factory/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","coil.decode.SvgDecoder.Factory.hashCode"]},{"name":"open suspend override fun decode(): DecodeResult","description":"coil.decode.SvgDecoder.decode","location":"coil-svg/coil.decode/-svg-decoder/decode.html","searchKeys":["decode","open suspend override fun decode(): DecodeResult","coil.decode.SvgDecoder.decode"]},{"name":"val useViewBoundsAsIntrinsicSize: Boolean = true","description":"coil.decode.SvgDecoder.Factory.useViewBoundsAsIntrinsicSize","location":"coil-svg/coil.decode/-svg-decoder/-factory/use-view-bounds-as-intrinsic-size.html","searchKeys":["useViewBoundsAsIntrinsicSize","val useViewBoundsAsIntrinsicSize: Boolean = true","coil.decode.SvgDecoder.Factory.useViewBoundsAsIntrinsicSize"]},{"name":"val useViewBoundsAsIntrinsicSize: Boolean = true","description":"coil.decode.SvgDecoder.useViewBoundsAsIntrinsicSize","location":"coil-svg/coil.decode/-svg-decoder/use-view-bounds-as-intrinsic-size.html","searchKeys":["useViewBoundsAsIntrinsicSize","val useViewBoundsAsIntrinsicSize: Boolean = true","coil.decode.SvgDecoder.useViewBoundsAsIntrinsicSize"]},{"name":"abstract fun newImageLoader(): ImageLoader","description":"coil.ImageLoaderFactory.newImageLoader","location":"coil-singleton/coil/-image-loader-factory/new-image-loader.html","searchKeys":["newImageLoader","abstract fun newImageLoader(): ImageLoader","coil.ImageLoaderFactory.newImageLoader"]},{"name":"fun imageLoader(context: Context): ImageLoader","description":"coil.Coil.imageLoader","location":"coil-singleton/coil/-coil/image-loader.html","searchKeys":["imageLoader","fun imageLoader(context: Context): ImageLoader","coil.Coil.imageLoader"]},{"name":"fun interface ImageLoaderFactory","description":"coil.ImageLoaderFactory","location":"coil-singleton/coil/-image-loader-factory/index.html","searchKeys":["ImageLoaderFactory","fun interface ImageLoaderFactory","coil.ImageLoaderFactory"]},{"name":"fun reset()","description":"coil.Coil.reset","location":"coil-singleton/coil/-coil/reset.html","searchKeys":["reset","fun reset()","coil.Coil.reset"]},{"name":"fun setImageLoader(factory: ImageLoaderFactory)","description":"coil.Coil.setImageLoader","location":"coil-singleton/coil/-coil/set-image-loader.html","searchKeys":["setImageLoader","fun setImageLoader(factory: ImageLoaderFactory)","coil.Coil.setImageLoader"]},{"name":"fun setImageLoader(imageLoader: ImageLoader)","description":"coil.Coil.setImageLoader","location":"coil-singleton/coil/-coil/set-image-loader.html","searchKeys":["setImageLoader","fun setImageLoader(imageLoader: ImageLoader)","coil.Coil.setImageLoader"]},{"name":"inline fun ImageView.dispose()","description":"coil.dispose","location":"coil-singleton/coil/dispose.html","searchKeys":["dispose","inline fun ImageView.dispose()","coil.dispose"]},{"name":"inline fun ImageView.load(data: Any?, imageLoader: ImageLoader = context.imageLoader, builder: ImageRequest.Builder.() -> Unit = {}): Disposable","description":"coil.load","location":"coil-singleton/coil/load.html","searchKeys":["load","inline fun ImageView.load(data: Any?, imageLoader: ImageLoader = context.imageLoader, builder: ImageRequest.Builder.() -> Unit = {}): Disposable","coil.load"]},{"name":"object Coil","description":"coil.Coil","location":"coil-singleton/coil/-coil/index.html","searchKeys":["Coil","object Coil","coil.Coil"]},{"name":"val Context.imageLoader: ImageLoader","description":"coil.imageLoader","location":"coil-singleton/coil/image-loader.html","searchKeys":["imageLoader","val Context.imageLoader: ImageLoader","coil.imageLoader"]},{"name":"val ImageView.result: ImageResult?","description":"coil.result","location":"coil-singleton/coil/result.html","searchKeys":["result","val ImageView.result: ImageResult?","coil.result"]}]